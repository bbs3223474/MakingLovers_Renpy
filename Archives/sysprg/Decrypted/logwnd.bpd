	load_base();
	push_word(0x3ad8);
	add();
	store_base();
	push_base_offset(0x3ac8);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3ac4);
	push_byte(0x0);
	move(0x2);
	push_word(0xb80);
	push_byte(0x1);
	move(0x2);
	push_byte(0x0);
	push_offset(L03321);
	call();
	push_base_offset(0x3ac0);
	move_arg(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp3(0x97);
	push_dword(0x448c0);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0xf10);
	memcpy();
	push_word(0xb3c);
	load(0x2);
	push_word(0xb40);
	load(0x2);
	bool_and();
	push_dword(0x9fab8);
	push_dword(0x234b8);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_word(0xb8c);
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L00093);
	jc(0x1);
	push_dword(0x448c0);
	push_dword(0x45bd0);
	push_dword(0x457d0);
	push_offset(L012f1);
	call();

L00093:
	push_word(0x600);
	push_byte(0x7d);
	add();
	push_byte(0x1c);
	push_byte(0x1a);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	push_byte(0x8);
	add();
	push_byte(0xe);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x6);
	sub();
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_word(0x600);
	push_byte(0x7e);
	add();
	push_byte(0x1c);
	push_byte(0x1a);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	push_byte(0xe);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x6);
	sub();
	push_byte(0x8);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_word(0x600);
	push_byte(0x53);
	add();
	push_byte(0x21);
	push_word(0x209);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x600);
	push_byte(0x53);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_offset(L01c9f);
	call();
	push_base_offset(0x3abc);
	move_arg(0x2);
	push_base_offset(0x3ab8);
	push_word(0x7d0);
	load(0x2);
	sys1(0x9a);
	push_byte(0x10);
	push_dword(0x25e3c);
	mul();
	sys1(0x20);
	push_base_offset(0x3ab4);
	move_arg(0x2);
	push_base_offset(0x3ab0);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3ab0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3ab0);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x12d4);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x3aa4);
	move(0x2);
	push_base_offset(0x12d4);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x3858);
	move(0x2);
	push_base_offset(0x12d4);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x2c18);
	move(0x2);
	push_base_offset(0x12d4);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x1fd8);
	move(0x2);
	push_base_offset(0x12d4);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x1398);
	move(0x2);
	push_base_offset(0x1194);
	push_byte(0x0);
	add();
	push_byte(0x5);
	move(0x2);
	push_base_offset(0x1194);
	push_byte(0x4);
	add();
	push_base_offset(0x12d4);
	move(0x2);
	push_base_offset(0x1194);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1194);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1194);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1194);
	push_byte(0x14);
	add();
	push_word(0x4000);
	push_dword(0x8000);
	or();
	push_dword(0x40000000);
	or();
	move(0x2);
	push_base_offset(0x1194);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1194);
	push_byte(0x1c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1194);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1194);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1194);
	push_base_offset(0x3ab4);
	load(0x2);
	push_base_offset(0x3ab8);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x3abc);
	load(0x2);
	push_byte(0x1);
	geq();
	push_offset(L01d72);
	call();
	push_base_offset(0x1068);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1064);
	push_byte(0x0);
	move(0x2);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x80);
	push_base_offset(0x1060);
	move_arg(0x2);
	push_base_offset(0x1060);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x8a0);
	grp1(0x85);
	push_base_offset(0x1060);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_word(0x600);
	push_byte(0x14);
	add();
	grp1(0x86);
	push_base_offset(0x1060);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0x88);
	push_base_offset(0x1060);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x88);
	push_base_offset(0x1060);
	load(0x2);
	push_byte(0x0);
	grp2(0x89);
	push_base_offset(0x1060);
	load(0x2);
	push_byte(0x1);
	grp1(0x87);
	push_base_offset(0x1060);
	load(0x2);
	push_base_offset(0x1194);
	grp1(0xb7);
	push_base_offset(0x116c);
	push_base_offset(0x1068);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1060);
	load(0x2);
	move(0x2);
	push_base_offset(0x1068);
	push_base_offset(0x1068);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x105c);
	push_word(0x600);
	push_byte(0x8);
	add();
	grp1(0x16);
	grp1(0x50);
	push_base_offset(0x1044);
	move_arg(0x2);
	push_base_offset(0x1044);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x600);
	push_byte(0x8);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x8b0);
	grp1(0x56);
	push_base_offset(0x1044);
	load(0x2);
	push_word(0x600);
	push_byte(0xb);
	add();
	grp1(0x3c);
	push_base_offset(0x1044);
	load(0x2);
	grp1(0xd0);
	push_base_offset(0x1040);
	move_arg(0x2);
	push_base_offset(0x1040);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x3abc);
	load(0x2);
	push_byte(0x1);
	add();
	grp1(0xd8);
	push_base_offset(0x1040);
	load(0x2);
	push_base_offset(0x105c);
	push_byte(0x8);
	add();
	load(0x2);
	push_word(0x209);
	grp1(0xd9);
	push_base_offset(0x1040);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x3abc);
	load(0x2);
	grp1(0xd6);
	push_base_offset(0x1040);
	load(0x2);
	push_word(0x46b);
	push_byte(0x0);
	sub();
	push_byte(0x51);
	push_byte(0x0);
	add();
	grp1(0xd5);
	push_base_offset(0x1040);
	load(0x2);
	push_byte(0x1);
	grp1(0xd4);
	push_base_offset(0x1044);
	load(0x2);
	push_byte(0x0);
	grp1(0x54);
	push_base_offset(0x1168);
	push_base_offset(0x1064);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1044);
	load(0x2);
	move(0x2);
	push_base_offset(0x1064);
	push_base_offset(0x1064);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x103c);
	push_base_offset(0x1168);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x1038);
	push_base_offset(0x1064);
	load(0x2);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x116c);
	push_base_offset(0x103c);
	push_base_offset(0x1038);
	push_base_offset(0x1068);
	load(0x2);
	push_word(0x96);
	push_word(0x47c);
	load(0x2);
	call();
	push_base_offset(0x1040);
	load(0x2);
	grp1(0xde);
	push_base_offset(0x1060);
	load(0x2);
	grp2(0xb8);
	push_base_offset(0x1034);
	move_arg(0x2);
	push_word(0x46c);
	push_base_offset(0x1034);
	load(0x2);
	move(0x2);
	push_base_offset(0x100c);
	push_base_offset(0x3abc);
	load(0x2);
	move(0x2);
	push_base_offset(0xe4);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xdc);
	push_byte(0x0);
	move(0x2);
	push_word(0xb84);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xffc);
	push_word(0xf10);
	memclr();
	push_base_offset(0xb8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xb4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x70);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x68);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x64);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1000);
	push_byte(0x0);
	move(0x2);

L00452:
	push_base_offset(0x70);
	push_base_offset(0x70);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_base_offset(0x1000);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x26);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x6c);
	push_base_offset(0x6c);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_base_offset(0x1000);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x28);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x68);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_base_offset(0x1000);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x21);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x64);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_base_offset(0x1000);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x22);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x1000);
	push_base_offset(0x1000);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1000);
	load(0x2);
	push_byte(0xc);
	lt();
	push_offset(L00452);
	jc(0x0);
	push_base_offset(0x70);
	load(0x2);
	push_byte(0x0);
	push_byte(0x26);
	ternary();
	push_base_offset(0xb0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x6c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x28);
	ternary();
	push_base_offset(0xa8);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x0);
	push_byte(0x21);
	ternary();
	push_base_offset(0xa0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x0);
	push_byte(0x22);
	ternary();
	push_base_offset(0x98);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0xb0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xa8);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xa0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_byte(0x26);
	push_base_offset(0x70);
	load(0x2);
	bool_zero();
	sys2(0x10);
	push_byte(0x28);
	push_base_offset(0x6c);
	load(0x2);
	bool_zero();
	sys2(0x10);
	push_byte(0x21);
	push_base_offset(0x68);
	load(0x2);
	bool_zero();
	sys2(0x10);
	push_byte(0x22);
	push_base_offset(0x64);
	load(0x2);
	bool_zero();
	sys2(0x10);
	push_offset(L005c3);
	jmp();

L005a0:
	push_base_offset(0x1194);
	push_base_offset(0x3ab4);
	load(0x2);
	push_base_offset(0x3ab8);
	load(0x2);
	push_base_offset(0x100c);
	load(0x2);
	push_base_offset(0xe4);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	push_byte(0x1);
	geq();
	push_offset(L01d72);
	call();

L005c3:
	push_base_offset(0x1034);
	load(0x2);
	push_base_offset(0x1194);
	grp2(0xba);

L005cd:
	push_base_offset(0xe0);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xb0);
	sys1(0x12);
	push_base_offset(0x90);
	move_arg(0x2);
	push_base_offset(0xa8);
	sys1(0x12);
	push_base_offset(0x8c);
	move_arg(0x2);
	push_base_offset(0xa0);
	sys1(0x12);
	push_base_offset(0x88);
	move_arg(0x2);
	push_base_offset(0x98);
	sys1(0x12);
	push_base_offset(0x84);
	move_arg(0x2);

L005fc:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L0116a);
	jc(0x0);
	push_word(0x404);
	load(0x2);
	push_offset(L005fc);
	jc(0x0);
	push_base_offset(0x3ad0);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5c);
	push_byte(0x0);
	move(0x2);
	sys1(0xf);
	push_offset(L00655);
	jc(0x1);
	usr1(0x6);
	push_offset(L00655);
	jc(0x1);
	push_word(0x450);
	load(0x2);
	push_offset(L00655);
	jc(0x0);
	push_word(0x918);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00655);
	jc(0x0);
	push_base_offset(0x1044);
	load(0x2);
	grp1(0x3d);
	push_base_offset(0x5c);
	move_arg(0x2);

L00655:
	push_base_offset(0x60);
	push_word(0x918);
	load(0x2);
	push_base_offset(0x1040);
	load(0x2);
	eq();
	move(0x2);
	push_base_offset(0x3ad4);
	push_base_offset(0x5c);
	load(0x2);
	push_base_offset(0x60);
	load(0x2);
	bool_or();
	push_base_offset(0x3abc);
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	move(0x2);
	push_base_offset(0xb8);
	load(0x2);
	push_base_offset(0x3ad4);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0xb8);
	load(0x2);
	bool_zero();
	push_base_offset(0x3ad4);
	load(0x2);
	bool_and();
	bool_or();
	push_offset(L006cb);
	jc(0x1);
	push_base_offset(0xb8);
	push_base_offset(0xb8);
	load(0x2);
	bool_zero();
	move(0x2);
	push_base_offset(0xb8);
	load(0x2);
	push_word(0x600);
	push_byte(0x8);
	add();
	push_byte(0x1);
	add();
	push_word(0x600);
	push_byte(0x8);
	add();
	ternary();
	push_base_offset(0x3ad0);
	move_arg(0x2);
	push_base_offset(0xb8);
	load(0x2);
	push_offset(L006cb);
	jc(0x1);

L006cb:
	push_base_offset(0x3ad4);
	push_base_offset(0x60);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_base_offset(0x3ad4);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0xb4);
	load(0x2);
	bool_zero();
	push_base_offset(0x3ad4);
	load(0x2);
	bool_and();
	bool_or();
	push_offset(L0073a);
	jc(0x1);
	push_base_offset(0xb4);
	push_base_offset(0xb4);
	load(0x2);
	bool_zero();
	move(0x2);
	push_base_offset(0xb8);
	load(0x2);
	push_word(0x600);
	push_byte(0x8);
	add();
	push_byte(0x1);
	add();
	push_word(0x600);
	push_byte(0x8);
	add();
	ternary();
	push_base_offset(0x3ad0);
	move_arg(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_word(0x600);
	push_byte(0x8);
	add();
	push_byte(0x2);
	add();
	push_base_offset(0x3ad0);
	load(0x2);
	ternary();
	push_base_offset(0x3ad0);
	move_arg(0x2);

L0073a:
	push_base_offset(0x3ad0);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L00757);
	jc(0x0);
	push_base_offset(0x1044);
	load(0x2);
	push_base_offset(0x3ad0);
	load(0x2);
	grp1(0x57);
	push_byte(0x0);
	grp1(0x0);

L00757:
	grp1(0xdb);
	push_base_offset(0x58);
	move_arg(0x2);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00d7e);
	jc(0x0);
	push_base_offset(0x1040);
	load(0x2);
	grp1(0xda);
	push_base_offset(0x3ad0);
	move_arg(0x2);
	push_base_offset(0x3ad0);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L00d7e);
	jc(0x0);
	push_base_offset(0x1040);
	load(0x2);
	grp1(0xd7);
	push_base_offset(0x3ad0);
	move_arg(0x2);
	push_base_offset(0x3acc);
	move_arg(0x2);
	push_base_offset(0x3ad0);
	load(0x2);
	push_base_offset(0x100c);
	load(0x2);
	eq();
	push_offset(L007b3);
	jc(0x0);
	push_base_offset(0x100c);
	push_base_offset(0x3ad0);
	load(0x2);
	move(0x2);
	push_offset(L005a0);
	jmp();

L007b3:
	push_base_offset(0xffc);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L0096b);
	jc(0x1);
	sys1(0x4);
	push_base_offset(0x54);
	move_arg(0x2);
	push_base_offset(0x54);
	load(0x2);
	push_base_offset(0xe8);
	load(0x2);
	geq();
	push_offset(L0096b);
	jc(0x1);

L007da:
	push_base_offset(0xec);
	load(0x2);
	push_base_offset(0xffc);
	push_byte(0x8);
	add();
	load(0x2);
	geq();
	push_offset(L008ae);
	jc(0x0);
	push_base_offset(0x48);
	push_base_offset(0xffc);
	push_byte(0xc);
	add();
	push_base_offset(0xec);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x38);
	memcpy();
	push_base_offset(0x48);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L0089d);
	jc(0x1);
	push_base_offset(0x50);
	push_byte(0x20);
	push_base_offset(0xffc);
	push_word(0x710);
	add();
	push_base_offset(0x48);
	push_byte(0x34);
	add();
	load(0x2);
	add();
	push_offset(L02f45);
	call();
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x4c);
	load(0x2);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x50);
	move_arg(0x2);
	push_byte(0x46);
	push_string("data04xxx.arc");
	push_base_offset(0xffc);
	push_word(0x710);
	add();
	push_base_offset(0x48);
	push_byte(0x34);
	add();
	load(0x2);
	add();
	snd1(0x20);
	push_byte(0x46);
	push_base_offset(0x50);
	load(0x2);
	snd1(0x9);
	push_byte(0x46);
	push_base_offset(0x48);
	push_byte(0x2c);
	add();
	load(0x2);
	push_base_offset(0x48);
	push_byte(0x30);
	add();
	load(0x2);
	snd1(0x24);
	push_base_offset(0x3ad0);
	move_arg(0x2);
	push_base_offset(0xe8);
	push_base_offset(0x54);
	load(0x2);
	push_base_offset(0x3ad0);
	load(0x2);
	add();
	push_word(0xfa);
	add();
	move(0x2);
	push_base_offset(0xec);
	push_base_offset(0xec);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L0096b);
	jmp();

L0089d:
	push_base_offset(0xec);
	push_base_offset(0xec);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L007da);
	jmp();

L008ae:
	push_base_offset(0x3acc);
	push_base_offset(0xe4);
	load(0x2);
	push_base_offset(0x100c);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x3acc);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x3acc);
	load(0x2);
	push_byte(0x10);
	lt();
	bool_and();
	push_offset(L00959);
	jc(0x1);
	push_base_offset(0x1fd8);
	push_base_offset(0x3acc);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L00959);
	jc(0x1);
	push_base_offset(0x1fd8);
	push_base_offset(0x3acc);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1fd8);
	push_base_offset(0x3acc);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0xd8);
	push_dword(0x10000004);
	push_byte(0x3);
	push_base_offset(0x3acc);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x1fd8);
	push_base_offset(0x3acc);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	cmd_0c(0x2, 0x5);
	push_base_offset(0x1034);
	load(0x2);
	push_byte(0x5);
	push_base_offset(0xd8);
	sys1(0xac);

L00959:
	push_base_offset(0xe4);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xffc);
	push_word(0xf10);
	memclr();

L0096b:
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xb0);
	sys1(0x12);
	push_base_offset(0x80);
	move_arg(0x2);
	push_base_offset(0xa8);
	sys1(0x12);
	push_base_offset(0x7c);
	move_arg(0x2);
	push_base_offset(0xa0);
	sys1(0x12);
	push_base_offset(0x78);
	move_arg(0x2);
	push_base_offset(0x98);
	sys1(0x12);
	push_base_offset(0x74);
	move_arg(0x2);
	push_base_offset(0x3ad0);
	sys1(0x49);
	push_offset(L00a5b);
	jc(0x1);
	push_base_offset(0x3ad0);
	load(0x2);
	push_byte(0xc);
	eq();
	push_offset(L009cb);
	jc(0x1);
	push_base_offset(0x1034);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_offset(L02970);
	call();
	push_base_offset(0x1034);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_offset(L005c3);
	jmp();

L009cb:
	push_base_offset(0x3ad0);
	load(0x2);
	push_byte(0xb);
	eq();
	push_offset(L009f2);
	jc(0x1);
	push_base_offset(0x1034);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_offset(L0295c);
	call();
	push_base_offset(0x1034);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_offset(L00a5b);
	jmp();

L009f2:
	push_base_offset(0x3ad0);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_offset(L00a57);
	jc(0x1);
	push_base_offset(0x3ac8);
	push_base_offset(0x3ad0);
	load(0x2);
	move(0x2);
	push_base_offset(0x3ac8);
	load(0x2);
	push_byte(0x7);
	eq();
	push_byte(0x20);
	push_word(0x134);
	add();
	load(0x1);
	push_base_offset(0x3ac8);
	load(0x2);
	ternary();
	push_base_offset(0x3ac8);
	move_arg(0x2);
	push_base_offset(0x3ac8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x20);
	push_word(0xae);
	add();
	load(0x1);
	push_base_offset(0x3ac4);
	load(0x2);
	ternary();
	push_base_offset(0x3ac4);
	move_arg(0x2);
	push_base_offset(0x116c);
	push_base_offset(0x103c);
	push_base_offset(0x1038);
	push_base_offset(0x1068);
	load(0x2);
	push_word(0x478);
	load(0x2);
	call();

L00a57:
	push_offset(L00d7e);
	jmp();

L00a5b:
	push_base_offset(0x1030);
	push_base_offset(0x1034);
	load(0x2);
	grp1(0xbf);
	push_base_offset(0x1030);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000007);
	eq();
	push_offset(L00add);
	jc(0x1);
	push_base_offset(0x1008);
	push_base_offset(0x1030);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x1004);
	push_base_offset(0x1030);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0xc);
	push_base_offset(0x1030);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x1030);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L00be4);
	jc(0x0);
	push_offset(L00a5b);
	jmp();

L00add:
	push_base_offset(0x1030);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000006);
	eq();
	push_offset(L00b32);
	jc(0x1);
	push_base_offset(0x1008);
	push_base_offset(0x1030);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x1004);
	push_base_offset(0x1030);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L00be4);
	jc(0x0);
	push_offset(L00a5b);
	jmp();

L00b32:
	push_base_offset(0x1030);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000002);
	eq();
	push_offset(L00bd4);
	jc(0x1);
	push_base_offset(0x1008);
	push_base_offset(0x1030);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x1004);
	push_base_offset(0x1030);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0xe0);
	load(0x2);
	push_offset(L00b7d);
	jc(0x1);
	push_base_offset(0xe0);
	push_byte(0x0);
	move(0x2);
	push_offset(L00a5b);
	jmp();

L00b7d:
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x1004);
	load(0x2);
	push_byte(0x0);
	neq();
	bool_and();
	push_offset(L00bc7);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00bc7);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L00bc7);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L00bc7);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00a5b);
	jc(0x1);

L00bc7:
	push_byte(0x0);
	push_byte(0x8);
	add();
	push_offset(L02a78);
	call();
	push_offset(L00a5b);
	jmp();

L00bd4:
	push_base_offset(0x1030);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00a5b);
	jc(0x1);

L00be4:
	push_base_offset(0x1024);
	push_base_offset(0x1034);
	load(0x2);
	grp1(0xbc);
	push_word(0xb84);
	push_base_offset(0x1024);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0x80);
	load(0x2);
	push_base_offset(0x90);
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x7c);
	load(0x2);
	push_base_offset(0x8c);
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x88);
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x74);
	load(0x2);
	push_base_offset(0x84);
	load(0x2);
	eq();
	bool_and();
	move(0x2);
	push_word(0xb84);
	load(0x2);
	push_offset(L005fc);
	jc(0x0);
	push_word(0x444);
	load(0x2);
	push_offset(L005c3);
	jc(0x0);
	push_word(0x450);
	load(0x2);
	push_offset(L005c3);
	jc(0x0);
	push_word(0x918);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L005c3);
	jc(0x0);
	push_base_offset(0x1024);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0116a);
	jc(0x1);
	push_base_offset(0x80);
	load(0x2);
	push_base_offset(0x90);
	load(0x2);
	neq();
	push_offset(L00d82);
	jc(0x0);
	push_base_offset(0x7c);
	load(0x2);
	push_base_offset(0x8c);
	load(0x2);
	neq();
	push_offset(L00dbb);
	jc(0x0);
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x88);
	load(0x2);
	neq();
	push_offset(L00ddc);
	jc(0x0);
	push_base_offset(0x74);
	load(0x2);
	push_base_offset(0x84);
	load(0x2);
	neq();
	push_offset(L00e12);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L00d7e);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x1004);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_offset(L00d3d);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00d3d);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L00d3d);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x0);
	add();
	push_offset(L02a78);
	call();
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00d3d);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00d3d);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00d3d);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L00d3d);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L00d3d);
	jc(0x0);
	push_byte(0x78);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);

L00d3d:
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00e4e);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00f6c);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01075);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L01162);
	jc(0x0);
	push_base_offset(0x1008);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L01166);
	jc(0x0);

L00d7e:
	push_offset(L0116a);
	jmp();

L00d82:
	push_base_offset(0x100c);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x100c);
	load(0x2);
	push_byte(0x1);
	sub();
	push_base_offset(0x100c);
	load(0x2);
	ternary();
	push_base_offset(0x3acc);
	move_arg(0x2);
	push_base_offset(0x3acc);
	load(0x2);
	push_base_offset(0x100c);
	load(0x2);
	eq();
	push_offset(L005cd);
	jc(0x0);
	push_base_offset(0x100c);
	push_base_offset(0x3acc);
	load(0x2);
	move(0x2);
	push_offset(L00f5a);
	jmp();

L00dbb:
	push_base_offset(0x100c);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	lt();
	push_offset(L0116a);
	jc(0x1);
	push_base_offset(0x100c);
	push_base_offset(0x100c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00f5a);
	jmp();

L00ddc:
	push_base_offset(0x100c);
	load(0x2);
	push_byte(0x3);
	gt();
	push_base_offset(0x100c);
	load(0x2);
	push_byte(0x3);
	sub();
	push_byte(0x0);
	ternary();
	push_base_offset(0x3acc);
	move_arg(0x2);
	push_base_offset(0x3acc);
	load(0x2);
	push_base_offset(0x100c);
	load(0x2);
	eq();
	push_offset(L005cd);
	jc(0x0);
	push_base_offset(0x100c);
	push_base_offset(0x3acc);
	load(0x2);
	move(0x2);
	push_offset(L00f5a);
	jmp();

L00e12:
	push_base_offset(0x100c);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	lt();
	push_offset(L0116a);
	jc(0x1);
	push_base_offset(0x100c);
	push_base_offset(0x100c);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x100c);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	lt();
	push_base_offset(0x100c);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	ternary();
	push_base_offset(0x100c);
	move_arg(0x2);
	push_offset(L00f5a);
	jmp();

L00e4e:
	push_base_offset(0x1004);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00e81);
	jc(0x1);
	push_base_offset(0x100c);
	push_base_offset(0x100c);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x100c);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x100c);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x100c);
	move_arg(0x2);
	push_offset(L00f5a);
	jmp();

L00e81:
	push_base_offset(0x1004);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00eca);
	jc(0x1);
	push_base_offset(0x100c);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	lt();
	push_offset(L0116a);
	jc(0x1);
	push_base_offset(0x100c);
	push_base_offset(0x100c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x100c);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	leq();
	push_base_offset(0x100c);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	ternary();
	push_base_offset(0x100c);
	move_arg(0x2);
	push_offset(L00f5a);
	jmp();

L00eca:
	push_base_offset(0x1004);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L005a0);
	jc(0x1);
	push_base_offset(0x3acc);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x105c);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x1);
	sar();
	sub();
	move(0x2);
	push_base_offset(0x3acc);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x3acc);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x3acc);
	move_arg(0x2);
	push_base_offset(0x3acc);
	push_base_offset(0x3acc);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	push_byte(0x1);
	add();
	mul();
	push_word(0x209);
	push_base_offset(0x105c);
	push_byte(0xc);
	add();
	load(0x2);
	sub();
	div();
	move(0x2);
	push_base_offset(0x3acc);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	lt();
	push_base_offset(0x3acc);
	load(0x2);
	push_base_offset(0x3abc);
	load(0x2);
	ternary();
	push_base_offset(0x3acc);
	move_arg(0x2);
	push_base_offset(0x3acc);
	load(0x2);
	push_base_offset(0x100c);
	load(0x2);
	neq();
	push_offset(L005cd);
	jc(0x1);
	push_base_offset(0x100c);
	push_base_offset(0x3acc);
	load(0x2);
	move(0x2);

L00f5a:
	push_base_offset(0x1040);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x100c);
	load(0x2);
	grp1(0xd6);
	push_offset(L005a0);
	jmp();

L00f6c:
	push_base_offset(0xffc);
	push_base_offset(0x3ab4);
	load(0x2);
	push_base_offset(0x1004);
	load(0x2);
	push_dword(0x25e3c);
	mul();
	add();
	push_dword(0x22198);
	add();
	push_word(0xf10);
	memcpy();
	push_base_offset(0xec);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xe8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xdc);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xe4);
	push_base_offset(0x100c);
	load(0x2);
	push_base_offset(0x1004);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x1000);
	push_byte(0x0);
	move(0x2);

L00fb6:
	push_base_offset(0x1fd8);
	push_base_offset(0x1000);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L01053);
	jc(0x1);
	push_base_offset(0x1000);
	load(0x2);
	push_base_offset(0x1004);
	load(0x2);
	eq();
	push_base_offset(0x1fd8);
	push_base_offset(0x1000);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x1fd8);
	push_base_offset(0x1000);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	ternary();
	push_base_offset(0x3ad0);
	move_arg(0x2);
	push_base_offset(0x1fd8);
	push_base_offset(0x1000);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x3ad0);
	load(0x2);
	move(0x2);
	push_base_offset(0xd8);
	push_dword(0x10000004);
	push_byte(0x3);
	push_base_offset(0x1000);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x3ad0);
	load(0x2);
	cmd_0c(0x2, 0x5);
	push_base_offset(0x1034);
	load(0x2);
	push_byte(0x5);
	push_base_offset(0xd8);
	sys1(0xac);

L01053:
	push_base_offset(0x1000);
	push_base_offset(0x1000);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1000);
	load(0x2);
	push_byte(0x10);
	lt();
	push_offset(L00fb6);
	jc(0x0);
	push_offset(L040a2);
	call();
	push_offset(L005c3);
	jmp();

L01075:
	push_string("sysprg.arc");
	push_string("yesnownd._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x8);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0x3ad4);
	move_arg(0x2);
	sys1(0x41);
	push_byte(0x32);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0x3ad4);
	load(0x2);
	push_offset(L005c3);
	jc(0x1);
	push_base_offset(0x3ad0);
	push_base_offset(0x3ab8);
	load(0x2);
	push_byte(0x1);
	sub();
	push_base_offset(0x100c);
	load(0x2);
	push_base_offset(0x1004);
	load(0x2);
	add();
	sub();
	move(0x2);
	push_base_offset(0x3ab4);
	load(0x2);
	push_base_offset(0x1004);
	load(0x2);
	push_dword(0x25e3c);
	mul();
	add();
	push_dword(0x22198);
	add();
	push_word(0x710);
	add();
	push_base_offset(0x3ab4);
	load(0x2);
	push_base_offset(0x1004);
	load(0x2);
	push_dword(0x25e3c);
	mul();
	add();
	push_dword(0x22198);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	add();
	push_string("選択肢");
	cmd_69();
	push_base_offset(0x3ad4);
	move_arg(0x2);
	push_base_offset(0x3ad4);
	load(0x2);
	push_base_offset(0x3ad0);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x3ad0);
	load(0x2);
	ternary();
	push_base_offset(0x3ad0);
	move_arg(0x2);
	push_base_offset(0x3ad0);
	load(0x2);
	push_base_offset(0x3ab8);
	load(0x2);
	lt();
	push_base_offset(0x3ad0);
	load(0x2);
	push_base_offset(0x3ab8);
	load(0x2);
	push_byte(0x1);
	sub();
	ternary();
	push_word(0x7cc);
	move_arg(0x2);
	push_word(0x444);
	push_byte(0x1);
	move(0x2);
	push_word(0xad0);
	push_byte(0x0);
	move(0x2);
	push_word(0x504);
	push_byte(0x1);
	move(0x2);
	push_word(0x508);
	push_byte(0x1);
	move(0x2);
	push_dword(0x42764);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x4c);
	push_offset(L0116a);
	jmp();

L01162:
	push_offset(L00f6c);
	jmp();

L01166:
	push_offset(L0116a);
	jmp();

L0116a:
	push_word(0xb84);
	push_byte(0x0);
	move(0x2);
	push_word(0x46c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1034);
	load(0x2);
	grp1(0xb9);
	push_byte(0x26);
	push_byte(0x0);
	sys2(0x10);
	push_byte(0x28);
	push_byte(0x0);
	sys2(0x10);
	push_byte(0x21);
	push_byte(0x0);
	sys2(0x10);
	push_byte(0x22);
	push_byte(0x0);
	sys2(0x10);
	push_base_offset(0x1040);
	load(0x2);
	grp1(0xdf);

L0119e:
	push_word(0x4f4);
	load(0x2);
	push_offset(L011b8);
	jc(0x0);
	push_word(0x508);
	load(0x2);
	push_offset(L011b8);
	jc(0x1);
	sys1(0x5f);
	push_offset(L0119e);
	jmp();

L011b8:
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L011de);
	jc(0x0);
	push_base_offset(0x116c);
	push_base_offset(0x103c);
	push_base_offset(0x1038);
	push_base_offset(0x1068);
	load(0x2);
	push_word(0x96);
	push_word(0x480);
	load(0x2);
	call();

L011de:
	push_base_offset(0x1060);
	load(0x2);
	grp1(0x81);
	push_base_offset(0x1040);
	load(0x2);
	grp1(0xd1);
	push_base_offset(0x1044);
	load(0x2);
	grp1(0x51);
	push_word(0x918);
	push_byte(0x0);
	move(0x2);
	push_word(0x600);
	push_byte(0x7d);
	add();
	grp1(0x12);
	push_word(0x600);
	push_byte(0x7e);
	add();
	grp1(0x12);
	push_base_offset(0x3acc);
	push_byte(0x0);
	move(0x2);

L01211:
	push_word(0x600);
	push_byte(0x54);
	add();
	push_base_offset(0x3acc);
	load(0x2);
	push_byte(0x2);
	mul();
	add();
	grp1(0x12);
	push_word(0x600);
	push_byte(0x54);
	add();
	push_base_offset(0x3acc);
	load(0x2);
	push_byte(0x2);
	mul();
	add();
	push_byte(0x1);
	add();
	grp1(0x12);
	push_base_offset(0x3acc);
	push_base_offset(0x3acc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3acc);
	load(0x2);
	push_byte(0x10);
	lt();
	push_offset(L01211);
	jc(0x0);
	push_word(0x600);
	push_byte(0x53);
	add();
	grp1(0x12);
	push_base_offset(0x3ab4);
	load(0x2);
	sys1(0x21);
	push_base_offset(0xdc);
	load(0x2);
	push_offset(L0126d);
	jc(0x1);
	push_offset(L012b7);
	call();

L0126d:
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_dword(0x9fab8);
	push_dword(0x22110);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0x483cc);
	load(0x2);
	push_dword(0x483d0);
	load(0x2);
	grp3(0x97);
	push_base_offset(0x3ac0);
	load(0x2);
	push_offset(L03321);
	call();
	push_word(0xb80);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3ac8);
	load(0x2);
	push_base_offset(0x3ac4);
	load(0x2);
	load_base();
	push_word(0x3ad8);
	sub();
	store_base();
	ret();

L012b7:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L012c3:
	push_byte(0x46);
	push_base_offset(0x4);
	load(0x2);
	add();
	snd1(0x25);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L012c3);
	jc(0x0);
	push_offset(L03c43);
	call();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L012f1:
	load_base();
	push_byte(0x50);
	add();
	store_base();
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x50);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x50);
	load(0x2);
	push_word(0x70c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L013b6);
	jc(0x0);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	add();
	push_dword(0x9fab8);
	push_dword(0x2212c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L013b6);
	jc(0x1);
	push_base_offset(0x4c);
	load(0x2);
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L013b6);
	jc(0x1);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x3c);
	load(0x2);
	move(0x2);
	push_base_offset(0x50);
	load(0x2);
	push_word(0x710);
	add();
	push_base_offset(0x3c);
	load(0x2);
	add();
	push_base_offset(0x4c);
	load(0x2);
	cmd_6a();
	push_base_offset(0x4c);
	load(0x2);
	cmd_68();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);

L013b6:
	push_base_offset(0x38);
	push_byte(0x0);
	add();
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x4);
	add();
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x8);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x0);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0xc);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x10);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x14);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x18);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	load(0x0);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x1c);
	add();
	push_base_offset(0x3c);
	load(0x2);
	move(0x2);
	push_base_offset(0x50);
	load(0x2);
	push_word(0x710);
	add();
	push_base_offset(0x3c);
	load(0x2);
	add();
	push_base_offset(0x48);
	load(0x2);
	cmd_6a();
	push_base_offset(0x48);
	load(0x2);
	cmd_68();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x50);
	load(0x2);
	push_word(0x710);
	add();
	push_base_offset(0x3c);
	load(0x2);
	add();
	push_base_offset(0x48);
	load(0x2);
	grp2(0x95);
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x1);
	sub();
	ternary();
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x38);
	push_byte(0x20);
	add();
	push_base_offset(0x3c);
	load(0x2);
	move(0x2);
	push_base_offset(0x50);
	load(0x2);
	push_word(0x710);
	add();
	push_base_offset(0x3c);
	load(0x2);
	add();
	cmd_68();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x24);
	add();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x0);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x234bc);
	add();
	load(0x2);
	bool_and();
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x28);
	add();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x2);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x2c);
	add();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x4);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x30);
	add();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x6);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x34);
	add();
	push_base_offset(0x3c);
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L0164d);
	jc(0x1);
	push_base_offset(0x50);
	load(0x2);
	push_word(0x710);
	add();
	push_base_offset(0x3c);
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x10);
	add();
	cmd_6a();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x10);
	add();
	cmd_68();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);

L0164d:
	push_base_offset(0x50);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_base_offset(0x38);
	push_byte(0x38);
	memcpy();
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x50);
	load(0x2);
	push_word(0x70c);
	add();
	push_base_offset(0x3c);
	load(0x2);
	move(0x2);
	load_base();
	push_byte(0x50);
	sub();
	store_base();
	ret();

L0168c:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	push_word(0x7d0);
	load(0x2);
	sys1(0x9a);
	push_base_offset(0x4);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L016e1);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x7d0);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	sys1(0x9d);
	push_offset(L01728);
	jmp();

L016e1:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L0172f);
	jc(0x1);
	push_dword(0x448c0);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L0172f);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_dword(0xc58f4);
	push_dword(0x25e3c);
	memcpy();
	push_base_offset(0x14);
	load(0x2);
	push_dword(0x22198);
	add();
	push_dword(0x448c0);
	push_word(0xf10);
	memcpy();

L01728:
	push_base_offset(0xc);
	push_byte(0x1);
	move(0x2);

L0172f:
	push_base_offset(0xc);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L0173a:
	load_base();
	push_word(0x1b98);
	add();
	store_base();
	push_base_offset(0x1b74);
	move_arg(0x2);
	push_base_offset(0x1b78);
	move_arg(0x2);
	push_base_offset(0x1b7c);
	move_arg(0x2);
	push_base_offset(0x1b80);
	move_arg(0x2);
	push_base_offset(0x1b84);
	move_arg(0x2);
	push_base_offset(0x1b88);
	move_arg(0x2);
	push_base_offset(0x1b8c);
	move_arg(0x2);
	push_base_offset(0x1b90);
	move_arg(0x2);
	push_base_offset(0x1b94);
	move_arg(0x2);
	push_base_offset(0x1b98);
	move_arg(0x2);
	push_base_offset(0x1b68);
	push_byte(0x0);
	move(0x2);
	push_dword(0x25e3c);
	sys1(0x20);
	push_base_offset(0x175c);
	move_arg(0x2);
	push_base_offset(0x175c);
	load(0x2);
	push_base_offset(0x1b84);
	load(0x2);
	push_offset(L0168c);
	call();
	push_offset(L01c8c);
	jc(0x1);
	push_base_offset(0x1758);
	push_base_offset(0x175c);
	load(0x2);
	push_dword(0x22198);
	add();
	push_word(0xf10);
	memcpy();
	push_word(0x600);
	push_byte(0x7d);
	add();
	push_base_offset(0x1b7c);
	load(0x2);
	grp1(0x13);
	push_word(0x600);
	push_byte(0x7e);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x1b70);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b6c);
	push_byte(0x0);
	move(0x2);

L017cf:
	push_base_offset(0x1b70);
	push_base_offset(0x1b70);
	load(0x2);
	push_base_offset(0x1758);
	push_byte(0xc);
	add();
	push_base_offset(0x1b6c);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	bool_or();
	move(0x2);
	push_base_offset(0x1b6c);
	push_base_offset(0x1b6c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b6c);
	load(0x2);
	push_base_offset(0x1758);
	push_byte(0x8);
	add();
	load(0x2);
	lt();
	push_offset(L017cf);
	jc(0x0);
	push_base_offset(0x1b78);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01827);
	jc(0x1);
	push_base_offset(0x1b78);
	load(0x2);
	push_base_offset(0x1b70);
	load(0x2);
	move(0x2);

L01827:
	push_base_offset(0x1b70);
	load(0x2);
	push_dword(0xffffff);
	push_dword(0xffffff);
	ternary();
	push_base_offset(0x848);
	move_arg(0x2);
	push_base_offset(0x1b74);
	load(0x2);
	push_base_offset(0x1b70);
	load(0x2);
	bool_and();
	push_dword(0xffffff);
	push_base_offset(0x848);
	load(0x2);
	ternary();
	push_base_offset(0x848);
	move_arg(0x2);
	push_base_offset(0x1b70);
	load(0x2);
	push_dword(0xd46900);
	push_byte(0x0);
	ternary();
	push_base_offset(0x844);
	move_arg(0x2);
	push_base_offset(0x1b74);
	load(0x2);
	push_base_offset(0x1b70);
	load(0x2);
	bool_and();
	push_dword(0xd46900);
	push_base_offset(0x844);
	load(0x2);
	ternary();
	push_base_offset(0x844);
	move_arg(0x2);
	push_base_offset(0x1b98);
	load(0x2);
	push_byte(0x0);
	push_byte(0x2);
	ternary();
	push_base_offset(0x840);
	move_arg(0x2);
	push_base_offset(0x1b60);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b8c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L018b9);
	jc(0x1);
	push_base_offset(0x1b8c);
	load(0x2);
	push_base_offset(0x1758);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	move(0x2);

L018b9:
	push_base_offset(0x1758);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L019ca);
	jc(0x1);
	push_base_offset(0x1758);
	push_word(0x710);
	add();
	push_base_offset(0x1758);
	push_byte(0x0);
	add();
	load(0x2);
	add();
	push_string("選択肢");
	cmd_69();
	push_offset(L01916);
	jc(0x0);
	push_base_offset(0x1758);
	push_word(0x710);
	add();
	push_base_offset(0x1758);
	push_byte(0x0);
	add();
	load(0x2);
	add();
	push_string("ヒロイン選択");
	cmd_69();
	push_offset(L01916);
	jc(0x0);
	push_base_offset(0x1758);
	push_word(0x710);
	add();
	push_base_offset(0x1758);
	push_byte(0x0);
	add();
	load(0x2);
	add();
	push_base_offset(0x1b5c);
	push_string("%s");
	cmd_6f();
	push_offset(L0192d);
	jmp();

L01916:
	push_base_offset(0x1758);
	push_word(0x710);
	add();
	push_base_offset(0x1758);
	push_byte(0x0);
	add();
	load(0x2);
	add();
	push_base_offset(0x1b5c);
	push_string("《%s》");
	cmd_6f();

L0192d:
	push_word(0x600);
	push_byte(0x7d);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x1b5c);
	push_base_offset(0x848);
	load(0x2);
	push_byte(0x1);
	push_string("");
	push_base_offset(0x848);
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	push_base_offset(0x840);
	load(0x2);
	push_byte(0xa);
	push_byte(0xa);
	push_base_offset(0x844);
	load(0x2);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	push_base_offset(0x1b68);
	move_arg(0x2);
	push_base_offset(0x1b60);
	push_base_offset(0x1b60);
	load(0x2);
	push_base_offset(0x1b68);
	load(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	add();
	push_byte(0x4);
	add();
	move(0x2);

L019ca:
	push_base_offset(0x1b5c);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x0);
	push_base_offset(0x804);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x0);
	push_base_offset(0x1b6c);
	push_byte(0x0);
	move(0x2);

L019e5:
	push_base_offset(0x83c);
	push_base_offset(0x1758);
	push_byte(0xc);
	add();
	push_base_offset(0x1b6c);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x38);
	memcpy();
	push_base_offset(0x1758);
	push_word(0x710);
	add();
	push_base_offset(0x83c);
	push_byte(0x1c);
	add();
	load(0x2);
	add();
	load(0x0);
	push_byte(0x0);
	geq();
	push_base_offset(0x1758);
	push_word(0x710);
	add();
	push_base_offset(0x83c);
	push_byte(0x1c);
	add();
	load(0x2);
	add();
	load(0x0);
	push_byte(0x20);
	lt();
	bool_and();
	push_byte(0x1);
	push_byte(0x0);
	ternary();
	push_base_offset(0x1b68);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0x1758);
	push_word(0x710);
	add();
	push_base_offset(0x83c);
	push_byte(0x1c);
	add();
	load(0x2);
	add();
	push_base_offset(0x1b68);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x1b5c);
	cmd_68();
	push_base_offset(0x1b68);
	move_arg(0x2);
	push_base_offset(0x1b5c);
	push_base_offset(0x1b68);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	cmd_6a();
	push_base_offset(0x804);
	cmd_68();
	push_base_offset(0x1b68);
	move_arg(0x2);
	push_base_offset(0x804);
	push_base_offset(0x1b68);
	load(0x2);
	add();
	push_base_offset(0x1758);
	push_word(0x710);
	add();
	push_base_offset(0x83c);
	push_byte(0x20);
	add();
	load(0x2);
	add();
	cmd_6a();
	push_base_offset(0x1b6c);
	push_base_offset(0x1b6c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b6c);
	load(0x2);
	push_base_offset(0x1758);
	push_byte(0x8);
	add();
	load(0x2);
	lt();
	push_offset(L019e5);
	jc(0x0);
	push_word(0x600);
	push_byte(0x7e);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x1b5c);
	push_base_offset(0x848);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x804);
	push_base_offset(0x848);
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	push_base_offset(0x840);
	load(0x2);
	push_byte(0xa);
	push_byte(0xa);
	push_base_offset(0x844);
	load(0x2);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	push_base_offset(0x1b68);
	move_arg(0x2);
	push_base_offset(0x1b84);
	load(0x2);
	push_base_offset(0x1b80);
	load(0x2);
	neq();
	push_base_offset(0x1b60);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_base_offset(0x1b68);
	load(0x2);
	push_byte(0x1);
	eq();
	bool_and();
	push_byte(0x2);
	push_base_offset(0x1b68);
	load(0x2);
	ternary();
	push_base_offset(0x1b68);
	move_arg(0x2);
	push_base_offset(0x1b68);
	push_base_offset(0x1b60);
	load(0x2);
	push_base_offset(0x1b68);
	load(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	add();
	move(0x2);
	push_base_offset(0x1b60);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x1b68);
	load(0x2);
	push_byte(0x4);
	add();
	push_base_offset(0x1b68);
	load(0x2);
	ternary();
	push_base_offset(0x1b68);
	move_arg(0x2);
	push_base_offset(0x1b84);
	load(0x2);
	push_base_offset(0x1b80);
	load(0x2);
	eq();
	push_base_offset(0x1b68);
	load(0x2);
	push_byte(0x4);
	sub();
	push_base_offset(0x1b68);
	load(0x2);
	ternary();
	push_base_offset(0x1b68);
	move_arg(0x2);
	push_base_offset(0x1b98);
	load(0x2);
	push_offset(L01c8c);
	jc(0x0);
	push_base_offset(0x1b68);
	load(0x2);
	push_base_offset(0x1b88);
	load(0x2);
	leq();
	push_base_offset(0x1b68);
	load(0x2);
	push_base_offset(0x1b88);
	load(0x2);
	ternary();
	push_base_offset(0x1b68);
	move_arg(0x2);
	push_base_offset(0x1b68);
	load(0x2);
	push_byte(0xe);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x6);
	sub();
	push_byte(0x8);
	add();
	leq();
	push_base_offset(0x1b68);
	load(0x2);
	push_byte(0xe);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x6);
	sub();
	push_byte(0x8);
	add();
	ternary();
	push_base_offset(0x1b68);
	move_arg(0x2);
	push_base_offset(0x1b84);
	load(0x2);
	push_base_offset(0x1b80);
	load(0x2);
	eq();
	push_base_offset(0x1b60);
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	push_base_offset(0x1b68);
	load(0x2);
	push_byte(0x4);
	add();
	push_base_offset(0x1b68);
	load(0x2);
	ternary();
	push_base_offset(0x1b64);
	move_arg(0x2);
	push_base_offset(0x1b94);
	load(0x2);
	push_byte(0x1c);
	push_byte(0x1a);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x1b64);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x1b94);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x600);
	push_byte(0x7d);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x1b94);
	load(0x2);
	push_byte(0x8);
	push_base_offset(0x1b60);
	load(0x2);
	push_word(0x600);
	push_byte(0x7e);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);

L01c8c:
	push_base_offset(0x175c);
	load(0x2);
	sys1(0x21);
	push_base_offset(0x1b68);
	load(0x2);
	load_base();
	push_word(0x1b98);
	sub();
	store_base();
	ret();

L01c9f:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	push_word(0x7d0);
	load(0x2);
	sys1(0x9a);
	push_base_offset(0xc);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0xe);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x6);
	sub();
	move(0x2);

L01cda:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L01d64);
	jc(0x1);
	push_byte(0x1);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0173a);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	geq();
	push_offset(L01d64);
	jc(0x1);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	push_byte(0x4);
	sub();
	push_byte(0x14);
	sub();
	sub();
	move(0x2);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_offset(L01cda);
	jmp();

L01d64:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L01d72:
	load_base();
	push_word(0x1128);
	add();
	store_base();
	push_base_offset(0x1114);
	move_arg(0x2);
	push_base_offset(0x1118);
	move_arg(0x2);
	push_base_offset(0x111c);
	move_arg(0x2);
	push_base_offset(0x1120);
	move_arg(0x2);
	push_base_offset(0x1124);
	move_arg(0x2);
	push_base_offset(0x1128);
	move_arg(0x2);
	push_base_offset(0x1078);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1078);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1078);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x20);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x24);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1078);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x106c);
	push_byte(0x24);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1078);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x106c);
	push_byte(0x3c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x34);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x102c);
	push_word(0x9c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x102c);
	push_word(0xa0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x102c);
	push_word(0xa4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x102c);
	push_word(0xa8);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1078);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x102c);
	push_word(0xa8);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1078);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x102c);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xf5c);
	push_word(0x600);
	push_byte(0xc);
	add();
	grp1(0x16);
	push_base_offset(0xf44);
	push_word(0x600);
	push_byte(0x15);
	add();
	grp1(0x16);
	push_base_offset(0xf68);
	push_base_offset(0x1128);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x0);
	add();
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x8);
	add();
	push_base_offset(0xf68);
	load(0x2);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x1c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1128);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x106c);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x102c);
	push_byte(0x0);
	add();
	push_base_offset(0x1114);
	load(0x2);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x8);
	add();
	push_word(0x46b);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0xc);
	add();
	push_byte(0x51);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0x53);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xf68);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x102c);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x102c);
	push_byte(0x0);
	add();
	push_base_offset(0x111c);
	load(0x2);
	push_byte(0x1);
	geq();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x8);
	add();
	push_word(0x46a);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0xc);
	add();
	push_byte(0x28);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0x0);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0x0);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0x0);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x30);
	add();
	push_word(0x600);
	push_byte(0x0);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xf68);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x102c);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x102c);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x8);
	add();
	push_word(0x46a);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0xc);
	add();
	push_word(0x25d);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0x4);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0x4);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x30);
	add();
	push_word(0x600);
	push_byte(0x4);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xf68);
	load(0x2);
	push_byte(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x102c);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xf68);
	push_base_offset(0x1128);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x0);
	add();
	push_byte(0x10);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x8);
	add();
	push_base_offset(0xf68);
	load(0x2);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1128);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x106c);
	push_byte(0x40);
	memcpy();
	push_base_offset(0xf64);
	push_base_offset(0x1128);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x0);
	add();
	push_byte(0x10);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x8);
	add();
	push_base_offset(0xf64);
	load(0x2);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1128);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x106c);
	push_byte(0x40);
	memcpy();
	push_base_offset(0xf60);
	push_base_offset(0x1128);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x0);
	add();
	push_byte(0x10);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x8);
	add();
	push_base_offset(0xf60);
	load(0x2);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1128);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x106c);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x1108);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xf28);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10fc);
	push_word(0x600);
	push_byte(0x54);
	add();
	move(0x2);
	push_base_offset(0xf1c);
	push_byte(0x0);
	move(0x2);

L02280:
	push_base_offset(0xf24);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xf18);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xf28);
	load(0x2);
	push_offset(L02415);
	jc(0x0);
	push_base_offset(0xf2c);
	push_base_offset(0xf1c);
	load(0x2);
	push_byte(0xe);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x6);
	sub();
	lt();
	move(0x2);
	push_base_offset(0xf2c);
	load(0x2);
	push_offset(L024c7);
	jc(0x1);
	push_base_offset(0x1124);
	load(0x2);
	push_base_offset(0x1108);
	load(0x2);
	push_dword(0x25e3c);
	mul();
	add();
	push_base_offset(0x111c);
	load(0x2);
	push_base_offset(0x1108);
	load(0x2);
	add();
	push_offset(L0168c);
	call();
	push_base_offset(0xf2c);
	move_arg(0x2);
	push_base_offset(0xf2c);
	load(0x2);
	push_offset(L024c7);
	jc(0x1);
	push_byte(0x0);
	push_base_offset(0x10fc);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0xf20);
	push_byte(0xe);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x6);
	sub();
	push_base_offset(0xf1c);
	load(0x2);
	sub();
	push_base_offset(0x111c);
	load(0x2);
	push_base_offset(0x1108);
	load(0x2);
	add();
	push_base_offset(0x1120);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0xf24);
	push_byte(0x0);
	push_offset(L0173a);
	call();
	push_base_offset(0xf18);
	move_arg(0x2);
	push_base_offset(0xf14);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xf2c);
	load(0x2);
	push_offset(L02415);
	jc(0x1);
	push_base_offset(0xf24);
	load(0x2);
	push_offset(L02415);
	jc(0x1);
	push_base_offset(0xf10);
	push_base_offset(0x1124);
	load(0x2);
	push_base_offset(0x1108);
	load(0x2);
	push_dword(0x25e3c);
	mul();
	add();
	push_dword(0x22198);
	add();
	push_word(0xf10);
	memcpy();
	push_base_offset(0x1104);
	push_byte(0x0);
	move(0x2);

L02390:
	push_base_offset(0xf10);
	push_byte(0xc);
	add();
	push_base_offset(0x1104);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L023f5);
	jc(0x1);
	push_base_offset(0xf10);
	push_word(0x710);
	add();
	push_base_offset(0xf10);
	push_byte(0xc);
	add();
	push_base_offset(0x1104);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x34);
	add();
	load(0x2);
	add();
	push_offset(L030b4);
	call();
	push_base_offset(0x110c);
	move_arg(0x2);
	push_base_offset(0x110c);
	load(0x2);
	push_byte(0x0);
	geq();
	push_word(0x600);
	push_byte(0x15);
	add();
	push_base_offset(0x110c);
	load(0x2);
	push_byte(0x2);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0xf14);
	move_arg(0x2);
	push_offset(L02415);
	jmp();

L023f5:
	push_base_offset(0x1104);
	push_base_offset(0x1104);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1104);
	load(0x2);
	push_base_offset(0xf10);
	push_byte(0x8);
	add();
	load(0x2);
	lt();
	push_offset(L02390);
	jc(0x0);

L02415:
	push_base_offset(0xf24);
	load(0x2);
	push_base_offset(0xf14);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	bool_and();
	push_offset(L02469);
	jc(0x1);
	push_base_offset(0xf2c);
	push_base_offset(0xf2c);
	load(0x2);
	push_base_offset(0xf1c);
	load(0x2);
	push_base_offset(0xf5c);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	push_byte(0x6a);
	push_byte(0x65);
	sub();
	add();
	push_byte(0xe);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x6);
	sub();
	lt();
	bool_and();
	move(0x2);

L02469:
	push_base_offset(0x111c);
	load(0x2);
	push_base_offset(0x1108);
	load(0x2);
	add();
	push_base_offset(0x1120);
	load(0x2);
	lt();
	push_offset(L024bc);
	jc(0x1);
	push_base_offset(0xf2c);
	push_base_offset(0xf2c);
	load(0x2);
	push_base_offset(0xf1c);
	load(0x2);
	push_base_offset(0xf44);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	push_byte(0x64);
	push_byte(0x65);
	sub();
	add();
	push_byte(0xe);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x6);
	sub();
	lt();
	bool_and();
	move(0x2);

L024bc:
	push_base_offset(0xf28);
	push_base_offset(0xf2c);
	load(0x2);
	bool_zero();
	move(0x2);

L024c7:
	push_base_offset(0x102c);
	push_byte(0x0);
	add();
	push_base_offset(0xf24);
	load(0x2);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x4);
	add();
	push_base_offset(0xf2c);
	load(0x2);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x8);
	add();
	push_word(0x16a);
	push_byte(0x10);
	sub();
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0xc);
	add();
	push_byte(0x65);
	push_base_offset(0xf1c);
	load(0x2);
	add();
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x10fc);
	load(0x2);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xf68);
	load(0x2);
	push_base_offset(0x1108);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x102c);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x102c);
	push_byte(0x0);
	add();
	push_base_offset(0xf2c);
	load(0x2);
	push_base_offset(0x111c);
	load(0x2);
	push_base_offset(0x1108);
	load(0x2);
	add();
	push_base_offset(0x1120);
	load(0x2);
	lt();
	bool_and();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x4);
	add();
	push_base_offset(0x102c);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x8);
	add();
	push_byte(0x59);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0xc);
	add();
	push_byte(0x6e);
	push_base_offset(0xf1c);
	load(0x2);
	add();
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0xc);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0xc);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0xc);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x30);
	add();
	push_word(0x600);
	push_byte(0xc);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xf64);
	load(0x2);
	push_base_offset(0x1108);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x102c);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x102c);
	push_byte(0x0);
	add();
	push_base_offset(0xf2c);
	load(0x2);
	push_base_offset(0xf24);
	load(0x2);
	bool_and();
	push_base_offset(0xf14);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	bool_and();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x4);
	add();
	push_base_offset(0x102c);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x8);
	add();
	push_word(0xf4);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0xc);
	add();
	push_byte(0x64);
	push_base_offset(0xf1c);
	load(0x2);
	add();
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x111c);
	load(0x2);
	push_base_offset(0x1108);
	load(0x2);
	add();
	push_base_offset(0x1118);
	load(0x2);
	eq();
	push_base_offset(0xf14);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	bool_and();
	push_base_offset(0xf14);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0xf14);
	load(0x2);
	ternary();
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0xf14);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0xf14);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0xf14);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0xf14);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xf60);
	load(0x2);
	push_base_offset(0x1108);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x102c);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xf2c);
	load(0x2);
	push_base_offset(0xf1c);
	load(0x2);
	push_base_offset(0xf18);
	load(0x2);
	add();
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	push_byte(0x4);
	sub();
	push_byte(0x14);
	sub();
	add();
	push_base_offset(0xf1c);
	load(0x2);
	ternary();
	push_base_offset(0xf1c);
	move_arg(0x2);
	push_base_offset(0x10fc);
	push_base_offset(0x10fc);
	load(0x2);
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x1108);
	push_base_offset(0x1108);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1108);
	load(0x2);
	push_byte(0x10);
	lt();
	push_offset(L02280);
	jc(0x0);
	push_base_offset(0xf68);
	push_base_offset(0x1128);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x8);
	add();
	push_base_offset(0xf68);
	load(0x2);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x106c);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1128);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x106c);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x102c);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x8);
	add();
	push_word(0x446);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0xc);
	add();
	push_word(0x293);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0x10);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0x10);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x600);
	push_byte(0x10);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x102c);
	push_byte(0x30);
	add();
	push_word(0x600);
	push_byte(0x10);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xf68);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x102c);
	push_word(0xc4);
	memcpy();
	load_base();
	push_word(0x1128);
	sub();
	store_base();
	ret();

L028d3:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02956);
	jc(0x0);
	push_word(0x450);
	load(0x2);
	push_offset(L02956);
	jc(0x0);
	push_word(0x4001);
	push_base_offset(0x4);
	load(0x2);
	sys1(0xa1);

L02906:
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02921);
	jc(0x0);
	sys1(0x5f);
	push_offset(L02906);
	jmp();

L02921:
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0293c);
	jc(0x1);
	sys1(0x5f);
	push_offset(L02921);
	jmp();

L0293c:
	push_word(0x4f4);
	load(0x2);
	push_offset(L02956);
	jc(0x0);
	push_word(0x508);
	load(0x2);
	push_offset(L02956);
	jc(0x1);
	sys1(0x5f);
	push_offset(L0293c);
	jmp();

L02956:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L0295c:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0xcc);
	push_offset(L028d3);
	call();
	push_byte(0x1);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L02970:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_string("sysprg.arc");
	push_string("gotitle._bp");
	push_word(0x200);
	push_dword(0x8000);
	push_dword(0x8000);
	sys1(0x44);
	push_offset(L02a25);
	call();

L0298e:
	push_word(0x4f4);
	load(0x2);
	push_offset(L029a8);
	jc(0x0);
	push_word(0x508);
	load(0x2);
	push_offset(L029a8);
	jc(0x1);
	sys1(0x5f);
	push_offset(L0298e);
	jmp();

L029a8:
	push_byte(0x1);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_byte(0x0);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x4000);
	push_byte(0x0);
	sys1(0xa1);
	push_offset(L02a25);
	call();
	push_byte(0x1);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L029f9);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_offset(L02a15);
	jmp();

L029f9:
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L02a15);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);

L02a15:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L02a25:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	sys1(0x4);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1f4);
	add();
	move(0x2);

L02a3f:
	sys1(0x4);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	geq();
	push_offset(L02a66);
	jc(0x0);
	push_word(0x450);
	load(0x2);
	push_offset(L02a66);
	jc(0x0);
	sys1(0x5f);
	push_offset(L02a3f);
	jmp();

L02a66:
	sys1(0x5f);
	push_word(0x450);
	load(0x2);
	push_offset(L02a66);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02a78:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x7);
	add();
	eq();
	push_offset(L02dce);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x6);
	add();
	eq();
	push_offset(L02dce);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x16);
	add();
	eq();
	push_offset(L02dce);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L02dce);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x8);
	add();
	eq();
	push_offset(L02c27);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	add();
	eq();
	push_offset(L02b9a);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x3);
	add();
	eq();
	push_offset(L02bf8);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xc);
	add();
	eq();
	push_offset(L02bc9);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xf);
	add();
	eq();
	push_offset(L02c56);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x12);
	add();
	eq();
	push_offset(L02c85);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x17);
	add();
	eq();
	push_offset(L02cb4);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1b);
	add();
	eq();
	push_offset(L02ce3);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1e);
	add();
	eq();
	push_offset(L02d12);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x21);
	add();
	eq();
	push_offset(L02d41);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x24);
	add();
	eq();
	push_offset(L02d70);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x27);
	add();
	eq();
	push_offset(L02d9f);
	jc(0x0);
	push_offset(L02e3e);
	jmp();
	push_offset(L02dce);
	jmp();

L02b9a:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x51c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x51c);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02bc9:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	load(0x2);
	add();
	move(0x2);
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x520);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02bf8:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x524);
	load(0x2);
	add();
	move(0x2);
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x524);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02c27:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x528);
	load(0x2);
	add();
	move(0x2);
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x528);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02c56:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x52c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x52c);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02c85:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x530);
	load(0x2);
	add();
	move(0x2);
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x530);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02cb4:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x534);
	load(0x2);
	add();
	move(0x2);
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x534);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02ce3:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x538);
	load(0x2);
	add();
	move(0x2);
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x538);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02d12:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x53c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x53c);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02d41:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x540);
	load(0x2);
	add();
	move(0x2);
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x540);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02d70:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x544);
	load(0x2);
	add();
	move(0x2);
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x544);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02d9f:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x548);
	load(0x2);
	add();
	move(0x2);
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x548);
	move_arg(0x2);
	push_offset(L02dce);
	jmp();

L02dce:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L02e09);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	geq();
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L02e09);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	snd1(0x26);

L02e09:
	push_base_offset(0x8);
	load(0x2);
	push_word(0x80);
	push_byte(0x40);
	snd1(0x24);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x49c);
	load(0x2);
	ternary();
	push_word(0x49c);
	move_arg(0x2);

L02e3e:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x100);
	push_word(0x100);
	push_base_offset(0x4);
	load(0x2);
	mul();
	push_byte(0xb);
	push_byte(0x1);
	sub();
	div();
	sub();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L02e6c:
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x0);
	gt();
	push_byte(0x32);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x1);
	sar();
	add();
	push_byte(0x0);
	ternary();
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x38);
	load(0x2);
	push_word(0x80);
	mul();
	push_byte(0x65);
	push_byte(0x1);
	sub();
	div();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x22);
	add();
	load(0x1);
	push_offset(L02e6c);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x32);
	add();
	load(0x1);
	push_offset(L02e6c);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_byte(0x20);
	push_word(0x8e);
	add();
	load(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_byte(0x20);
	push_word(0x90);
	add();
	load(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x80);
	push_base_offset(0xc);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_word(0x80);
	div();
	push_base_offset(0x4);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	ternary();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L02f45:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L032a3);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L02f80);
	call();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L02f80:
	load_base();
	push_byte(0x24);
	add();
	store_base();
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x22);
	add();
	load(0x1);
	push_offset(L02e6c);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x1);
	push_offset(L02e6c);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x8e);
	add();
	load(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x94);
	add();
	load(0x1);
	bool_and();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x80);
	push_base_offset(0x10);
	load(0x2);
	sub();
	sub();
	push_byte(0x0);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	lt();
	push_byte(0x0);
	push_base_offset(0x14);
	load(0x2);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L03096);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x48);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x2);
	mul();
	add();
	load(0x1);
	push_offset(L02e6c);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L03071);
	jc(0x1);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_word(0x80);
	div();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	lt();
	push_byte(0x0);
	push_base_offset(0x14);
	load(0x2);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);

L03071:
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x34);
	add();
	push_base_offset(0x1c);
	load(0x2);
	add();
	load(0x0);
	move(0x2);
	push_offset(L030a9);
	jmp();

L03096:
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x1);
	move(0x2);

L030a9:
	push_base_offset(0x18);
	load(0x2);
	load_base();
	push_byte(0x24);
	sub();
	store_base();
	ret();

L030b4:
	load_base();
	push_word(0x1a0);
	add();
	store_base();
	push_base_offset(0x1a0);
	move_arg(0x2);
	push_base_offset(0x180);
	push_string("AK");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x178);
	push_string("SA");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x170);
	push_string("RE");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x168);
	push_string("KA");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x160);
	push_string("MA");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x158);
	push_string("KZ");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x150);
	push_string("AR");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x148);
	push_string("SY");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x140);
	push_string("HI");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x138);
	push_string("BE");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x130);
	push_string("KK");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x128);
	push_string("W");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x120);
	push_string("M");
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x118);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x110);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x108);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x100);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_base_offset(0xf8);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_base_offset(0xf0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_base_offset(0xe8);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_base_offset(0xe0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_base_offset(0xd8);
	push_byte(0x0);
	push_byte(0x2);
	shl();
	add();
	push_base_offset(0x180);
	push_base_offset(0x178);
	push_base_offset(0x170);
	push_base_offset(0x168);
	push_base_offset(0x160);
	push_base_offset(0x158);
	push_base_offset(0x150);
	push_base_offset(0x148);
	push_base_offset(0x140);
	push_base_offset(0x138);
	cmd_0c(0x2, 0xa);
	push_base_offset(0xd8);
	push_byte(0xa);
	push_byte(0x2);
	shl();
	add();
	push_base_offset(0x130);
	push_base_offset(0x128);
	push_base_offset(0x120);
	push_base_offset(0x118);
	push_base_offset(0x110);
	push_base_offset(0x108);
	push_base_offset(0x100);
	push_base_offset(0xf8);
	push_base_offset(0xf0);
	push_base_offset(0xe8);
	cmd_0c(0x2, 0xa);
	push_base_offset(0xd8);
	push_byte(0x14);
	push_byte(0x2);
	shl();
	add();
	push_base_offset(0xe0);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x84);
	push_base_offset(0x1a0);
	load(0x2);
	cmd_6a();
	push_base_offset(0x84);
	cmd_6d();
	push_base_offset(0x194);
	push_byte(0x0);
	move(0x2);

L03205:
	push_base_offset(0x4);
	push_base_offset(0xd8);
	push_base_offset(0x194);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	move(0x2);

L03218:
	push_base_offset(0x4);
	load(0x2);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03272);
	jc(0x1);
	push_base_offset(0x190);
	push_base_offset(0x4);
	load(0x2);
	load(0x2);
	cmd_6a();
	push_base_offset(0x190);
	cmd_6d();
	push_base_offset(0x190);
	cmd_68();
	push_base_offset(0x198);
	move_arg(0x2);
	push_base_offset(0x84);
	push_base_offset(0x190);
	push_base_offset(0x198);
	load(0x2);
	memcmp();
	push_offset(L03264);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x2);
	shl();
	add();
	move(0x2);
	push_offset(L03218);
	jmp();

L03264:
	push_base_offset(0x19c);
	push_base_offset(0x194);
	load(0x2);
	move(0x2);
	push_offset(L03297);
	jmp();

L03272:
	push_base_offset(0x194);
	push_base_offset(0x194);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x194);
	load(0x2);
	push_byte(0xd);
	lt();
	push_offset(L03205);
	jc(0x0);
	push_base_offset(0x19c);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L03297:
	push_base_offset(0x19c);
	load(0x2);
	load_base();
	push_word(0x1a0);
	sub();
	store_base();
	ret();

L032a3:
	load_base();
	push_byte(0x5c);
	add();
	store_base();
	push_base_offset(0x5c);
	move_arg(0x2);
	push_base_offset(0x5c);
	load(0x2);
	push_offset(L030b4);
	call();
	push_base_offset(0x58);
	move_arg(0x2);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x58);
	load(0x2);
	push_byte(0xd);
	lt();
	bool_and();
	push_offset(L03316);
	jc(0x1);
	push_base_offset(0x54);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x2);
	push_byte(0x3);
	push_byte(0x4);
	push_byte(0x5);
	push_byte(0x6);
	push_byte(0x7);
	push_byte(0x8);
	push_byte(0x9);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x54);
	push_byte(0xa);
	push_byte(0x4);
	mul();
	add();
	push_byte(0xa);
	push_byte(0xb);
	push_byte(0xc);
	cmd_0c(0x2, 0x3);
	push_base_offset(0x58);
	push_base_offset(0x54);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);

L03316:
	push_base_offset(0x58);
	load(0x2);
	load_base();
	push_byte(0x5c);
	sub();
	store_base();
	ret();

L03321:
	load_base();
	push_word(0xd0);
	add();
	store_base();
	push_base_offset(0xd0);
	move_arg(0x2);
	push_base_offset(0xcc);
	push_word(0x91c);
	load(0x2);
	move(0x2);
	push_word(0x91c);
	push_base_offset(0xd0);
	load(0x2);
	move(0x2);
	push_base_offset(0x40);
	push_byte(0x20);
	push_word(0xb6);
	add();
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc4);
	push_byte(0x0);
	move(0x2);

L0337c:
	push_base_offset(0x3c);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0xd);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x11);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x34);
	push_base_offset(0x34);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x26);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x30);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x28);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x21);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x28);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x22);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0xc4);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0xc);
	lt();
	push_offset(L0337c);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03488);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L034d6);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L03546);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L03590);
	jc(0x0);
	push_offset(L03730);
	jmp();

L03488:
	push_base_offset(0xc0);
	push_byte(0xe);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0xf);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L035da);
	jmp();

L034d6:
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1);
	ternary();
	push_base_offset(0xc8);
	move_arg(0x2);
	push_base_offset(0x80);
	push_base_offset(0xc8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x3);
	push_base_offset(0xd0);
	load(0x2);
	push_offset(L0373c);
	call();
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L035da);
	jmp();

L03546:
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L035da);
	jmp();

L03590:
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L035da);
	jmp();

L035da:
	push_base_offset(0x24);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x200);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x4);
	push_base_offset(0x24);
	move(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_offset(L03615);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x26);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L03615:
	push_base_offset(0x2c);
	load(0x2);
	push_offset(L03638);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x21);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L03638:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_word(0x1000);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x4);
	push_base_offset(0x24);
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_offset(L03674);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L03674:
	push_base_offset(0x28);
	load(0x2);
	push_offset(L03697);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x22);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L03697:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_word(0x2000);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x4);
	push_base_offset(0x24);
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x0);
	neq();
	push_offset(L036eb);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x0);
	push_word(0xff);
	and();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L036eb:
	push_base_offset(0x38);
	load(0x2);
	push_offset(L0370e);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x11);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L0370e:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_dword(-0x80000000);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x24);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x1);
	push_base_offset(0x24);
	sys1(0x62);

L03730:
	push_base_offset(0xcc);
	load(0x2);
	load_base();
	push_word(0xd0);
	sub();
	store_base();
	ret();

L0373c:
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x24);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x24);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0xe);
	move(0x2);
	push_base_offset(0x24);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0xf);
	move(0x2);
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x38);
	load(0x2);
	move(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);

L0378f:
	push_byte(0x20);
	push_word(0xc6);
	add();
	push_base_offset(0x28);
	load(0x2);
	add();
	load(0x0);
	push_base_offset(0x34);
	load(0x2);
	neq();
	push_offset(L037da);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x24);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L037da:
	push_base_offset(0x28);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L0378f);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2c);
	load(0x2);
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();

L03808:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x3b90);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L0382a:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0388a);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L03895);
	call();
	push_offset(L0388a);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0391f);
	call();
	push_offset(L0388a);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0388a:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L03895:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03914);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03914);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L03914);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03914);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L03914:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0391f:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0399e);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0399e);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L0399e);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0399e);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L0399e:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L039a9:
	load_base();
	push_word(0x120);
	add();
	store_base();
	push_base_offset(0x11c);
	move_arg(0x2);
	push_base_offset(0x120);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03a89);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03a89);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x118);
	push_dword(0x40000002);
	push_base_offset(0x120);
	load(0x2);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x4);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x118);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L03a3c:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03a89);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L03a3c);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000000);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000001);
	eq();
	bool_or();
	push_offset(L03a89);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("ウィンク開始要求時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L03a89:
	load_base();
	push_word(0x120);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03aa1:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03ac3);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L03ad4);
	jc(0x1);

L03ac3:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L039a9);
	call();

L03ad4:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1f);
	lt();
	push_word(0xb9c);
	load(0x2);
	bool_zero();
	bool_or();
	bool_and();
	push_offset(L03aa1);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L03b04:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03b54);
	jc(0x1);
	push_base_offset(0xc);
	push_dword(0x40000003);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0xc);
	sys1(0x4a);

L03b54:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x227a0);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x118);
	add();
	store_base();
	push_base_offset(0x118);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03c3c);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_dword(0x445b4);
	push_base_offset(0x118);
	load(0x2);
	cmd_6a();
	push_dword(0x40000004);
	push_base_offset(0x114);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x445b4);
	push_base_offset(0x114);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x108);
	load(0x2);
	push_base_offset(0x114);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x114);
	sys1(0x4a);

L03bef:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03c3c);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L03bef);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000002);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000003);
	eq();
	bool_or();
	push_offset(L03c3c);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("音声再生時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L03c3c:
	load_base();
	push_word(0x118);
	sub();
	store_base();
	ret();

L03c43:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03c74);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x40000005);
	sys1(0x48);

L03c74:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03c8b:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03cad);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L03cbe);
	jc(0x1);

L03cad:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L03b04);
	call();

L03cbe:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L03c8b);
	jc(0x0);
	push_offset(L03c43);
	call();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03ce3:
	sys1(0x5f);

L03ce5:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03d07);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L03d1d);
	jc(0x1);

L03d07:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0382a);
	call();
	push_offset(L03ce3);
	jc(0x0);

L03d1d:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L03ce5);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L03d3d:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03d83);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x40000001);
	push_base_offset(0xc);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x8);
	sys1(0x4a);

L03d83:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L03d89:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03d9a:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	eq();
	push_offset(L03df2);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L03dfb);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03df2);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L03dfb);
	jc(0x1);

L03df2:
	push_base_offset(0x4);
	load(0x2);
	push_offset(L03d3d);
	call();

L03dfb:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L03d9a);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03e1c:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L03ec4);
	jc(0x0);

L03e28:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	eq();
	push_offset(L03e80);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L03eaa);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03e80);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L03eaa);
	jc(0x1);

L03e80:
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L03808);
	call();
	push_offset(L03e1c);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x1b4d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x94);
	mul();
	add();
	push_word(0x94);
	memclr();

L03eaa:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L03e28);
	jc(0x0);

L03ec4:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L03eca:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03f1e);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L03808);
	call();
	push_offset(L03f1e);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x40000007);
	push_base_offset(0xc);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x8);
	sys1(0x4a);

L03f1e:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L03f24:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L03f48);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L03eca);
	call();
	push_offset(L03fc2);
	jmp();

L03f48:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03f4f:
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03f90);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L03fa8);
	jc(0x1);

L03f90:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L03eca);
	call();
	push_byte(0x40);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L03eca);
	call();

L03fa8:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L03f4f);
	jc(0x0);

L03fc2:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L03fed);
	jc(0x0);

L03fcf:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L0407d);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L03808);
	call();
	push_offset(L03fcf);
	jc(0x0);
	push_offset(L0407d);
	jmp();

L03fed:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03ff4:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L0407d);
	jc(0x0);

L04000:
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04041);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L04063);
	jc(0x1);

L04041:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L03808);
	call();
	push_offset(L03ff4);
	jc(0x0);
	push_byte(0x40);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L03808);
	call();
	push_offset(L03ff4);
	jc(0x0);

L04063:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L04000);
	jc(0x0);

L0407d:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L03d89);
	call();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L03f24);
	call();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L040a2:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_offset(L03c43);
	call();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L040b2:
	sys1(0x5f);

L040b4:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L0391f);
	call();
	push_offset(L040b2);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L040b4);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x118);
	add();
	store_base();
	push_base_offset(0x118);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L041ad);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x114);
	push_dword(0x40000000);
	push_base_offset(0x118);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x114);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L04160:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L041ad);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L04160);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000004);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000005);
	eq();
	bool_or();
	push_offset(L041ad);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("スプライトアニメーション開始時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L041ad:
	load_base();
	push_word(0x118);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x150);
	add();
	store_base();
	push_base_offset(0x130);
	move_arg(0x2);
	push_base_offset(0x134);
	move_arg(0x2);
	push_base_offset(0x138);
	move_arg(0x2);
	push_base_offset(0x13c);
	move_arg(0x2);
	push_base_offset(0x140);
	move_arg(0x2);
	push_base_offset(0x144);
	move_arg(0x2);
	push_base_offset(0x148);
	move_arg(0x2);
	push_base_offset(0x14c);
	move_arg(0x2);
	push_base_offset(0x150);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04306);
	jc(0x1);
	push_base_offset(0x138);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04306);
	jc(0x1);
	push_base_offset(0x12c);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x20);
	sub();
	move(0x2);
	push_dword(0x8e1cc);
	push_base_offset(0x12c);
	load(0x2);
	push_word(0x8b0);
	mul();
	add();
	push_base_offset(0x138);
	load(0x2);
	push_word(0x8b0);
	memcpy();
	push_dword(0x9f7cc);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_base_offset(0x134);
	load(0x2);
	push_byte(0x10);
	memcpy();
	push_dword(0x9f9cc);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x130);
	load(0x2);
	move(0x2);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x128);
	push_dword(0x40000006);
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x144);
	load(0x2);
	push_base_offset(0x140);
	load(0x2);
	push_base_offset(0x13c);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x8);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x8);
	push_base_offset(0x128);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L042b9:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04306);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L042b9);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000006);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000007);
	eq();
	bool_or();
	push_offset(L04306);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("スプライトアニメーション開始時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L04306:
	load_base();
	push_word(0x150);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L04410);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_offset(L03f24);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	neq();
	push_offset(L04381);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	grp2(0x1f);

L04381:
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memcpy();
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x514);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memclr();

L04410:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x1c);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L04693);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	neq();
	push_offset(L04490);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	grp2(0x1f);

L04490:
	push_word(0x3b90);
	push_base_offset(0x30);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memcpy();
	push_base_offset(0x10);
	push_word(0x3b90);
	push_base_offset(0x30);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);

L044d9:
	push_base_offset(0x8);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	sys1(0x20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	grp2(0x1f);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	grp2(0x1f);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);

L04565:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	lt();
	push_offset(L04565);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x40);
	add();
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	lt();
	push_offset(L044d9);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x2c);
	load(0x2);
	move(0x2);

L04693:
	push_base_offset(0x1c);
	load(0x2);
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L046e5);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L046e5:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L04778);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x514);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L04778:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L047cb);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x50c);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L047cb:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04839);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L04839);
	jc(0x0);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_offset(L04844);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L04839:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L04844:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L04862);
	jc(0x1);
	push_word(0x720);
	sys1(0x18);

L04862:
	push_word(0x504);
	load(0x2);
	push_offset(L048c7);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L048c7);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L04893);
	jc(0x1);
	sys1(0x17);
	push_offset(L048c7);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L048c7);
	jc(0x0);

L04893:
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L048c7);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L048c7);
	jc(0x0);
	sys1(0x5f);
	push_offset(L04862);
	jmp();

L048c7:
	push_base_offset(0x4);
	load(0x2);
	push_offset(L048d6);
	jc(0x1);
	push_word(0x720);
	sys1(0x19);

L048d6:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
