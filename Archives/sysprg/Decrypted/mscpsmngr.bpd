	load_base();
	push_byte(0xc);
	add();
	store_base();
	sys1(0x46);
	push_dword(0x42768);
	push_byte(0xe);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0xe);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x42224);
	push_byte(0x10);
	push_byte(0x10);
	mul();
	memclr();

L00034:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L000c8);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L0004e:
	push_base_offset(0x4);
	push_dword(0x42224);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L000aa);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L000a2);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	geq();
	push_offset(L000aa);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	snd1(0x14);

L000a2:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	memclr();

L000aa:
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	lt();
	push_offset(L0004e);
	jc(0x0);
	push_offset(L00034);
	jmp();

L000c8:
	push_dword(0x42768);
	push_byte(0xe);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42768);
	push_byte(0xe);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
