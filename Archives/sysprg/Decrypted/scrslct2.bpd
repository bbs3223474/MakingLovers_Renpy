	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x42af8);
	push_word(0x16b);
	push_byte(0x2);
	shl();
	add();
	push_offset(L0001c);
	move(0x2);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L0001c:
	load_base();
	push_word(0x3cd0);
	add();
	store_base();
	push_base_offset(0x3a7c);
	push_dword(0x48424);
	load(0x2);
	move(0x2);
	push_word(0xb5c);
	push_byte(0x1);
	move(0x2);
	push_byte(0x3);
	push_offset(L04afd);
	call();
	push_base_offset(0x3a78);
	move_arg(0x2);
	push_base_offset(0x3a60);
	push_byte(0x5);
	push_byte(0x8);
	push_byte(0x4);
	push_byte(0x7);
	push_byte(0x8);
	push_byte(0x8);
	push_byte(0x8);
	push_byte(0x8);
	cmd_0c(0x2, 0x8);
	push_base_offset(0x3a74);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3a70);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3a68);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0x104);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x3a64);
	push_word(0x3e8);
	move(0x2);
	push_base_offset(0x3cc8);
	push_byte(0x0);
	move(0x2);

L0008c:
	push_base_offset(0x3a40);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x3a64);
	load(0x2);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x2);
	div();
	push_byte(0x64);
	mul();
	add();
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x2);
	mod();
	push_byte(0x1e);
	mul();
	add();
	move(0x2);
	push_base_offset(0x3a20);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3cc8);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L0008c);
	jc(0x0);
	push_offset(L0023d);
	jmp();
	push_byte(0x0);
	push_offset(L0023d);
	jc(0x0);
	push_base_offset(0x3a74);
	load(0x2);
	push_byte(0x0);
	push_byte(0x8);
	push_string("マップ番号");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0023d);
	jc(0x1);
	push_base_offset(0x3a70);
	load(0x2);
	push_byte(0x0);
	push_byte(0x2);
	push_string("マップ画面モード");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0023d);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xfa);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x3);
	push_byte(0x1);
	add();
	push_string("スタミナ数");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0023d);
	jc(0x1);
	push_base_offset(0x3a6c);
	push_base_offset(0x3a60);
	push_base_offset(0x3a74);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x3a6c);
	load(0x2);
	push_string("時刻");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0023d);
	jc(0x1);
	push_base_offset(0x3cc8);
	push_byte(0x0);
	move(0x2);

L0017f:
	push_base_offset(0x3a40);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_word(0x960);
	push_string("表示時刻");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0023d);
	jc(0x1);
	push_base_offset(0x3a20);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x4);
	push_string("背景時刻");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0023d);
	jc(0x1);
	push_base_offset(0x3cc8);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3cc8);
	load(0x2);
	push_base_offset(0x3a6c);
	load(0x2);
	lt();
	push_offset(L0017f);
	jc(0x0);
	push_base_offset(0x3cc8);
	push_byte(0x0);
	move(0x2);

L001e8:
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xc8);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0xa);
	mul();
	add();
	push_base_offset(0x3cc8);
	load(0x2);
	add();
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x9);
	push_string("キャラクター番号");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0023d);
	jc(0x1);
	push_base_offset(0x3cc8);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x9);
	lt();
	push_offset(L001e8);
	jc(0x0);
	push_offset(L00262);
	jmp();

L0023d:
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_dword(0x43fec);
	load(0x2);
	call();
	push_offset(L01902);
	jmp();

L00262:
	push_offset(L05a16);
	call();
	push_base_offset(0x3a00);
	push_base_offset(0x3a68);
	load(0x2);
	push_offset(L03a64);
	call();
	push_base_offset(0x3970);
	push_string("SYS_MAP_CLICK");
	move(0x2);
	push_base_offset(0x396c);
	push_string("SYS_MAP_SELECT");
	move(0x2);
	push_string("data03xxx.arc");
	push_base_offset(0x3970);
	load(0x2);
	push_byte(0x0);
	push_dword(0x43efc);
	load(0x2);
	call();
	push_offset(L002b2);
	jc(0x1);
	push_byte(0x0);
	push_byte(0xf);
	add();
	push_word(0x52c);
	load(0x2);
	add();
	push_string("data03xxx.arc");
	push_base_offset(0x3970);
	load(0x2);
	snd1(0x20);
	push_offset(L002b9);
	jmp();

L002b2:
	push_base_offset(0x3970);
	push_byte(0x0);
	move(0x2);

L002b9:
	push_string("data03xxx.arc");
	push_base_offset(0x396c);
	load(0x2);
	push_byte(0x0);
	push_dword(0x43efc);
	load(0x2);
	call();
	push_offset(L0031c);
	jc(0x1);
	push_byte(0x0);
	push_byte(0x12);
	add();
	push_byte(0x0);
	add();
	push_string("data03xxx.arc");
	push_base_offset(0x396c);
	load(0x2);
	snd1(0x20);
	push_byte(0x0);
	push_byte(0x12);
	add();
	push_byte(0x1);
	add();
	push_string("data03xxx.arc");
	push_base_offset(0x396c);
	load(0x2);
	snd1(0x20);
	push_byte(0x0);
	push_byte(0x12);
	add();
	push_byte(0x2);
	add();
	push_string("data03xxx.arc");
	push_base_offset(0x396c);
	load(0x2);
	snd1(0x20);
	push_byte(0x0);
	push_byte(0x12);
	add();
	push_byte(0x3);
	add();
	push_string("data03xxx.arc");
	push_base_offset(0x396c);
	load(0x2);
	snd1(0x20);
	push_offset(L00323);
	jmp();

L0031c:
	push_base_offset(0x396c);
	push_byte(0x0);
	move(0x2);

L00323:
	push_word(0xb68);
	push_byte(0x1);
	move(0x2);
	push_word(0xb60);
	push_byte(0x1);
	move(0x2);
	push_word(0xb74);
	push_byte(0x1);
	move(0x2);
	push_word(0xb08);
	push_byte(0x1);
	move(0x2);
	push_dword(0x43f2c);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	push_offset(L00376);
	jc(0x0);
	push_byte(0x1);
	push_dword(0x43f10);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x43f0c);
	load(0x2);
	call();

L00376:
	push_dword(0x43f18);
	load(0x2);
	call();
	push_dword(0x43f24);
	load(0x2);
	call();
	push_dword(0x43f04);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	push_offset(L00486);
	jc(0x0);
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	push_byte(0x1);
	move(0x2);
	push_word(0x96);
	push_dword(0x44060);
	load(0x2);
	call();
	push_base_offset(0x3cc8);
	push_byte(0x0);
	move(0x2);

L003bd:
	push_dword(0x42abc);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	grp2(0x31);
	push_base_offset(0x3cc8);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L003bd);
	jc(0x0);
	push_dword(0x42aa8);
	load(0x2);
	push_byte(0x1);
	grp2(0x31);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x1);
	push_offset(L054d6);
	call();
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0042b);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	grp2(0x31);

L0042b:
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00476);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00476);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	grp2(0x31);

L00476:
	push_byte(0x1);
	push_offset(L052c7);
	call();
	push_byte(0x0);
	push_dword(0x44054);
	load(0x2);
	call();

L00486:
	push_dword(0xc58f4);
	push_dword(0x9fab8);
	push_dword(0x25e3c);
	memcpy();
	push_dword(0x44068);
	load(0x2);
	call();
	push_base_offset(0x3968);
	push_byte(0x20);
	push_word(0x116);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x3964);
	push_byte(0x20);
	push_word(0x114);
	add();
	load(0x1);
	move(0x2);
	push_word(0x2c0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_word(0x2c0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0xa);
	mul();
	push_word(0x7d0);
	push_byte(0xa);
	mul();
	ternary();
	push_base_offset(0x3960);
	move_arg(0x2);
	push_base_offset(0x3a7c);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x24640);
	add();
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x395c);
	move_arg(0x2);
	push_base_offset(0x3958);
	push_base_offset(0x395c);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x3960);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x3958);
	load(0x2);
	push_byte(0xa);
	gt();
	push_byte(0xa);
	push_base_offset(0x3958);
	load(0x2);
	ternary();
	push_base_offset(0x3958);
	move_arg(0x2);
	push_base_offset(0x3954);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x2);
	push_byte(0x3);
	push_byte(0x4);
	push_byte(0x5);
	push_byte(0x6);
	push_byte(0x7);
	push_byte(0x8);
	cmd_0c(0x2, 0x9);
	push_base_offset(0x3930);
	push_byte(0x1);
	push_byte(0x2);
	push_byte(0x3);
	push_byte(0x4);
	push_byte(0x5);
	push_byte(0x6);
	push_byte(0x7);
	push_byte(0x8);
	push_byte(0x9);
	push_byte(0x0);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x3908);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	push_byte(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x5);
	push_base_offset(0x3908);
	push_byte(0x5);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x3);
	push_byte(0x4);
	cmd_0c(0x2, 0x4);
	push_base_offset(0x3908);
	push_byte(0x9);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x5);
	push_byte(0x6);
	cmd_0c(0x2, 0x4);
	push_base_offset(0x3908);
	push_byte(0xd);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x5);
	push_base_offset(0x3908);
	push_byte(0x12);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x5);
	push_byte(0x4);
	push_base_offset(0x3908);
	grp2(0xbf);
	push_base_offset(0x310);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x38a8);
	move(0x2);
	push_base_offset(0x310);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x3100);
	move(0x2);
	push_base_offset(0x310);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x2a1c);
	move(0x2);
	push_base_offset(0x310);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x2338);
	move(0x2);
	push_base_offset(0x310);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x1c54);
	move(0x2);
	push_base_offset(0x310);
	push_byte(0x5);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x7a8);
	move(0x2);
	push_base_offset(0x310);
	push_byte(0x6);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x6e4);
	move(0x2);
	push_base_offset(0x310);
	push_byte(0x7);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x3d4);
	move(0x2);
	push_base_offset(0x110);
	push_byte(0x0);
	add();
	push_byte(0x8);
	move(0x2);
	push_base_offset(0x110);
	push_byte(0x4);
	add();
	push_base_offset(0x310);
	move(0x2);
	push_base_offset(0x110);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x110);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x110);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x110);
	push_byte(0x14);
	add();
	push_byte(0x2);
	push_byte(0x40);
	or();
	push_word(0x80);
	or();
	push_word(0x200);
	or();
	move(0x2);
	push_base_offset(0x110);
	push_byte(0x18);
	add();
	push_byte(0x4);
	move(0x2);
	push_base_offset(0x110);
	push_byte(0x1c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x110);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x110);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3a6c);
	load(0x2);
	push_base_offset(0x3a40);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x3958);
	load(0x2);
	push_base_offset(0x3a70);
	load(0x2);
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x3a70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0191b);
	call();
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3968);
	load(0x2);
	push_base_offset(0x3a00);
	push_base_offset(0x3954);
	push_offset(L02899);
	call();
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x80);
	push_dword(0x42a80);
	move_arg(0x2);
	push_base_offset(0x3a70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x1700);
	push_byte(0x0);
	add();
	push_word(0x1700);
	push_byte(0x45);
	add();
	ternary();
	push_base_offset(0x3cc0);
	move_arg(0x2);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x3cc0);
	load(0x2);
	push_base_offset(0x3a20);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	grp1(0x86);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_word(0x100);
	push_byte(0x0);
	push_word(0x780);
	grp1(0x85);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x0);
	grp2(0x88);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x88);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x32);
	grp2(0x89);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x80);
	push_dword(0x42a84);
	move_arg(0x2);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp1(0x86);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x760);
	grp1(0x85);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x0);
	grp2(0x88);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x88);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x32);
	grp2(0x89);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_base_offset(0x3a70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00895);
	jc(0x1);
	push_dword(0x42a80);
	load(0x2);
	push_base_offset(0x110);
	grp1(0xb7);
	push_base_offset(0x3a7c);
	load(0x2);
	push_byte(0x0);
	push_word(0x1f4);
	ternary();
	push_offset(L04689);
	call();
	push_base_offset(0xe4);
	move_arg(0x2);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0xe4);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x22);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_offset(L009c0);
	jmp();

L00895:
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_word(0x1700);
	push_byte(0x0);
	add();
	push_base_offset(0x3a20);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	grp1(0x86);
	push_dword(0x42a84);
	load(0x2);
	push_base_offset(0x110);
	grp1(0xb7);
	push_word(0xeca);
	push_dword(0x42a84);
	load(0x2);
	grp1(0x83);
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3a6c);
	load(0x2);
	push_base_offset(0x3a40);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x3958);
	load(0x2);
	push_base_offset(0x3a70);
	load(0x2);
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x1);
	push_byte(0x1);
	push_offset(L0191b);
	call();
	push_dword(0x42a80);
	load(0x2);
	push_base_offset(0x110);
	grp1(0xb7);
	push_word(0xed0);
	push_dword(0x42a80);
	load(0x2);
	grp1(0x83);
	push_word(0xeca);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0xed0);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_word(0xed0);
	grp1(0x12);
	grp1(0x50);
	push_base_offset(0xe8);
	move_arg(0x2);
	push_base_offset(0xe8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0xeca);
	push_byte(0x1);
	push_word(0x100);
	push_word(0x780);
	grp1(0x56);
	push_base_offset(0x3a7c);
	load(0x2);
	push_byte(0x0);
	push_word(0x1f4);
	ternary();
	push_offset(L04689);
	call();
	push_base_offset(0xe4);
	move_arg(0x2);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0xe8);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0xe4);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x22);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	grp1(0x32);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x1);
	grp1(0x84);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x1);
	grp1(0x84);
	push_base_offset(0xe8);
	load(0x2);
	grp1(0x51);
	push_word(0xeca);
	grp1(0x12);

L009c0:
	push_base_offset(0xe0);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xdc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xd4);
	push_word(0x4ec);
	load(0x2);
	bool_zero();
	push_word(0x450);
	load(0x2);
	bool_or();
	move(0x2);
	push_base_offset(0xd8);
	push_word(0x4ec);
	load(0x2);
	move(0x2);
	push_base_offset(0xd0);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xcc);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc8);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc0);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xbc);
	push_byte(0x26);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0xb4);
	push_byte(0x28);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0xac);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);

L00a29:
	push_dword(0x42a80);
	load(0x2);
	grp2(0xb8);
	push_base_offset(0x8c);
	move_arg(0x2);
	push_base_offset(0xe0);
	load(0x2);
	push_offset(L00a89);
	jc(0x1);
	push_word(0xed0);
	grp1(0x4);
	push_word(0xeca);
	push_word(0xed0);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x1f);
	push_word(0xed0);
	grp1(0x12);
	grp1(0x50);
	push_base_offset(0xd0);
	move_arg(0x2);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0xeca);
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x785);
	grp1(0x56);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x1);
	grp1(0x54);
	push_base_offset(0xe0);
	push_byte(0x0);
	move(0x2);

L00a89:
	push_base_offset(0xdc);
	load(0x2);
	push_offset(L00af7);
	jc(0x1);
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3a6c);
	load(0x2);
	push_base_offset(0x3a40);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x3958);
	load(0x2);
	push_base_offset(0x3a70);
	load(0x2);
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x1);
	push_byte(0x1);
	push_offset(L0191b);
	call();
	push_base_offset(0x3a70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00af7);
	jc(0x1);
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3968);
	load(0x2);
	push_base_offset(0x3a00);
	push_base_offset(0x3954);
	push_offset(L02899);
	call();
	push_offset(L00af7);
	jmp();

L00af7:
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00ca4);
	jc(0x0);
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3a6c);
	load(0x2);
	push_base_offset(0x3a40);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x3958);
	load(0x2);
	push_base_offset(0x3a70);
	load(0x2);
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x3a70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0191b);
	call();
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3968);
	load(0x2);
	push_base_offset(0x3a00);
	push_base_offset(0x3954);
	push_offset(L02899);
	call();
	push_base_offset(0x3a70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00baf);
	jc(0x1);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_word(0x1700);
	push_byte(0x0);
	add();
	push_base_offset(0x3a20);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	grp1(0x86);
	push_dword(0x42a80);
	load(0x2);
	push_base_offset(0x110);
	grp1(0xb7);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x0);
	grp1(0x84);
	push_offset(L00c5d);
	jmp();

L00baf:
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_word(0x1700);
	push_byte(0x0);
	add();
	push_base_offset(0x3a20);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	grp1(0x86);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x1);
	grp1(0x84);
	push_dword(0x42a84);
	load(0x2);
	push_base_offset(0x110);
	grp1(0xb7);
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3a6c);
	load(0x2);
	push_base_offset(0x3a40);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x3958);
	load(0x2);
	push_base_offset(0x3a70);
	load(0x2);
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x1);
	push_byte(0x1);
	push_offset(L0191b);
	call();
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_word(0x1700);
	push_byte(0x45);
	add();
	push_base_offset(0x3a20);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	grp1(0x86);
	push_dword(0x42a80);
	load(0x2);
	push_base_offset(0x110);
	grp1(0xb7);

L00c5d:
	push_word(0x96);
	push_offset(L04689);
	call();
	push_base_offset(0xe4);
	move_arg(0x2);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0xd0);
	load(0x2);
	push_word(0x100);
	push_base_offset(0xe4);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x22);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0xd0);
	load(0x2);
	grp1(0x51);
	push_word(0xeca);
	grp1(0x12);
	push_base_offset(0xd0);
	push_byte(0x0);
	move(0x2);

L00ca4:
	push_base_offset(0x8c);
	load(0x2);
	push_base_offset(0x110);
	grp2(0xba);
	push_base_offset(0xbc);
	sys1(0x12);
	push_base_offset(0xa4);
	move_arg(0x2);
	push_base_offset(0xb4);
	sys1(0x12);
	push_base_offset(0xa0);
	move_arg(0x2);
	push_base_offset(0xac);
	sys1(0x12);
	push_base_offset(0x9c);
	move_arg(0x2);
	push_base_offset(0x64);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x60);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5c);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_word(0xb64);
	push_byte(0x1);
	move(0x2);
	sys1(0x4);
	push_base_offset(0xc4);
	move_arg(0x2);
	push_base_offset(0xc0);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L00d00:
	sys1(0x5f);
	push_word(0xb68);
	push_byte(0x0);
	move(0x2);
	push_word(0xb6c);
	load(0x2);
	push_offset(L00df2);
	jc(0x1);
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x20);
	push_word(0x114);
	add();
	load(0x1);
	neq();
	push_offset(L00d43);
	jc(0x1);
	push_base_offset(0x395c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3958);
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x24640);
	add();
	push_byte(0x0);
	move(0x2);

L00d43:
	push_base_offset(0x3968);
	push_byte(0x20);
	push_word(0x116);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x3964);
	push_byte(0x20);
	push_word(0x114);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3a6c);
	load(0x2);
	push_base_offset(0x3a40);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x3958);
	load(0x2);
	push_base_offset(0x3a70);
	load(0x2);
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x1);
	push_byte(0x1);
	push_offset(L0191b);
	call();
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3968);
	load(0x2);
	push_base_offset(0x3a00);
	push_base_offset(0x3954);
	push_offset(L02899);
	call();
	push_base_offset(0x3a70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00dc9);
	jc(0x0);
	push_dword(0x42a84);
	load(0x2);
	push_base_offset(0x110);
	grp1(0xb7);

L00dc9:
	push_base_offset(0x8c);
	load(0x2);
	push_base_offset(0x110);
	grp2(0xba);
	push_word(0xb6c);
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0xc4);
	move_arg(0x2);
	push_base_offset(0xc0);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00d00);
	jmp();

L00df2:
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00ff2);
	jc(0x1);
	push_base_offset(0x3cd0);
	push_word(0x4ec);
	load(0x2);
	bool_zero();
	push_word(0x450);
	load(0x2);
	bool_or();
	move(0x2);
	push_base_offset(0x3cd0);
	load(0x2);
	push_base_offset(0xd4);
	load(0x2);
	bool_and();
	push_offset(L00ff2);
	jc(0x0);
	push_base_offset(0x3cd0);
	load(0x2);
	push_base_offset(0xd4);
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L00e3f);
	jc(0x1);
	push_base_offset(0xd4);
	push_base_offset(0x3cd0);
	load(0x2);
	move(0x2);
	push_offset(L00ff2);
	jmp();

L00e3f:
	push_base_offset(0x3cd0);
	load(0x2);
	bool_zero();
	push_base_offset(0xd4);
	load(0x2);
	bool_and();
	push_offset(L00e72);
	jc(0x1);
	push_base_offset(0xd4);
	push_base_offset(0x3cd0);
	load(0x2);
	move(0x2);
	sys1(0x4);
	push_base_offset(0xc4);
	move_arg(0x2);
	push_base_offset(0xc0);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00ff2);
	jmp();

L00e72:
	sys1(0x4);
	push_base_offset(0xc4);
	move_arg(0x2);
	push_base_offset(0xc4);
	load(0x2);
	push_base_offset(0xc0);
	load(0x2);
	geq();
	push_offset(L00ff2);
	jc(0x1);
	push_base_offset(0x3ccc);
	push_base_offset(0xc4);
	load(0x2);
	push_base_offset(0xc0);
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc0);
	push_base_offset(0xc0);
	load(0x2);
	push_base_offset(0x3ccc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x395c);
	push_base_offset(0x395c);
	load(0x2);
	push_base_offset(0x3ccc);
	load(0x2);
	add();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x24640);
	add();
	push_base_offset(0x395c);
	load(0x2);
	move(0x2);
	push_base_offset(0x3cc4);
	push_base_offset(0x395c);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x3960);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x3cc4);
	load(0x2);
	push_byte(0xa);
	gt();
	push_byte(0xa);
	push_base_offset(0x3cc4);
	load(0x2);
	ternary();
	push_base_offset(0x3cc4);
	move_arg(0x2);
	push_base_offset(0x3cc4);
	load(0x2);
	push_base_offset(0x3958);
	load(0x2);
	neq();
	push_offset(L00ff2);
	jc(0x1);
	push_base_offset(0x3cc8);
	push_base_offset(0x3958);
	load(0x2);
	move(0x2);

L00f10:
	push_base_offset(0x3cc8);
	load(0x2);
	push_base_offset(0x3cc4);
	load(0x2);
	geq();
	push_offset(L00f6f);
	jc(0x0);
	push_base_offset(0x1c54);
	push_byte(0x3);
	push_word(0xc4);
	mul();
	add();
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x3cc8);
	load(0x2);
	push_word(0xc4);
	mul();
	sub();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8c);
	load(0x2);
	push_byte(0x4);
	push_byte(0x3);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	add();
	push_base_offset(0x3cc8);
	load(0x2);
	sub();
	push_byte(0x0);
	grp2(0xbb);
	push_base_offset(0x3cc8);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00f10);
	jmp();

L00f6f:
	push_base_offset(0x3958);
	push_base_offset(0x3cc4);
	load(0x2);
	move(0x2);
	push_byte(0x0);
	grp1(0x0);
	push_word(0x3e8);
	push_word(0x3e8);
	div();
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0x3cc4);
	load(0x2);
	push_byte(0xa);
	geq();
	push_offset(L00ff2);
	jc(0x1);
	push_base_offset(0x60);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x395c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3958);
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x24640);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3a6c);
	load(0x2);
	push_byte(0x1);
	sub();
	geq();
	push_offset(L00fe0);
	jc(0x1);
	push_base_offset(0x58);
	push_byte(0x7);
	move(0x2);
	push_base_offset(0x54);
	push_byte(0x0);
	move(0x2);
	push_offset(L0119b);
	jmp();

L00fe0:
	push_base_offset(0x58);
	push_byte(0x4);
	move(0x2);
	push_base_offset(0x54);
	push_byte(0xe);
	move(0x2);
	push_offset(L0119b);
	jmp();

L00ff2:
	push_base_offset(0xbc);
	sys1(0x12);
	push_base_offset(0x98);
	move_arg(0x2);
	push_base_offset(0xb4);
	sys1(0x12);
	push_base_offset(0x94);
	move_arg(0x2);
	push_base_offset(0xac);
	sys1(0x12);
	push_base_offset(0x90);
	move_arg(0x2);
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0xa4);
	load(0x2);
	push_base_offset(0x98);
	load(0x2);
	ternary();
	push_base_offset(0xa4);
	move_arg(0x2);
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0xa0);
	load(0x2);
	push_base_offset(0x94);
	load(0x2);
	ternary();
	push_base_offset(0xa0);
	move_arg(0x2);
	push_base_offset(0x3a74);
	load(0x2);
	push_byte(0x3);
	neq();
	push_base_offset(0x3a74);
	load(0x2);
	push_byte(0x5);
	neq();
	bool_and();
	push_base_offset(0x9c);
	load(0x2);
	push_base_offset(0x90);
	load(0x2);
	ternary();
	push_base_offset(0x9c);
	move_arg(0x2);

L01061:
	push_base_offset(0x88);
	push_base_offset(0x8c);
	load(0x2);
	grp1(0xbf);
	push_base_offset(0x88);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000006);
	eq();
	push_offset(L010ac);
	jc(0x1);
	push_base_offset(0x64);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x58);
	push_base_offset(0x88);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x54);
	push_base_offset(0x88);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_offset(L0119b);
	jmp();

L010ac:
	push_base_offset(0x88);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000002);
	eq();
	push_offset(L0118b);
	jc(0x1);
	push_base_offset(0x58);
	push_base_offset(0x88);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x54);
	push_base_offset(0x88);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0xcc);
	load(0x2);
	eq();
	push_base_offset(0x54);
	load(0x2);
	push_base_offset(0xc8);
	load(0x2);
	eq();
	bool_and();
	push_offset(L01061);
	jc(0x0);
	push_base_offset(0xcc);
	push_base_offset(0x58);
	load(0x2);
	move(0x2);
	push_base_offset(0xc8);
	push_base_offset(0x54);
	load(0x2);
	move(0x2);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_offset(L01146);
	jc(0x0);
	push_base_offset(0x50);
	push_dword(0x10000002);
	push_byte(0x0);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	cmd_0c(0x2, 0x3);
	push_base_offset(0x8c);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x50);
	sys1(0xac);
	push_offset(L01061);
	jmp();

L01146:
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01171);
	jc(0x1);
	push_base_offset(0x50);
	push_dword(0x10000002);
	push_byte(0x0);
	push_base_offset(0x54);
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_base_offset(0x8c);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x50);
	sys1(0xac);

L01171:
	push_base_offset(0x396c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01061);
	jc(0x1);
	push_byte(0x0);
	push_byte(0x12);
	add();
	push_offset(L046d9);
	call();
	push_offset(L01061);
	jmp();

L0118b:
	push_base_offset(0x88);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01061);
	jc(0x1);

L0119b:
	push_base_offset(0x7c);
	push_base_offset(0x8c);
	load(0x2);
	grp1(0xbc);
	push_base_offset(0x7c);
	push_byte(0x0);
	add();
	load(0x2);
	push_word(0x504);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0x64);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0x60);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0x98);
	load(0x2);
	push_base_offset(0xa4);
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x94);
	load(0x2);
	push_base_offset(0xa0);
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x90);
	load(0x2);
	push_base_offset(0x9c);
	load(0x2);
	eq();
	bool_and();
	push_offset(L00d00);
	jc(0x0);
	push_word(0xb64);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8c);
	load(0x2);
	grp1(0xb9);
	push_word(0x504);
	load(0x2);
	push_offset(L018e9);
	jc(0x0);
	push_word(0xb68);
	push_byte(0x1);
	move(0x2);
	push_word(0x450);
	load(0x2);
	push_offset(L00a29);
	jc(0x0);
	push_base_offset(0x64);
	load(0x2);
	push_offset(L01258);
	jc(0x1);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x0);
	push_byte(0xf);
	add();
	push_byte(0x0);
	push_byte(0x0);
	add();
	ternary();
	push_base_offset(0x3cc4);
	move_arg(0x2);
	push_base_offset(0x3cc4);
	load(0x2);
	push_byte(0x0);
	push_byte(0xf);
	add();
	eq();
	push_base_offset(0x3970);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_offset(L01258);
	jc(0x0);
	push_base_offset(0x3cc4);
	load(0x2);
	push_offset(L046d9);
	call();

L01258:
	push_base_offset(0x98);
	load(0x2);
	push_base_offset(0xa4);
	load(0x2);
	neq();
	push_offset(L012cb);
	jc(0x0);
	push_base_offset(0x94);
	load(0x2);
	push_base_offset(0xa0);
	load(0x2);
	neq();
	push_offset(L012dc);
	jc(0x0);
	push_base_offset(0x90);
	load(0x2);
	push_base_offset(0x9c);
	load(0x2);
	neq();
	push_offset(L012ed);
	jc(0x0);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L012f1);
	jc(0x0);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L0134b);
	jc(0x0);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x5);
	eq();
	push_offset(L01412);
	jc(0x0);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x7);
	eq();
	push_offset(L01416);
	jc(0x0);
	push_base_offset(0x3ccc);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L01428);
	jmp();

L012cb:
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00a29);
	jc(0x1);
	push_offset(L01358);
	jmp();

L012dc:
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00a29);
	jc(0x1);
	push_offset(L013bd);
	jmp();

L012ed:
	push_offset(L01412);
	jmp();

L012f1:
	push_base_offset(0x3a70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01315);
	jc(0x1);
	push_base_offset(0x5c);
	push_base_offset(0x3930);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_offset(L01315);
	jmp();

L01315:
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L0132d);
	jc(0x0);
	push_base_offset(0x3ccc);
	push_byte(0x0);
	move(0x2);
	push_offset(L01428);
	jmp();

L0132d:
	push_base_offset(0x3ccc);
	push_word(0xc8);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0xa);
	mul();
	add();
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x1);
	sub();
	add();
	move(0x2);
	push_offset(L01428);
	jmp();

L0134b:
	push_base_offset(0x54);
	load(0x2);
	push_byte(0xd);
	eq();
	push_offset(L013b0);
	jc(0x1);

L01358:
	push_base_offset(0x3a68);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x0);
	lt();
	push_base_offset(0x3a6c);
	load(0x2);
	push_byte(0x1);
	sub();
	push_base_offset(0x3a68);
	load(0x2);
	ternary();
	push_base_offset(0x3a68);
	move_arg(0x2);
	push_base_offset(0x3a00);
	push_base_offset(0x3a68);
	load(0x2);
	push_offset(L03a64);
	call();
	push_base_offset(0xe0);
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0x104);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x3a68);
	load(0x2);
	move(0x2);
	push_offset(L00a29);
	jmp();

L013b0:
	push_base_offset(0x54);
	load(0x2);
	push_byte(0xe);
	eq();
	push_offset(L00a29);
	jc(0x1);

L013bd:
	push_base_offset(0x3a68);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3a6c);
	load(0x2);
	geq();
	push_byte(0x0);
	push_base_offset(0x3a68);
	load(0x2);
	ternary();
	push_base_offset(0x3a68);
	move_arg(0x2);
	push_base_offset(0x3a00);
	push_base_offset(0x3a68);
	load(0x2);
	push_offset(L03a64);
	call();
	push_base_offset(0xe0);
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0x104);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x3a68);
	load(0x2);
	move(0x2);
	push_offset(L00a29);
	jmp();

L01412:
	push_offset(L00a29);
	jmp();

L01416:
	push_base_offset(0x5c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3ccc);
	push_byte(0x0);
	move(0x2);
	push_offset(L01428);
	jmp();

L01428:
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L015bf);
	jc(0x1);
	grp1(0x50);
	push_dword(0x42a88);
	move_arg(0x2);
	push_byte(0x3);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xfa);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	sub();
	push_byte(0x0);
	lt();
	push_byte(0x0);
	push_byte(0x3);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xfa);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	sub();
	ternary();
	push_base_offset(0x3cc4);
	move_arg(0x2);
	push_base_offset(0x3cc4);
	push_byte(0x1);
	push_base_offset(0x3cc4);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x3cc4);
	load(0x2);
	push_byte(0x4);
	lt();
	push_base_offset(0x3cc4);
	load(0x2);
	push_byte(0x4);
	push_byte(0x1);
	sub();
	ternary();
	push_base_offset(0x3cc4);
	move_arg(0x2);
	push_dword(0x42a88);
	load(0x2);
	push_base_offset(0x6e4);
	push_base_offset(0x3cc4);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x6e4);
	push_base_offset(0x3cc4);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_word(0x1700);
	push_word(0xd1);
	add();
	push_byte(0x3);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xfa);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	sub();
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x782);
	grp1(0x56);
	push_dword(0x42a88);
	load(0x2);
	push_byte(0x1);
	grp1(0x54);
	push_base_offset(0x110);
	push_base_offset(0x3a74);
	load(0x2);
	push_base_offset(0x3a68);
	load(0x2);
	push_base_offset(0x3a6c);
	load(0x2);
	push_base_offset(0x3a40);
	push_base_offset(0x3a68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x3958);
	load(0x2);
	push_base_offset(0x3a70);
	load(0x2);
	push_base_offset(0x3964);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x3a70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0191b);
	call();
	push_base_offset(0x310);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_dword(0x42a80);
	load(0x2);
	push_base_offset(0x110);
	grp1(0xb7);
	push_word(0x12c);
	push_offset(L04689);
	call();
	push_base_offset(0xe4);
	move_arg(0x2);
	push_base_offset(0xe4);
	load(0x2);
	push_byte(0x0);
	gt();
	push_byte(0x5);
	push_byte(0x0);
	ternary();
	push_base_offset(0x3cc4);
	move_arg(0x2);
	push_base_offset(0x3cc4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_dword(0x42a88);
	load(0x2);
	push_word(0x100);
	push_base_offset(0xe4);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x22);
	push_base_offset(0x3cc4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_dword(0x42a88);
	load(0x2);
	grp1(0x51);
	push_dword(0x42a88);
	push_byte(0x0);
	move(0x2);

L015bf:
	push_word(0xed0);
	grp1(0x4);
	push_word(0xeca);
	push_word(0xed0);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x1f);
	push_word(0xed0);
	grp1(0x12);
	grp1(0x50);
	push_base_offset(0xe8);
	move_arg(0x2);
	push_base_offset(0xe8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0xeca);
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x785);
	grp1(0x56);
	push_base_offset(0xe8);
	load(0x2);
	push_byte(0x1);
	grp1(0x54);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	grp1(0x84);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x0);
	grp1(0x84);
	push_word(0x1f4);
	push_offset(L04689);
	call();
	push_base_offset(0xe4);
	move_arg(0x2);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0xe8);
	load(0x2);
	push_word(0x100);
	push_base_offset(0xe4);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x22);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0xe8);
	load(0x2);
	grp1(0x51);
	push_word(0xeca);
	grp1(0x12);
	push_dword(0x42a80);
	load(0x2);
	grp1(0x81);
	push_dword(0x42a80);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a84);
	load(0x2);
	grp1(0x81);
	push_dword(0x42a84);
	push_byte(0x0);
	move(0x2);

L0167a:
	push_word(0x450);
	load(0x2);
	push_offset(L016a3);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0xb);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L016a3);
	jc(0x0);
	push_word(0x45c);
	load(0x2);
	push_offset(L016a9);
	jc(0x1);

L016a3:
	sys1(0x5f);
	push_offset(L0167a);
	jmp();

L016a9:
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_base_offset(0x3ccc);
	load(0x2);
	move(0x2);
	push_base_offset(0x3ccc);
	load(0x2);
	push_dword(0x43fec);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0x104);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x3a68);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x24640);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L01728);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xfa);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xfa);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L01728:
	push_dword(0x44064);
	load(0x2);
	call();
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_offset(L0179c);
	jc(0x1);
	push_base_offset(0x30);
	push_byte(0x0);
	push_byte(0x2);
	shl();
	add();
	push_string("撤退");
	cmd_0c(0x2, 0x1);
	push_base_offset(0x30);
	push_byte(0x1);
	push_byte(0x2);
	shl();
	add();
	push_string("リュミエール橋");
	push_string("校舎");
	push_string("エントランス");
	push_string("訓練場");
	push_string("保健室");
	push_string("図書館");
	push_string("食堂");
	push_string("大森林　深層部");
	push_string("学園入り口");
	cmd_0c(0x2, 0x9);
	push_base_offset(0x8);
	push_base_offset(0x30);
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	move(0x2);
	push_string("選択肢");
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	push_dword(0x44050);
	load(0x2);
	call();

L0179c:
	push_dword(0x4406c);
	load(0x2);
	call();
	push_word(0xb68);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x1a);
	add();
	load(0x1);
	push_offset(L017db);
	jc(0x1);
	push_byte(0x20);
	push_byte(0xa);
	add();
	push_byte(0x0);
	move(0x1);
	push_string("sysprg.arc");
	push_string("environ._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	sys1(0x41);

L017db:
	push_byte(0x20);
	push_byte(0x1a);
	add();
	load(0x1);
	push_dword(0x44070);
	load(0x2);
	call();
	push_dword(0x43f0c);
	load(0x2);
	call();
	push_dword(0x43f1c);
	load(0x2);
	call();
	push_dword(0x43f28);
	load(0x2);
	call();
	push_word(0x504);
	load(0x2);
	push_offset(L018e9);
	jc(0x0);
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	push_byte(0x0);
	move(0x2);
	push_byte(0x0);
	push_dword(0x44058);
	load(0x2);
	call();
	push_base_offset(0x3cc8);
	push_byte(0x0);
	move(0x2);

L0182a:
	push_dword(0x42abc);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x31);
	push_base_offset(0x3cc8);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3cc8);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L0182a);
	jc(0x0);
	push_dword(0x42aa8);
	load(0x2);
	push_byte(0x0);
	grp2(0x31);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x0);
	push_offset(L054d6);
	call();
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01898);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x31);

L01898:
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L018e3);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L018e3);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x31);

L018e3:
	push_byte(0x0);
	push_offset(L052c7);
	call();

L018e9:
	push_word(0xb08);
	push_byte(0x0);
	move(0x2);
	push_word(0xb74);
	push_byte(0x0);
	move(0x2);
	push_word(0xb60);
	push_byte(0x0);
	move(0x2);
	push_offset(L03ee0);
	call();

L01902:
	push_base_offset(0x3a78);
	load(0x2);
	push_offset(L04afd);
	call();
	push_word(0xb5c);
	push_byte(0x0);
	move(0x2);
	push_byte(0x0);
	load_base();
	push_word(0x3cd0);
	sub();
	store_base();
	ret();

L0191b:
	load_base();
	push_word(0x1ec);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d8);
	move_arg(0x2);
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_base_offset(0x1e0);
	move_arg(0x2);
	push_base_offset(0x1e4);
	move_arg(0x2);
	push_base_offset(0x1e8);
	move_arg(0x2);
	push_base_offset(0x1ec);
	move_arg(0x2);
	push_base_offset(0x1c4);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x20);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x24);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1c4);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x1b8);
	push_byte(0x24);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1c4);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x1b8);
	push_byte(0x3c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x34);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_word(0x9c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_word(0xa0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_word(0xa4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_word(0xa8);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1c4);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x178);
	push_word(0xa8);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1c4);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x178);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1e0);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L01a96);
	jc(0x1);
	push_base_offset(0x9c);
	push_word(0x41c);
	push_word(0x443);
	push_word(0x46a);
	push_word(0x490);
	push_word(0x500);
	push_word(0x500);
	push_word(0x500);
	push_word(0x500);
	cmd_0c(0x2, 0x8);
	push_offset(L01b41);
	jmp();

L01a96:
	push_base_offset(0x1e0);
	load(0x2);
	push_byte(0x5);
	eq();
	push_offset(L01ac5);
	jc(0x1);
	push_base_offset(0x9c);
	push_word(0x418);
	push_word(0x437);
	push_word(0x456);
	push_word(0x476);
	push_word(0x495);
	push_word(0x500);
	push_word(0x500);
	push_word(0x500);
	cmd_0c(0x2, 0x8);
	push_offset(L01b41);
	jmp();

L01ac5:
	push_base_offset(0x1e0);
	load(0x2);
	push_byte(0x6);
	eq();
	push_offset(L01af4);
	jc(0x1);
	push_base_offset(0x9c);
	push_word(0x419);
	push_word(0x432);
	push_word(0x44b);
	push_word(0x463);
	push_word(0x47b);
	push_word(0x493);
	push_word(0x500);
	push_word(0x500);
	cmd_0c(0x2, 0x8);
	push_offset(L01b41);
	jmp();

L01af4:
	push_base_offset(0x1e0);
	load(0x2);
	push_byte(0x7);
	eq();
	push_offset(L01b23);
	jc(0x1);
	push_base_offset(0x9c);
	push_word(0x418);
	push_word(0x42d);
	push_word(0x442);
	push_word(0x457);
	push_word(0x46c);
	push_word(0x481);
	push_word(0x496);
	push_word(0x500);
	cmd_0c(0x2, 0x8);
	push_offset(L01b41);
	jmp();

L01b23:
	push_base_offset(0x9c);
	push_word(0x40e);
	push_word(0x423);
	push_word(0x438);
	push_word(0x44d);
	push_word(0x462);
	push_word(0x476);
	push_word(0x48b);
	push_word(0x4a0);
	cmd_0c(0x2, 0x8);

L01b41:
	push_base_offset(0xb4);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x0);
	add();
	push_byte(0x1b);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x8);
	add();
	push_base_offset(0xb4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1b8);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x3c5);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x20e);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x1d0);
	load(0x2);
	push_byte(0x1);
	eq();
	push_word(0x1700);
	push_word(0xa5);
	add();
	push_byte(0x1);
	add();
	push_word(0x1700);
	push_word(0xa5);
	add();
	ternary();
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_base_offset(0x1d0);
	load(0x2);
	push_byte(0x1);
	eq();
	bool_and();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x410);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x227);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xc2);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_base_offset(0x9c);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x2a8);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xaf);
	add();
	push_base_offset(0x1e0);
	load(0x2);
	push_byte(0x4);
	sub();
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xac);
	push_word(0x1700);
	push_word(0xc3);
	add();
	move(0x2);
	push_base_offset(0xb0);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xa8);
	push_byte(0x0);
	move(0x2);

L01dd6:
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_base_offset(0x1d0);
	load(0x2);
	push_byte(0x1);
	eq();
	bool_and();
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0xa);
	push_base_offset(0x1d8);
	load(0x2);
	sub();
	lt();
	bool_and();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x410);
	push_base_offset(0xb0);
	load(0x2);
	add();
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x227);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xac);
	load(0x2);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x3);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0xa8);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x18);
	push_base_offset(0xac);
	load(0x2);
	grp1(0x16);
	push_base_offset(0xb0);
	push_base_offset(0xb0);
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0xac);
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa8);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L01dd6);
	jc(0x0);
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_base_offset(0x1d0);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x3db);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x29f);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xa7);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xa7);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xa7);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_word(0x1700);
	push_word(0xa7);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0xd);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_base_offset(0x1d0);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x4be);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x29f);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xab);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xab);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xab);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_word(0x1700);
	push_word(0xab);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0xe);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xa8);
	push_byte(0x0);
	move(0x2);

L0205a:
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_base_offset(0xa8);
	load(0x2);
	push_base_offset(0x1e0);
	load(0x2);
	lt();
	bool_and();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_base_offset(0x9c);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x2a7);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0xa8);
	load(0x2);
	push_base_offset(0x1e4);
	load(0x2);
	eq();
	push_word(0x1700);
	push_word(0xb4);
	add();
	push_byte(0x1);
	add();
	push_word(0x1700);
	push_word(0xb4);
	add();
	ternary();
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0xf);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0xa8);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xa8);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L0205a);
	jc(0x0);
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_base_offset(0x1dc);
	load(0x2);
	push_word(0x3e8);
	div();
	push_byte(0x4);
	lt();
	bool_and();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x3e9);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x245);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xb8);
	add();
	push_base_offset(0x1dc);
	load(0x2);
	push_word(0x3e8);
	div();
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x17);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_base_offset(0x1dc);
	load(0x2);
	push_word(0x3e8);
	mod();
	push_byte(0x64);
	div();
	push_byte(0x4);
	lt();
	bool_and();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x41f);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x245);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xb8);
	add();
	push_base_offset(0x1dc);
	load(0x2);
	push_word(0x3e8);
	mod();
	push_byte(0x64);
	div();
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x18);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_base_offset(0x1dc);
	load(0x2);
	push_byte(0x64);
	mod();
	push_byte(0xa);
	div();
	push_byte(0x4);
	lt();
	bool_and();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x46c);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x245);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xb8);
	add();
	push_base_offset(0x1dc);
	load(0x2);
	push_byte(0x64);
	mod();
	push_byte(0xa);
	div();
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x19);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_base_offset(0x1dc);
	load(0x2);
	push_byte(0xa);
	mod();
	push_byte(0x4);
	lt();
	bool_and();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x4a2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x245);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xb8);
	add();
	push_base_offset(0x1dc);
	load(0x2);
	push_byte(0xa);
	mod();
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x1a);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xb4);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x8);
	add();
	push_base_offset(0xb4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1b8);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x1d4);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x1700);
	push_word(0x99);
	add();
	push_word(0x1700);
	push_word(0x95);
	add();
	ternary();
	push_base_offset(0xac);
	move_arg(0x2);
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_byte(0x6);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_byte(0x5);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xac);
	load(0x2);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_base_offset(0xac);
	load(0x2);
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xb4);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x6);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x0);
	add();
	push_byte(0x4);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x8);
	add();
	push_base_offset(0xb4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x6);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1b8);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x494);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x165);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xd0);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xa8);
	push_byte(0x0);
	move(0x2);

L0266f:
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0xa8);
	load(0x2);
	sub();
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xfa);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	leq();
	bool_and();
	push_base_offset(0x1cc);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xfa);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0xa8);
	load(0x2);
	sub();
	neq();
	bool_or();
	bool_and();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_word(0x499);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x192);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x21);
	mul();
	add();
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xd1);
	add();
	push_base_offset(0xa8);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0xa8);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xa8);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L0266f);
	jc(0x0);
	push_base_offset(0xb4);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x7);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x8);
	add();
	push_base_offset(0xb4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b8);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x7);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1b8);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x178);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x8);
	add();
	push_byte(0x8);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0xc);
	add();
	push_word(0x274);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0x9d);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0x9d);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0x9d);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x178);
	push_byte(0x30);
	add();
	push_word(0x1700);
	push_word(0x9d);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x178);
	push_word(0xc4);
	memcpy();
	load_base();
	push_word(0x1ec);
	sub();
	store_base();
	ret();

L02899:
	load_base();
	push_word(0x360);
	add();
	store_base();
	push_base_offset(0x34c);
	move_arg(0x2);
	push_base_offset(0x350);
	move_arg(0x2);
	push_base_offset(0x354);
	move_arg(0x2);
	push_base_offset(0x358);
	move_arg(0x2);
	push_base_offset(0x35c);
	move_arg(0x2);
	push_base_offset(0x360);
	move_arg(0x2);
	push_base_offset(0x348);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x348);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x348);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x20);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x24);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x348);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x33c);
	push_byte(0x24);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x348);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x33c);
	push_byte(0x3c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x34);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_word(0x9c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_word(0xa0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_word(0xa4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_word(0xa8);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x348);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x2fc);
	push_word(0xa8);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x348);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x2fc);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x238);
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x0);
	add();
	push_byte(0xa);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x8);
	add();
	push_base_offset(0x238);
	load(0x2);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x14);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x33c);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x33c);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x234);
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x0);
	add();
	push_byte(0xa);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x8);
	add();
	push_base_offset(0x234);
	load(0x2);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x33c);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x230);
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x0);
	add();
	push_byte(0xa);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x8);
	add();
	push_base_offset(0x230);
	load(0x2);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x33c);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x22c);
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x0);
	add();
	push_byte(0xa);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x8);
	add();
	push_base_offset(0x22c);
	load(0x2);
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x33c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x33c);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x184);
	push_byte(0x16);
	push_byte(0x9);
	push_word(0x1b3);
	push_word(0x2fd);
	push_word(0x359);
	push_word(0x440);
	push_word(0x37b);
	push_word(0x483);
	push_word(0x483);
	push_word(0x483);
	push_word(0x277);
	push_word(0x1be);
	push_word(0x1be);
	cmd_0c(0x2, 0xd);
	push_base_offset(0x144);
	push_byte(0x64);
	push_word(0x16c);
	push_word(0x1fb);
	push_word(0x21b);
	push_word(0x12b);
	push_word(0xc8);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1f);
	push_byte(0x67);
	push_word(0x13e);
	cmd_0c(0x2, 0xd);
	push_base_offset(0x104);
	push_byte(0x8);
	push_word(0x23e);
	push_word(0x23e);
	push_word(0xe5);
	push_word(0x32b);
	push_word(0x1fb);
	push_word(0x2e2);
	push_word(0x3d5);
	push_word(0x100);
	cmd_0c(0x2, 0x9);
	push_base_offset(0xc4);
	push_word(0x286);
	push_word(0x8c);
	push_word(0x12d);
	push_word(0x114);
	push_word(0xfd);
	push_word(0x1d0);
	push_word(0x1c8);
	push_byte(0x65);
	push_word(0x207);
	cmd_0c(0x2, 0x9);
	push_base_offset(0x84);
	push_word(0xa1);
	push_word(0x2d7);
	push_word(0x2d7);
	push_word(0x17e);
	push_word(0x3c4);
	push_word(0x294);
	push_word(0x37b);
	push_word(0x46e);
	push_word(0x199);
	cmd_0c(0x2, 0x9);
	push_base_offset(0x44);
	push_word(0x27f);
	push_word(0x85);
	push_word(0x126);
	push_word(0x10d);
	push_word(0xf6);
	push_word(0x1c9);
	push_word(0x1c1);
	push_byte(0x5e);
	push_word(0x200);
	cmd_0c(0x2, 0x9);
	push_base_offset(0x224);
	push_word(0x1700);
	push_word(0xd4);
	add();
	move(0x2);
	push_base_offset(0x220);
	push_word(0x1700);
	push_byte(0x38);
	add();
	move(0x2);
	push_base_offset(0x214);
	push_byte(0x0);
	move(0x2);

L02c5a:
	push_base_offset(0x208);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xc8);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0xa);
	mul();
	add();
	push_base_offset(0x214);
	load(0x2);
	add();
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x0);
	add();
	push_base_offset(0x208);
	load(0x2);
	push_byte(0x0);
	neq();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x4);
	add();
	push_base_offset(0x2fc);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x8);
	add();
	push_base_offset(0x350);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0xc);
	add();
	push_base_offset(0x350);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x224);
	load(0x2);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x224);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x30);
	add();
	push_base_offset(0x224);
	load(0x2);
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x34);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x238);
	load(0x2);
	push_base_offset(0x34c);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x2fc);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x2fc);
	push_byte(0x34);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2fc);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x224);
	push_base_offset(0x224);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x8);
	add();
	push_base_offset(0x184);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0xc);
	add();
	push_base_offset(0x144);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_byte(0x7d);
	add();
	push_base_offset(0x208);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x234);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x2fc);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x2fc);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x4);
	add();
	push_base_offset(0x208);
	load(0x2);
	push_byte(0x0);
	neq();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x8);
	add();
	push_base_offset(0x104);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0xc);
	add();
	push_base_offset(0xc4);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x220);
	load(0x2);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x230);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x2fc);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x220);
	push_base_offset(0x220);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_word(0xc8);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0xa);
	mul();
	add();
	push_base_offset(0x214);
	load(0x2);
	add();
	push_offset(L0443d);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x2fc);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x4);
	add();
	push_base_offset(0x208);
	load(0x2);
	push_byte(0x0);
	neq();
	push_base_offset(0x4);
	load(0x2);
	bool_and();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x8);
	add();
	push_base_offset(0x84);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0xc);
	add();
	push_base_offset(0x44);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_word(0xcf);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x22c);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x2fc);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x214);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	lt();
	push_offset(L02c5a);
	jc(0x0);
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x3);
	eq();
	bool_or();
	push_word(0x1700);
	push_word(0xa1);
	add();
	push_word(0x1700);
	push_word(0x9d);
	add();
	ternary();
	push_base_offset(0x224);
	move_arg(0x2);
	push_base_offset(0x2fc);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x8);
	add();
	push_byte(0x7);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0xc);
	add();
	push_byte(0x12);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x224);
	load(0x2);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x224);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x30);
	add();
	push_base_offset(0x224);
	load(0x2);
	move(0x2);
	push_base_offset(0x2fc);
	push_byte(0x34);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x238);
	load(0x2);
	push_byte(0xa);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x1);
	push_word(0xc4);
	mul();
	sub();
	push_base_offset(0x2fc);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x2fc);
	push_byte(0x34);
	add();
	push_byte(0x1);
	move(0x2);
	load_base();
	push_word(0x360);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x35c);
	add();
	store_base();
	push_base_offset(0x348);
	move_arg(0x2);
	push_base_offset(0x34c);
	move_arg(0x2);
	push_base_offset(0x350);
	move_arg(0x2);
	push_base_offset(0x354);
	move_arg(0x2);
	push_base_offset(0x358);
	move_arg(0x2);
	push_base_offset(0x35c);
	move_arg(0x2);
	push_base_offset(0x344);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x344);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x344);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x20);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x24);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x344);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x338);
	push_byte(0x24);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x344);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x338);
	push_byte(0x3c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x34);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_word(0x9c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_word(0xa0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_word(0xa4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_word(0xa8);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x344);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x2f8);
	push_word(0xa8);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x344);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x2f8);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x234);
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x8);
	add();
	push_base_offset(0x234);
	load(0x2);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x14);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x338);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x338);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x230);
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x0);
	add();
	push_byte(0x1);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x8);
	add();
	push_base_offset(0x230);
	load(0x2);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x338);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x22c);
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x0);
	add();
	push_byte(0x1);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x8);
	add();
	push_base_offset(0x22c);
	load(0x2);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x338);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x228);
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x0);
	add();
	push_byte(0x1);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x8);
	add();
	push_base_offset(0x228);
	load(0x2);
	move(0x2);
	push_base_offset(0x338);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x338);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x338);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x204);
	push_word(0x2b2);
	push_word(0x247);
	push_word(0x1a9);
	push_word(0xfe);
	push_byte(0x72);
	push_byte(0x0);
	push_word(0x239);
	push_word(0x3ed);
	push_word(0x191);
	push_word(0x191);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x1c4);
	push_word(0x12c);
	push_word(0xf5);
	push_word(0x110);
	push_word(0xd2);
	push_word(0xa6);
	push_word(0x115);
	push_word(0xd2);
	push_word(0x124);
	push_word(0xc6);
	push_word(0xc6);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x184);
	push_word(0x42f);
	push_word(0x32d);
	push_word(0x269);
	push_word(0x1f9);
	push_byte(0x0);
	push_word(0x133);
	push_word(0x396);
	push_word(0x32e);
	push_word(0x2c0);
	push_word(0x2c0);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x144);
	push_word(0x80);
	push_word(0x9b);
	push_word(0x1c4);
	push_byte(0x0);
	push_byte(0x7e);
	push_word(0x184);
	push_byte(0x2);
	push_word(0x1ee);
	push_byte(0xa);
	push_byte(0xa);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x104);
	push_word(0x390);
	push_word(0x2a8);
	push_word(0x201);
	push_word(0x16d);
	push_byte(0x3b);
	push_word(0x9f);
	push_word(0x292);
	push_word(0x33c);
	push_word(0x20a);
	push_word(0x20a);
	cmd_0c(0x2, 0xa);
	push_base_offset(0xc4);
	push_word(0xfa);
	push_word(0xe6);
	push_word(0x161);
	push_byte(0x7b);
	push_word(0xe6);
	push_word(0x1b1);
	push_word(0x80);
	push_word(0x17c);
	push_byte(0x6f);
	push_byte(0x6f);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x84);
	push_word(0x34a);
	push_word(0x260);
	push_word(0x1d3);
	push_word(0x13f);
	push_word(0xbf);
	push_byte(0x6d);
	push_word(0x259);
	push_word(0x432);
	push_word(0x1cf);
	push_word(0x1cf);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x44);
	push_word(0x131);
	push_word(0xf7);
	push_word(0x10a);
	push_word(0xb2);
	push_word(0x89);
	push_word(0x161);
	push_word(0xaa);
	push_word(0x122);
	push_word(0x93);
	push_word(0x93);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x21c);
	push_word(0x1700);
	push_word(0xfa);
	add();
	move(0x2);
	push_base_offset(0x218);
	push_word(0x1700);
	push_byte(0x71);
	add();
	move(0x2);
	push_base_offset(0x214);
	push_byte(0x0);
	move(0x2);

L0350a:
	push_base_offset(0x208);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xc9);
	push_base_offset(0x354);
	load(0x2);
	push_byte(0x1e);
	mul();
	add();
	push_base_offset(0x214);
	load(0x2);
	add();
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x0);
	add();
	push_base_offset(0x208);
	load(0x2);
	push_byte(0x0);
	neq();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x4);
	add();
	push_base_offset(0x2f8);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x8);
	add();
	push_base_offset(0x34c);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0xc);
	add();
	push_base_offset(0x34c);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x21c);
	load(0x2);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x21c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x30);
	add();
	push_base_offset(0x21c);
	load(0x2);
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x34);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_word(0xc0);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x234);
	load(0x2);
	push_base_offset(0x348);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x2f8);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x2f8);
	push_byte(0x34);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2f8);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x21c);
	push_base_offset(0x21c);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x4);
	add();
	push_base_offset(0x208);
	load(0x2);
	push_byte(0x0);
	neq();
	push_base_offset(0x208);
	load(0x2);
	push_byte(0x9);
	neq();
	bool_and();
	push_base_offset(0x350);
	load(0x2);
	bool_and();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x8);
	add();
	push_base_offset(0x184);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0xc);
	add();
	push_base_offset(0x144);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1700);
	push_byte(0x7d);
	add();
	push_base_offset(0x208);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x230);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x2f8);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x2);
	eq();
	push_base_offset(0x354);
	load(0x2);
	push_byte(0x3);
	eq();
	bool_and();
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x1);
	eq();
	bool_and();
	push_word(0x1700);
	push_byte(0x7c);
	add();
	push_base_offset(0x218);
	load(0x2);
	ternary();
	push_base_offset(0x220);
	move_arg(0x2);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x4);
	eq();
	push_base_offset(0x354);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x1);
	eq();
	bool_and();
	push_word(0x1700);
	push_byte(0x7b);
	add();
	push_base_offset(0x220);
	load(0x2);
	ternary();
	push_base_offset(0x220);
	move_arg(0x2);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x6);
	eq();
	push_base_offset(0x354);
	load(0x2);
	push_byte(0x1);
	eq();
	bool_and();
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x1);
	eq();
	bool_and();
	push_word(0x1700);
	push_byte(0x7b);
	add();
	push_base_offset(0x220);
	load(0x2);
	ternary();
	push_base_offset(0x220);
	move_arg(0x2);
	push_base_offset(0x2f8);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x4);
	add();
	push_base_offset(0x208);
	load(0x2);
	push_byte(0x0);
	neq();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x8);
	add();
	push_base_offset(0x104);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0xc);
	add();
	push_base_offset(0xc4);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x220);
	load(0x2);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x22c);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x2f8);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x218);
	push_base_offset(0x218);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x8);
	add();
	push_base_offset(0x84);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0xc);
	add();
	push_base_offset(0x44);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x208);
	load(0x2);
	push_byte(0x9);
	neq();
	push_word(0x1700);
	push_word(0x91);
	add();
	push_word(0x1700);
	push_word(0x91);
	add();
	push_byte(0x2);
	add();
	ternary();
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x18);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x1c);
	add();
	push_word(0x1f4);
	move(0x2);
	push_base_offset(0x228);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x2f8);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x2f8);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x214);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_byte(0x1);
	push_byte(0x1);
	sub();
	lt();
	push_offset(L0350a);
	jc(0x0);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x2);
	eq();
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x3);
	eq();
	bool_or();
	push_word(0x1700);
	push_word(0xa1);
	add();
	push_word(0x1700);
	push_word(0x9d);
	add();
	ternary();
	push_base_offset(0x21c);
	move_arg(0x2);
	push_base_offset(0x2f8);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x8);
	add();
	push_byte(0x8);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0xc);
	add();
	push_word(0x274);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x21c);
	load(0x2);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x21c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x30);
	add();
	push_base_offset(0x21c);
	load(0x2);
	move(0x2);
	push_base_offset(0x2f8);
	push_byte(0x34);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x234);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x1);
	push_word(0xc4);
	mul();
	sub();
	push_base_offset(0x2f8);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x2f8);
	push_byte(0x34);
	add();
	push_byte(0x1);
	move(0x2);
	load_base();
	push_word(0x35c);
	sub();
	store_base();
	ret();

L03a64:
	load_base();
	push_word(0x184);
	add();
	store_base();
	push_base_offset(0x180);
	move_arg(0x2);
	push_base_offset(0x184);
	move_arg(0x2);
	push_base_offset(0x118);
	push_byte(0x0);
	push_word(0x21a);
	push_word(0x256);
	push_word(0xeb);
	push_word(0x350);
	push_word(0x20a);
	push_word(0x295);
	push_word(0x2fd);
	push_word(0xe4);
	cmd_0c(0x2, 0x9);
	push_base_offset(0xd8);
	push_word(0x21c);
	push_byte(0x17);
	push_word(0xf0);
	push_word(0x89);
	push_byte(0x6f);
	push_word(0x175);
	push_word(0x148);
	push_byte(0x0);
	push_word(0x180);
	cmd_0c(0x2, 0x9);
	push_base_offset(0x98);
	push_byte(0x29);
	push_word(0x25f);
	push_word(0x25f);
	push_word(0x106);
	push_word(0x34c);
	push_word(0x21c);
	push_word(0x303);
	push_word(0x3f6);
	push_word(0x121);
	cmd_0c(0x2, 0x9);
	push_base_offset(0x58);
	push_word(0x221);
	push_byte(0x27);
	push_word(0xc8);
	push_word(0xaf);
	push_word(0x98);
	push_word(0x16b);
	push_word(0x163);
	push_byte(0x0);
	push_word(0x1a2);
	cmd_0c(0x2, 0x9);
	push_base_offset(0x12c);
	push_word(0x1700);
	push_word(0xd4);
	add();
	move(0x2);
	push_base_offset(0x128);
	push_word(0x1700);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x11c);
	push_byte(0x0);
	move(0x2);

L03b0f:
	push_base_offset(0x120);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xc8);
	push_base_offset(0x180);
	load(0x2);
	push_byte(0xa);
	mul();
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x124);
	push_word(0x1700);
	push_byte(0x7d);
	add();
	push_base_offset(0x120);
	load(0x2);
	push_byte(0x2);
	mul();
	add();
	move(0x2);
	push_base_offset(0x17c);
	push_base_offset(0x128);
	load(0x2);
	push_byte(0x3);
	add();
	grp1(0x16);
	push_base_offset(0x14c);
	push_byte(0x0);
	add();
	push_base_offset(0x118);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14c);
	push_byte(0x8);
	add();
	push_base_offset(0x17c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x118);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x14c);
	push_byte(0x4);
	add();
	push_base_offset(0xd8);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14c);
	push_byte(0xc);
	add();
	push_base_offset(0x17c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0xd8);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x164);
	push_base_offset(0x124);
	load(0x2);
	grp1(0x16);
	push_base_offset(0x13c);
	push_byte(0x0);
	add();
	push_base_offset(0x98);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x8);
	add();
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x98);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x4);
	add();
	push_base_offset(0x58);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x58);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0x0);
	add();
	load(0x2);
	lt();
	push_base_offset(0x13c);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0x0);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x13c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0x8);
	add();
	load(0x2);
	lt();
	push_base_offset(0x14c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x13c);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0x4);
	add();
	load(0x2);
	lt();
	push_base_offset(0x13c);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0x4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0xc);
	add();
	load(0x2);
	lt();
	push_base_offset(0x14c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	push_byte(0xc);
	add();
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x18);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x12c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x12c);
	load(0x2);
	push_base_offset(0x98);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_base_offset(0x58);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x98);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_base_offset(0x58);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x2);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x118);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_base_offset(0xd8);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_base_offset(0x128);
	load(0x2);
	push_byte(0x3);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x98);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_base_offset(0x58);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x184);
	load(0x2);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_base_offset(0x18);
	push_byte(0x10);
	memcpy();
	push_base_offset(0x12c);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x128);
	push_base_offset(0x128);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	lt();
	push_offset(L03b0f);
	jc(0x0);
	load_base();
	push_word(0x184);
	sub();
	store_base();
	ret();

L03ee0:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	push_word(0x1700);
	push_word(0xd4);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03ef8:
	push_base_offset(0x8);
	load(0x2);
	grp1(0x12);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	grp1(0x12);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	add();
	grp1(0x12);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	lt();
	push_offset(L03ef8);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x184);
	add();
	store_base();
	push_base_offset(0x180);
	move_arg(0x2);
	push_base_offset(0x184);
	move_arg(0x2);
	push_base_offset(0x118);
	push_word(0x2b2);
	push_word(0x247);
	push_word(0x1a9);
	push_word(0xfe);
	push_byte(0x72);
	push_byte(0x0);
	push_word(0x239);
	push_word(0x3ed);
	push_word(0x191);
	push_word(0x191);
	cmd_0c(0x2, 0xa);
	push_base_offset(0xd8);
	push_word(0x12c);
	push_word(0xf5);
	push_word(0x110);
	push_word(0xd2);
	push_word(0xa6);
	push_word(0x115);
	push_word(0xd2);
	push_word(0x124);
	push_word(0xc6);
	push_word(0xc6);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x98);
	push_word(0x34a);
	push_word(0x260);
	push_word(0x1d3);
	push_word(0x13f);
	push_word(0xbf);
	push_byte(0x6d);
	push_word(0x259);
	push_word(0x432);
	push_word(0x1cf);
	push_word(0x1cf);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x58);
	push_word(0x131);
	push_word(0xf7);
	push_word(0x10a);
	push_word(0xb2);
	push_word(0x89);
	push_word(0x161);
	push_word(0xaa);
	push_word(0x122);
	push_word(0x93);
	push_word(0x93);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x12c);
	push_word(0x1700);
	push_word(0xfa);
	add();
	move(0x2);
	push_base_offset(0x128);
	push_word(0x1700);
	push_byte(0x49);
	add();
	move(0x2);
	push_base_offset(0x11c);
	push_byte(0x0);
	move(0x2);

L03ffe:
	push_base_offset(0x120);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0xc9);
	push_base_offset(0x180);
	load(0x2);
	push_byte(0x1e);
	mul();
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x120);
	load(0x2);
	push_byte(0x9);
	neq();
	push_word(0x1700);
	push_word(0x91);
	add();
	push_word(0x1700);
	push_word(0x91);
	add();
	push_byte(0x2);
	add();
	ternary();
	push_base_offset(0x124);
	move_arg(0x2);
	push_base_offset(0x17c);
	push_base_offset(0x128);
	load(0x2);
	push_byte(0x3);
	add();
	grp1(0x16);
	push_base_offset(0x14c);
	push_byte(0x0);
	add();
	push_base_offset(0x118);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14c);
	push_byte(0x8);
	add();
	push_base_offset(0x17c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x118);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x14c);
	push_byte(0x4);
	add();
	push_base_offset(0xd8);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14c);
	push_byte(0xc);
	add();
	push_base_offset(0x17c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0xd8);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x164);
	push_base_offset(0x124);
	load(0x2);
	grp1(0x16);
	push_base_offset(0x13c);
	push_byte(0x0);
	add();
	push_base_offset(0x98);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x8);
	add();
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x98);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x4);
	add();
	push_base_offset(0x58);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x58);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0x0);
	add();
	load(0x2);
	lt();
	push_base_offset(0x13c);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0x0);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x13c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0x8);
	add();
	load(0x2);
	lt();
	push_base_offset(0x14c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x13c);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0x4);
	add();
	load(0x2);
	lt();
	push_base_offset(0x13c);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0x4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x14c);
	push_byte(0xc);
	add();
	load(0x2);
	lt();
	push_base_offset(0x14c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	push_byte(0xc);
	add();
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x18);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x12c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x12c);
	load(0x2);
	push_base_offset(0x98);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_base_offset(0x58);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x98);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_base_offset(0x58);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x2);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x118);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_base_offset(0xd8);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_base_offset(0x128);
	load(0x2);
	push_byte(0x3);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x98);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_base_offset(0x58);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x184);
	load(0x2);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_base_offset(0x18);
	push_byte(0x10);
	memcpy();
	push_base_offset(0x12c);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x128);
	push_base_offset(0x128);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x1);
	push_byte(0x1);
	sub();
	lt();
	push_offset(L03ffe);
	jc(0x0);
	load_base();
	push_word(0x184);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	push_word(0x1700);
	push_word(0xfa);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L043f2:
	push_base_offset(0x8);
	load(0x2);
	grp1(0x12);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	grp1(0x12);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	add();
	grp1(0x12);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x1);
	sub();
	lt();
	push_offset(L043f2);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L0443d:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x85cc);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x3);
	sar();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	load(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x7);
	and();
	sar();
	push_byte(0x1);
	and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x448);
	add();
	store_base();
	push_base_offset(0x440);
	move_arg(0x2);
	push_base_offset(0x444);
	move_arg(0x2);
	push_base_offset(0x448);
	move_arg(0x2);
	push_base_offset(0x43c);
	push_byte(0x0);
	move(0x2);
	push_string("sysprg.arc");
	push_string("userdata._bp");
	sys1(0x40);
	push_base_offset(0x438);
	move_arg(0x2);
	push_base_offset(0x424);
	push_word(0x400);
	memclr();
	push_base_offset(0x444);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L044ed);
	jc(0x0);
	push_word(0xb40);
	load(0x2);
	push_offset(L044da);
	jc(0x0);
	push_base_offset(0x24);
	push_word(0xeba);
	grp1(0x16);
	push_offset(L044da);
	jc(0x1);
	push_base_offset(0x424);
	push_dword(0x11156c);
	cmd_6a();
	push_offset(L044f6);
	jmp();

L044da:
	push_base_offset(0x424);
	push_dword(0x9fab8);
	push_dword(0x230ac);
	add();
	cmd_6a();
	push_offset(L044f6);
	jmp();

L044ed:
	push_base_offset(0x424);
	push_base_offset(0x444);
	load(0x2);
	cmd_6a();

L044f6:
	push_base_offset(0x424);
	cmd_68();
	push_base_offset(0x434);
	move_arg(0x2);
	push_base_offset(0x434);
	load(0x2);
	push_byte(0x50);
	lt();
	push_offset(L0456b);
	jc(0x0);
	push_base_offset(0x430);
	push_byte(0x0);
	move(0x2);

L04513:
	push_base_offset(0x424);
	push_base_offset(0x430);
	load(0x2);
	add();
	cmd_6c();
	push_base_offset(0x428);
	move_arg(0x2);
	push_base_offset(0x42c);
	move_arg(0x2);
	push_base_offset(0x434);
	move_arg(0x2);
	push_base_offset(0x42c);
	load(0x2);
	push_byte(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x434);
	move_arg(0x2);
	push_base_offset(0x430);
	push_base_offset(0x430);
	load(0x2);
	push_base_offset(0x434);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x430);
	load(0x2);
	push_byte(0x50);
	lt();
	push_offset(L04513);
	jc(0x0);
	push_base_offset(0x424);
	push_base_offset(0x430);
	load(0x2);
	add();
	push_base_offset(0x434);
	load(0x2);
	sub();
	push_byte(0x0);
	move(0x0);

L0456b:
	push_base_offset(0x444);
	push_base_offset(0x424);
	move(0x2);
	push_base_offset(0x440);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0458d);
	jc(0x0);
	push_base_offset(0x440);
	push_dword(0x9fab8);
	push_byte(0x60);
	add();
	move(0x2);

L0458d:
	push_byte(0x14);
	push_byte(0x14);
	shl();
	sys1(0x20);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x438);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x448);
	load(0x2);
	push_base_offset(0x444);
	load(0x2);
	push_base_offset(0x440);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x438);
	load(0x2);
	call();
	push_base_offset(0x43c);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	sys1(0x21);
	sys1(0x41);
	push_base_offset(0x43c);
	load(0x2);
	load_base();
	push_word(0x448);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x62c);
	add();
	store_base();
	push_base_offset(0x628);
	move_arg(0x2);
	push_base_offset(0x62c);
	move_arg(0x2);
	push_string("sysprg.arc");
	push_string("userdata._bp");
	sys1(0x40);
	push_base_offset(0x620);
	move_arg(0x2);
	push_base_offset(0x61c);
	push_base_offset(0x62c);
	load(0x2);
	push_byte(0x6);
	push_base_offset(0x620);
	load(0x2);
	call();
	push_base_offset(0x310);
	push_base_offset(0x628);
	load(0x2);
	push_byte(0x6);
	push_base_offset(0x620);
	load(0x2);
	call();
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x35);
	push_base_offset(0x624);
	move_arg(0x2);
	push_base_offset(0x624);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L04680);
	jc(0x1);
	push_base_offset(0x624);
	load(0x2);
	sys1(0x20);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x30);
	push_base_offset(0x624);
	move_arg(0x2);
	push_base_offset(0x61c);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x624);
	load(0x2);
	sys1(0x32);
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x33);
	push_base_offset(0x4);
	load(0x2);
	sys1(0x21);

L04680:
	sys1(0x41);
	load_base();
	push_word(0x62c);
	sub();
	store_base();
	ret();

L04689:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L046ad);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_offset(L046c9);
	jmp();

L046ad:
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L046c9);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);

L046c9:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L046d9:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x7);
	add();
	eq();
	push_offset(L04a2f);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x6);
	add();
	eq();
	push_offset(L04a2f);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x16);
	add();
	eq();
	push_offset(L04a2f);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L04a2f);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x8);
	add();
	eq();
	push_offset(L04888);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	add();
	eq();
	push_offset(L047fb);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x3);
	add();
	eq();
	push_offset(L04859);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xc);
	add();
	eq();
	push_offset(L0482a);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xf);
	add();
	eq();
	push_offset(L048b7);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x12);
	add();
	eq();
	push_offset(L048e6);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x17);
	add();
	eq();
	push_offset(L04915);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1b);
	add();
	eq();
	push_offset(L04944);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1e);
	add();
	eq();
	push_offset(L04973);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x21);
	add();
	eq();
	push_offset(L049a2);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x24);
	add();
	eq();
	push_offset(L049d1);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x27);
	add();
	eq();
	push_offset(L04a00);
	jc(0x0);
	push_offset(L04a9f);
	jmp();
	push_offset(L04a2f);
	jmp();

L047fb:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x51c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x51c);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L0482a:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	load(0x2);
	add();
	move(0x2);
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x520);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L04859:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x524);
	load(0x2);
	add();
	move(0x2);
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x524);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L04888:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x528);
	load(0x2);
	add();
	move(0x2);
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x528);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L048b7:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x52c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x52c);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L048e6:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x530);
	load(0x2);
	add();
	move(0x2);
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x530);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L04915:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x534);
	load(0x2);
	add();
	move(0x2);
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x534);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L04944:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x538);
	load(0x2);
	add();
	move(0x2);
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x538);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L04973:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x53c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x53c);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L049a2:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x540);
	load(0x2);
	add();
	move(0x2);
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x540);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L049d1:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x544);
	load(0x2);
	add();
	move(0x2);
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x544);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L04a00:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x548);
	load(0x2);
	add();
	move(0x2);
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x548);
	move_arg(0x2);
	push_offset(L04a2f);
	jmp();

L04a2f:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L04a6a);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	geq();
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L04a6a);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	snd1(0x26);

L04a6a:
	push_base_offset(0x8);
	load(0x2);
	push_word(0x80);
	push_byte(0x40);
	snd1(0x24);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x49c);
	load(0x2);
	ternary();
	push_word(0x49c);
	move_arg(0x2);

L04a9f:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	sys1(0x4);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1f4);
	add();
	move(0x2);

L04ac4:
	sys1(0x4);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	geq();
	push_offset(L04aeb);
	jc(0x0);
	push_word(0x450);
	load(0x2);
	push_offset(L04aeb);
	jc(0x0);
	sys1(0x5f);
	push_offset(L04ac4);
	jmp();

L04aeb:
	sys1(0x5f);
	push_word(0x450);
	load(0x2);
	push_offset(L04aeb);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L04afd:
	load_base();
	push_word(0xd0);
	add();
	store_base();
	push_base_offset(0xd0);
	move_arg(0x2);
	push_base_offset(0xcc);
	push_word(0x91c);
	load(0x2);
	move(0x2);
	push_word(0x91c);
	push_base_offset(0xd0);
	load(0x2);
	move(0x2);
	push_base_offset(0x40);
	push_byte(0x20);
	push_word(0xb6);
	add();
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc4);
	push_byte(0x0);
	move(0x2);

L04b58:
	push_base_offset(0x3c);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0xd);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x11);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x34);
	push_base_offset(0x34);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x26);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x30);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x28);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x21);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x28);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x22);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0xc4);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0xc);
	lt();
	push_offset(L04b58);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04c64);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L04cb2);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L04d22);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L04d6c);
	jc(0x0);
	push_offset(L04f0c);
	jmp();

L04c64:
	push_base_offset(0xc0);
	push_byte(0xe);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0xf);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L04db6);
	jmp();

L04cb2:
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1);
	ternary();
	push_base_offset(0xc8);
	move_arg(0x2);
	push_base_offset(0x80);
	push_base_offset(0xc8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x3);
	push_base_offset(0xd0);
	load(0x2);
	push_offset(L04f18);
	call();
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L04db6);
	jmp();

L04d22:
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L04db6);
	jmp();

L04d6c:
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L04db6);
	jmp();

L04db6:
	push_base_offset(0x24);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x200);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x4);
	push_base_offset(0x24);
	move(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_offset(L04df1);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x26);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L04df1:
	push_base_offset(0x2c);
	load(0x2);
	push_offset(L04e14);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x21);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L04e14:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_word(0x1000);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x4);
	push_base_offset(0x24);
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_offset(L04e50);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L04e50:
	push_base_offset(0x28);
	load(0x2);
	push_offset(L04e73);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x22);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L04e73:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_word(0x2000);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x4);
	push_base_offset(0x24);
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x0);
	neq();
	push_offset(L04ec7);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x0);
	push_word(0xff);
	and();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L04ec7:
	push_base_offset(0x38);
	load(0x2);
	push_offset(L04eea);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x11);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L04eea:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_dword(-0x80000000);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x24);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x1);
	push_base_offset(0x24);
	sys1(0x62);

L04f0c:
	push_base_offset(0xcc);
	load(0x2);
	load_base();
	push_word(0xd0);
	sub();
	store_base();
	ret();

L04f18:
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x24);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x24);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0xe);
	move(0x2);
	push_base_offset(0x24);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0xf);
	move(0x2);
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x38);
	load(0x2);
	move(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);

L04f6b:
	push_byte(0x20);
	push_word(0xc6);
	add();
	push_base_offset(0x28);
	load(0x2);
	add();
	load(0x0);
	push_base_offset(0x34);
	load(0x2);
	neq();
	push_offset(L04fb6);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x24);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L04fb6:
	push_base_offset(0x28);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L04f6b);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2c);
	load(0x2);
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();

L04fe4:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0xc);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L05043);
	jc(0x1);
	push_base_offset(0x10);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	cmd_0c(0x2, 0x4);
	push_dword(0x42768);
	push_byte(0xc);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x10);
	sys1(0x4a);

L05043:
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L05049:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L05064:
	push_base_offset(0x4);
	push_word(0x930);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L050c1);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_offset(L050db);
	jmp();

L050c1:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L05064);
	jc(0x0);

L050db:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L050e1:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L050f2:
	push_base_offset(0x4);
	push_word(0x930);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L05141);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L04fe4);
	call();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	memclr();

L05141:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L050f2);
	jc(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L05161:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9b8);
	load(0x2);
	push_offset(L051a0);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x2);
	push_dword(-0x3);
	push_offset(L05049);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L050e1);
	call();
	push_word(0x9b8);
	push_byte(0x1);
	move(0x2);

L051a0:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L051a6:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9bc);
	load(0x2);
	push_offset(L051e5);
	jc(0x0);
	push_byte(0x1);
	push_byte(0x3);
	push_dword(-0x3);
	push_offset(L05049);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L050e1);
	call();
	push_word(0x9bc);
	push_byte(0x1);
	move(0x2);

L051e5:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L051eb:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9b8);
	load(0x2);
	push_offset(L0522d);
	jc(0x1);
	push_dword(-0x1);
	push_byte(0x2);
	push_dword(-0x3);
	push_offset(L05049);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L050e1);
	call();
	push_word(0x9b8);
	push_byte(0x0);
	move(0x2);

L0522d:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L05233:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9bc);
	load(0x2);
	push_offset(L05275);
	jc(0x1);
	push_dword(-0x1);
	push_byte(0x3);
	push_dword(-0x3);
	push_offset(L05049);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L050e1);
	call();
	push_word(0x9bc);
	push_byte(0x0);
	move(0x2);

L05275:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L05297);
	jc(0x1);
	push_offset(L05161);
	call();
	push_offset(L0529b);
	jmp();

L05297:
	push_offset(L051eb);
	call();

L0529b:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L052bd);
	jc(0x1);
	push_offset(L051a6);
	call();
	push_offset(L052c1);
	jmp();

L052bd:
	push_offset(L05233);
	call();

L052c1:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L052c7:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L052d8:
	push_base_offset(0x4);
	push_word(0x92c);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L05320);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L05320);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	grp2(0x31);

L05320:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L052d8);
	jc(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L05340:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0536d);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	grp1(0x51);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4c);
	memclr();

L0536d:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L05340);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x14);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	grp1(0x50);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp1(0x38);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0545c);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x33);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);

L0545c:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0549b);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x36);

L0549b:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L054d0);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x34);

L054d0:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L054d6:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L05505);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp2(0x31);

L05505:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L05779);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L05916);
	call();
	push_offset(L056f5);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L05677);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L05677);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L055f8);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	div();
	move(0x2);
	push_offset(L05646);
	jmp();

L055f8:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L05646);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	sub();
	push_base_offset(0x14);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	div();
	move(0x2);

L05646:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	grp1(0x57);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	grp1(0x38);
	push_byte(0x0);
	grp1(0x0);
	push_offset(L056f5);
	jmp();

L05677:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x20);
	add();
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1);
	push_word(0x100);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	grp1(0x56);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	grp1(0x38);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0x54);

L056f5:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x18);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x10);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);

L05779:
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L05910);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L05910);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L05916);
	call();
	push_offset(L057f1);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x14);
	memclr();
	push_offset(L05910);
	jmp();

L057f1:
	push_base_offset(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L058b9);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L05868);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	sub();
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	div();
	move(0x2);
	push_offset(L058b5);
	jmp();

L05868:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0587e);
	jc(0x1);
	push_offset(L058b9);
	jmp();

L0587e:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L058b5);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	div();
	move(0x2);

L058b5:
	push_offset(L058dd);
	jmp();

L058b9:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x20);
	add();
	move_arg(0x2);

L058dd:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x10);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L05910:
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L05916:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0598c);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L05945:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	leq();
	push_offset(L0598c);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0597b);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_offset(L0598c);
	jmp();

L0597b:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_offset(L05945);
	jmp();

L0598c:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L05a0b);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L05a0b);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L059f7);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_offset(L05a0b);
	jmp();

L059f7:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L05916);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L05a0b:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L05a16:
	load_base();
	push_byte(0x0);
	add();
	store_base();

L05a1b:
	push_word(0xaac);
	load(0x2);
	push_offset(L05a2b);
	jc(0x0);
	sys1(0x5f);
	push_offset(L05a1b);
	jmp();

L05a2b:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
