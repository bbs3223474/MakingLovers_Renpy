	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	push_offset(L00031);
	push_offset(L00193);
	push_offset(L001b7);
	push_offset(L00369);
	cmd_0c(0x2, 0x4);
	push_base_offset(0x10);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L00031:
	load_base();
	push_byte(0x28);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0x24);
	load(0x2);
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0x20);
	load(0x2);
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x14);
	add();
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L000d2:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	geq();
	push_offset(L0017e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0016d);
	jc(0x1);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L0016d:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L000d2);
	jmp();

L0017e:
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	load_base();
	push_byte(0x28);
	sub();
	store_base();
	ret();

L00193:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L001b7:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0029e);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L00363);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L001ed:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	geq();
	push_offset(L0027c);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x57);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x38);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L001ed);
	jmp();

L0027c:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	move(0x2);
	push_offset(L00355);
	jmp();

L0029e:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L00363);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L002b4:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	geq();
	push_offset(L00337);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x57);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x38);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L002b4);
	jmp();

L00337:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	move(0x2);

L00355:
	push_base_offset(0x8);
	load(0x2);
	push_offset(L00363);
	jc(0x1);
	push_byte(0x0);
	grp1(0x0);

L00363:
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L00369:
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x20);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);
	sys1(0x8);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L0039c:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	geq();
	push_offset(L00626);
	jc(0x0);
	push_base_offset(0x24);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00615);
	jc(0x1);
	sys1(0xf);
	push_offset(L00516);
	jc(0x1);
	usr1(0x6);
	push_offset(L00516);
	jc(0x1);
	push_word(0x450);
	load(0x2);
	push_offset(L00516);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	geq();
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	leq();
	bool_and();
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	geq();
	bool_and();
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	leq();
	bool_and();
	push_offset(L00516);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L00615);
	jc(0x0);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L00444:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	geq();
	push_offset(L004f4);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x57);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x38);
	push_base_offset(0x20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00444);
	jmp();

L004f4:
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	move(0x2);
	push_offset(L00615);
	jmp();

L00516:
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L00615);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L0052c:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	geq();
	push_offset(L005f7);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00548:
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x20);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	eq();
	push_offset(L005e6);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	lt();
	push_offset(L00548);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x57);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x38);

L005e6:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L0052c);
	jmp();

L005f7:
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	move(0x2);

L00615:
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L0039c);
	jmp();

L00626:
	push_base_offset(0x18);
	load(0x2);
	push_offset(L00634);
	jc(0x1);
	push_byte(0x0);
	grp1(0x0);

L00634:
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x10c);
	add();
	store_base();
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x10c);
	move_arg(0x2);
	sys1(0x4);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	push_base_offset(0x10c);
	load(0x2);
	push_base_offset(0x104);
	push_string("【%s】 Line [ %d ] : Time [ %d ]");
	cmd_6f();
	push_base_offset(0x104);
	sys1(0x66);
	load_base();
	push_word(0x10c);
	sub();
	store_base();
	ret();
