	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x42af8);
	push_word(0x140);
	push_byte(0x2);
	shl();
	add();
	push_offset(L0208a);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x141);
	push_byte(0x2);
	shl();
	add();
	push_offset(L023b6);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x142);
	push_byte(0x2);
	shl();
	add();
	push_offset(L0259f);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x143);
	push_byte(0x2);
	shl();
	add();
	push_offset(L026ee);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x144);
	push_byte(0x2);
	shl();
	add();
	push_offset(L02779);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x145);
	push_byte(0x2);
	shl();
	add();
	push_offset(L027a5);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x146);
	push_byte(0x2);
	shl();
	add();
	push_offset(L02b77);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x147);
	push_byte(0x2);
	shl();
	add();
	push_offset(L02bae);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x148);
	push_byte(0x2);
	shl();
	add();
	push_offset(L02bf5);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x149);
	push_byte(0x2);
	shl();
	add();
	push_offset(L02c11);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x14a);
	push_byte(0x2);
	shl();
	add();
	push_offset(L02c56);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x14c);
	push_byte(0x2);
	shl();
	add();
	push_offset(L02da9);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x14d);
	push_byte(0x2);
	shl();
	add();
	push_offset(L02f05);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x14e);
	push_byte(0x2);
	shl();
	add();
	push_offset(L03117);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x14f);
	push_byte(0x2);
	shl();
	add();
	push_offset(L031bd);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x150);
	push_byte(0x2);
	shl();
	add();
	push_offset(L0368d);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x151);
	push_byte(0x2);
	shl();
	add();
	push_offset(L03a91);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x152);
	push_byte(0x2);
	shl();
	add();
	push_offset(L036a1);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x153);
	push_byte(0x2);
	shl();
	add();
	push_offset(L03aa5);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x157);
	push_byte(0x2);
	shl();
	add();
	push_offset(L03c7c);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x158);
	push_byte(0x2);
	shl();
	add();
	push_offset(L04423);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x159);
	push_byte(0x2);
	shl();
	add();
	push_offset(L04804);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x15c);
	push_byte(0x2);
	shl();
	add();
	push_offset(L04882);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x15d);
	push_byte(0x2);
	shl();
	add();
	push_offset(L048b5);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x15e);
	push_byte(0x2);
	shl();
	add();
	push_offset(L04a45);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x15f);
	push_byte(0x2);
	shl();
	add();
	push_offset(L04aee);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x1f0);
	push_byte(0x2);
	shl();
	add();
	push_offset(L04b7d);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x200);
	push_byte(0x2);
	shl();
	add();
	push_offset(L04d30);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x204);
	push_byte(0x2);
	shl();
	add();
	push_offset(L04d9c);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x205);
	push_byte(0x2);
	shl();
	add();
	push_offset(L05101);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x208);
	push_byte(0x2);
	shl();
	add();
	push_offset(L051fc);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x209);
	push_byte(0x2);
	shl();
	add();
	push_offset(L05260);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x20a);
	push_byte(0x2);
	shl();
	add();
	push_offset(L05323);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x20e);
	push_byte(0x2);
	shl();
	add();
	push_offset(L053e6);
	move(0x2);
	push_dword(0x42af8);
	push_word(0x20f);
	push_byte(0x2);
	shl();
	add();
	push_offset(L05813);
	move(0x2);
	push_dword(0x44048);
	push_offset(L002a4);
	move(0x2);
	push_dword(0x4404c);
	push_offset(L003e5);
	move(0x2);
	push_dword(0x44050);
	push_offset(L005f1);
	move(0x2);
	push_dword(0x44054);
	push_offset(L0331d);
	move(0x2);
	push_dword(0x44058);
	push_offset(L036c4);
	move(0x2);
	push_dword(0x4405c);
	push_offset(L03ac8);
	move(0x2);
	push_dword(0x44060);
	push_offset(L03b37);
	move(0x2);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L002a4:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L002ba:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L002fd);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x42a94);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);

L002fd:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L002ba);
	jc(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0031d:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L003c8);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L003c8);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L0034d:
	push_dword(0x9fab8);
	push_dword(0x235d8);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x44);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L003c8);
	jc(0x1);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x235d8);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x44);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x235d8);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x44);
	mul();
	add();
	push_byte(0x4);
	add();
	cmd_69();
	push_offset(L003da);
	jc(0x0);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L0034d);
	jc(0x0);

L003c8:
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x235d4);
	add();
	load(0x2);
	move(0x2);

L003da:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L003e5:
	load_base();
	push_word(0x150);
	add();
	store_base();
	push_base_offset(0x150);
	move_arg(0x2);
	push_base_offset(0x40);
	push_word(0x400);
	push_byte(0x69);
	add();
	grp1(0x16);
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x28);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x38);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0049d);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("bitmap._bp");
	sys1(0x40);
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0xba8);
	load(0x2);
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x400);
	push_byte(0x69);
	add();
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	push_byte(0x70);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	load(0x2);
	push_byte(0x10);
	push_base_offset(0x8);
	load(0x2);
	call();
	push_base_offset(0x148);
	move_arg(0x2);
	sys1(0x41);
	push_byte(0x0);
	push_offset(L0049d);
	jc(0x1);
	push_base_offset(0x148);
	load(0x2);
	push_offset(L0049d);
	jc(0x0);
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x144);
	push_string("未定義のキャラクター名 [ %s ] が指定されました");
	cmd_6f();
	push_base_offset(0x144);
	cmd_79();

L0049d:
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00507);
	jc(0x1);
	push_dword(0x42aac);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x28);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x740);
	grp1(0x56);
	push_dword(0x42aac);
	load(0x2);
	push_byte(0x1);
	grp1(0x30);
	push_offset(L00524);
	jmp();

L00507:
	push_base_offset(0x44);
	load(0x2);
	push_offset(L00524);
	jc(0x1);
	push_dword(0x42aac);
	load(0x2);
	push_byte(0x0);
	grp1(0x30);
	push_word(0x400);
	push_byte(0x69);
	add();
	grp1(0x12);

L00524:
	push_byte(0x0);
	grp1(0x0);
	load_base();
	push_word(0x150);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_base_offset(0x4);
	load(0x2);
	cmd_69();
	push_offset(L0059d);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_byte(0x40);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_base_offset(0x4);
	load(0x2);
	cmd_6a();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0031d);
	call();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L003e5);
	call();
	push_word(0xb54);
	push_byte(0x1);
	move(0x2);

L0059d:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_byte(0x40);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_base_offset(0x4);
	load(0x2);
	cmd_6a();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0031d);
	call();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	move_arg(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L005f1:
	load_base();
	push_byte(0x54);
	add();
	store_base();
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x50);
	move_arg(0x2);
	push_base_offset(0x54);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x234b8);
	add();
	load(0x2);
	push_offset(L00b3c);
	jc(0x0);
	push_base_offset(0x44);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x40);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0x70c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L006f9);
	jc(0x0);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00b78);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_byte(0x4);
	add();
	push_dword(0x9fab8);
	push_dword(0x2212c);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L006f9);
	jc(0x1);
	push_base_offset(0x54);
	load(0x2);
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L006f9);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x40);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0x710);
	add();
	push_base_offset(0x40);
	load(0x2);
	add();
	push_base_offset(0x54);
	load(0x2);
	cmd_6a();
	push_base_offset(0x54);
	load(0x2);
	cmd_68();
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);

L006f9:
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00a0f);
	jc(0x1);
	push_base_offset(0x38);
	push_byte(0x0);
	add();
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x4);
	add();
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x8);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x0);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0xc);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x10);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x14);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x18);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	load(0x0);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x1c);
	add();
	push_base_offset(0x40);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0x710);
	add();
	push_base_offset(0x40);
	load(0x2);
	add();
	push_base_offset(0x50);
	load(0x2);
	cmd_6a();
	push_base_offset(0x50);
	load(0x2);
	cmd_68();
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0x710);
	add();
	push_base_offset(0x40);
	load(0x2);
	add();
	push_base_offset(0x50);
	load(0x2);
	grp2(0x95);
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x1);
	sub();
	ternary();
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x38);
	push_byte(0x20);
	add();
	push_base_offset(0x40);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0x710);
	add();
	push_base_offset(0x40);
	load(0x2);
	add();
	cmd_68();
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x24);
	add();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x0);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x234bc);
	add();
	load(0x2);
	bool_and();
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x28);
	add();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x2);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x2c);
	add();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x4);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x30);
	add();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x6);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x34);
	add();
	push_base_offset(0x40);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x234bc);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L009c4);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0x710);
	add();
	push_base_offset(0x40);
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x10);
	add();
	cmd_6a();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x10);
	add();
	cmd_68();
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);

L009c4:
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_base_offset(0x38);
	push_byte(0x38);
	memcpy();
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0x70c);
	add();
	push_base_offset(0x40);
	load(0x2);
	move(0x2);

L00a0f:
	push_base_offset(0x4c);
	load(0x2);
	push_offset(L00b78);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x34);
	memclr();
	push_word(0xb3c);
	load(0x2);
	push_offset(L00a45);
	jc(0x1);
	push_dword(0x111970);
	push_dword(0xeb730);
	push_dword(0x25e3c);
	memcpy();
	push_offset(L00a55);
	jmp();

L00a45:
	push_dword(0x111970);
	push_dword(0xc58f4);
	push_dword(0x25e3c);
	memcpy();

L00a55:
	push_dword(0x111970);
	push_dword(0x22198);
	add();
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0xf10);
	memcpy();
	push_dword(0x111970);
	push_dword(0x24618);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_dword(0x9fab8);
	push_dword(0x24618);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x8);
	memcpy();
	push_word(0x7d0);
	load(0x2);
	push_dword(0x111970);
	sys1(0x9c);
	push_base_offset(0x3c);
	push_byte(0x0);
	move(0x2);

L00abd:
	push_base_offset(0x3c);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	neq();
	push_offset(L00b22);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00b22);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L00b22:
	push_base_offset(0x3c);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L00abd);
	jc(0x0);

L00b3c:
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0xf10);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x230ac);
	add();
	push_word(0x400);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x234ac);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x234b0);
	add();
	push_byte(0x0);
	move(0x2);

L00b78:
	load_base();
	push_byte(0x54);
	sub();
	store_base();
	ret();

L00b7e:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L00b93:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00bfa);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	eq();
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	load(0x0);
	push_byte(0x0);
	eq();
	bool_and();
	push_offset(L00bfa);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	eq();
	push_dword(0x9fab8);
	push_dword(0x234c8);
	add();
	load(0x2);
	bool_and();
	push_offset(L00bfa);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L003e5);
	call();

L00bfa:
	push_byte(0x0);
	push_dword(0x43f64);
	load(0x2);
	call();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L00c0a:
	load_base();
	push_word(0x9fc);
	add();
	store_base();
	push_base_offset(0x9ec);
	move_arg(0x2);
	push_base_offset(0x9f0);
	move_arg(0x2);
	push_base_offset(0x9f4);
	move_arg(0x2);
	push_base_offset(0x9f8);
	move_arg(0x2);
	push_base_offset(0x9fc);
	move_arg(0x2);
	push_base_offset(0x5d4);
	push_base_offset(0x9fc);
	load(0x2);
	move(0x2);
	push_base_offset(0x5d0);
	push_base_offset(0x9f8);
	load(0x2);
	move(0x2);
	push_base_offset(0x9f4);
	push_base_offset(0x9f4);
	load(0x2);
	push_dword(0x48424);
	load(0x2);
	bool_or();
	move(0x2);
	push_base_offset(0x9e0);
	push_byte(0x0);
	move(0x2);

L00c56:
	push_base_offset(0x5cc);
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x9fab8);
	push_dword(0xd0b4);
	add();
	push_base_offset(0x9e0);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x9e0);
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L00c56);
	jc(0x0);
	push_base_offset(0x9f8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00cb9);
	jc(0x1);
	push_base_offset(0x54c);
	push_base_offset(0x9f8);
	load(0x2);
	push_offset(L01d09);
	call();
	push_base_offset(0x9f8);
	push_base_offset(0x54c);
	move(0x2);

L00cb9:
	push_base_offset(0x44c);
	push_base_offset(0x9fc);
	load(0x2);
	push_offset(L01d09);
	call();
	push_base_offset(0x9fc);
	push_base_offset(0x44c);
	move(0x2);
	push_base_offset(0x4c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x38);
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x9e0);
	push_byte(0x0);
	move(0x2);

L00ceb:
	push_base_offset(0x34);
	push_base_offset(0x38);
	load(0x2);
	move(0x2);
	push_base_offset(0x48);
	push_dword(0x9faa8);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x40);
	push_base_offset(0x48);
	load(0x2);
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L00f0e);
	jc(0x1);
	push_base_offset(0x44);
	push_dword(0x9faa8);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x44);
	load(0x2);
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x30);
	push_dword(0x9faa8);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_dword(0x9fab8);
	push_word(0x662c);
	add();
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x30);
	add();
	load(0x2);
	add();
	push_base_offset(0x3c);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x48);
	push_dword(0x9faa8);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x40);
	push_base_offset(0x48);
	load(0x2);
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x3f);
	eq();
	push_offset(L00df8);
	jc(0x1);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x48);
	push_dword(0x9faa8);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x40);
	push_base_offset(0x48);
	load(0x2);
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);

L00df8:
	push_base_offset(0x40);
	load(0x2);
	push_word(0xfb);
	eq();
	push_offset(L00f0e);
	jc(0x1);
	push_base_offset(0x30);
	load(0x2);
	cmd_68();
	push_base_offset(0x9e4);
	move_arg(0x2);
	push_base_offset(0x9e4);
	load(0x2);
	push_byte(0xd);
	geq();
	push_offset(L00e73);
	jc(0x1);
	push_base_offset(0x30);
	load(0x2);
	push_string("PrintMessage ");
	push_byte(0xd);
	memcmp();
	push_offset(L00e73);
	jc(0x1);
	push_base_offset(0x30);
	load(0x2);
	push_byte(0xd);
	add();
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L00f0e);
	jc(0x1);
	push_base_offset(0x5d0);
	load(0x2);
	push_byte(0x0);
	eq();
	push_dword(0x9fab8);
	push_dword(0x234c8);
	add();
	load(0x2);
	bool_and();
	push_offset(L00e68);
	jc(0x0);
	push_base_offset(0x5d0);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00f0e);
	jc(0x1);

L00e68:
	push_base_offset(0x4c);
	push_byte(0x1);
	move(0x2);
	push_offset(L00f0e);
	jmp();

L00e73:
	push_base_offset(0x9e4);
	load(0x2);
	push_byte(0xc);
	geq();
	push_offset(L00ea1);
	jc(0x1);
	push_base_offset(0x30);
	load(0x2);
	push_string("SetClearName");
	push_byte(0xc);
	memcmp();
	push_offset(L00ea1);
	jc(0x1);
	push_base_offset(0x9e0);
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00ceb);
	jmp();

L00ea1:
	push_base_offset(0x9e4);
	load(0x2);
	push_byte(0x5);
	geq();
	push_offset(L00ecf);
	jc(0x1);
	push_base_offset(0x30);
	load(0x2);
	push_string("voice");
	push_byte(0x5);
	memcmp();
	push_offset(L00ecf);
	jc(0x1);
	push_base_offset(0x9e0);
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00ceb);
	jmp();

L00ecf:
	push_base_offset(0x9e4);
	load(0x2);
	push_byte(0x4);
	geq();
	push_offset(L00f0e);
	jc(0x1);
	push_base_offset(0x30);
	load(0x2);
	push_string("else");
	push_byte(0x4);
	memcmp();
	push_offset(L00f0e);
	jc(0x1);
	push_base_offset(0x5d0);
	load(0x2);
	push_byte(0x0);
	eq();
	push_dword(0x9fab8);
	push_dword(0x234c8);
	add();
	load(0x2);
	bool_and();
	push_offset(L00f0e);
	jc(0x1);
	push_base_offset(0x4c);
	push_byte(0x1);
	move(0x2);

L00f0e:
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x4);
	geq();
	push_byte(0x0);
	push_base_offset(0x4c);
	load(0x2);
	ternary();
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x9f8);
	load(0x2);
	push_offset(L00b93);
	call();
	push_base_offset(0x9f8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_dword(0x9fab8);
	push_dword(0x234c8);
	add();
	load(0x2);
	bool_and();
	push_offset(L00f67);
	jc(0x0);
	push_dword(0x45bd0);
	push_byte(0x40);
	memclr();
	push_base_offset(0x9f8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00f67);
	jc(0x1);
	push_dword(0x45bd0);
	push_base_offset(0x9f8);
	load(0x2);
	cmd_6a();

L00f67:
	push_word(0xb3c);
	push_byte(0x1);
	move(0x2);
	push_offset(L0368d);
	call();
	push_dword(0x9fab8);
	push_dword(0x234ac);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x234b0);
	add();
	load(0x2);
	eq();
	push_offset(L00fe8);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x230ac);
	add();
	cmd_68();
	push_base_offset(0x9e4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x230ac);
	add();
	push_base_offset(0x9e4);
	load(0x2);
	add();
	push_base_offset(0x9fc);
	load(0x2);
	cmd_6a();
	push_dword(0x11156c);
	push_dword(0x9fab8);
	push_dword(0x230ac);
	add();
	cmd_6a();
	push_dword(0x9fab8);
	push_dword(0x234ac);
	add();
	push_dword(0x9fab8);
	push_dword(0x234ac);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L00fe8:
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L010a8);
	jc(0x1);
	push_base_offset(0x2c);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x24);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0x710);
	add();
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_byte(0xc);
	add();
	push_byte(0x0);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x1c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x28);
	push_byte(0x4);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_string("「");
	push_byte(0x2);
	memcmp();
	push_offset(L010af);
	jc(0x0);
	push_base_offset(0x28);
	push_byte(0x5);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_string("　");
	push_byte(0x2);
	memcmp();
	push_offset(L010af);
	jc(0x0);
	push_base_offset(0x28);
	push_byte(0x6);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_string("（");
	push_byte(0x2);
	memcmp();
	push_offset(L010af);
	jc(0x0);
	push_base_offset(0x28);
	push_byte(0x7);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_string("“");
	push_byte(0x2);
	memcmp();
	push_offset(L010af);
	jc(0x0);
	push_base_offset(0x28);
	push_byte(0x8);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_string("『");
	push_byte(0x2);
	memcmp();
	push_offset(L010af);
	jc(0x0);

L010a8:
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);

L010af:
	push_base_offset(0x2c);
	load(0x2);
	push_offset(L010d2);
	jc(0x1);
	push_base_offset(0x9fc);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x9d4);
	push_string("%c%s");
	cmd_6f();
	push_base_offset(0x9fc);
	push_base_offset(0x9d4);
	move(0x2);

L010d2:
	push_dword(0x457d0);
	push_base_offset(0x9fc);
	load(0x2);
	cmd_6a();
	push_base_offset(0x1c);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	push_dword(0x42a94);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0113e);
	jc(0x1);
	push_word(0xba8);
	load(0x2);
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	move_arg(0x2);
	push_offset(L0117e);
	jmp();

L0113e:
	push_base_offset(0x5d0);
	load(0x2);
	push_offset(L0031d);
	call();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	move_arg(0x2);
	push_base_offset(0x18);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);

L0117e:
	push_dword(0x9fab8);
	push_dword(0x245f4);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L011ef);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	grp2(0x8d);
	push_dword(0x9fab8);
	push_dword(0x24600);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x24600);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x9e8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x245f4);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);

L011ef:
	push_base_offset(0x9f8);
	load(0x2);
	push_base_offset(0x9fc);
	load(0x2);
	push_offset(L00b7e);
	call();
	push_word(0xb48);
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x0);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	bool_and();
	push_dword(0x9fab8);
	push_dword(0x234c0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x234c4);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	bool_and();
	bool_or();
	move(0x2);
	push_byte(0x0);
	push_offset(L017b8);
	jc(0x0);
	sys1(0x17);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_dword(0x48424);
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L01338);
	jc(0x0);
	push_dword(0x48890);
	load(0x2);
	push_offset(L01338);
	jc(0x0);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x20);
	push_byte(0xa);
	add();
	load(0x1);
	push_word(0xbac);
	load(0x2);
	bool_or();
	push_dword(0x9fab8);
	push_word(0xf4);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	bool_or();
	push_offset(L01331);
	jc(0x1);
	push_byte(0x20);
	push_byte(0x74);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_byte(0x20);
	push_byte(0x12);
	add();
	load(0x1);
	ternary();
	push_base_offset(0x9e4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x9e4);
	load(0x2);
	ternary();
	push_base_offset(0x9e4);
	move_arg(0x2);
	push_word(0xb48);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_base_offset(0x9e4);
	load(0x2);
	ternary();
	push_base_offset(0x9e4);
	move_arg(0x2);
	push_string("sysprg.arc");
	push_string("environ._bp");
	sys1(0x40);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x9e4);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x10);
	load(0x2);
	call();
	push_base_offset(0x9e4);
	move_arg(0x2);
	push_byte(0x1);
	push_base_offset(0x9e4);
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x10);
	load(0x2);
	call();
	sys1(0x41);

L01331:
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L01338:
	push_word(0xb2c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_dword(0x48424);
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L016d6);
	jc(0x0);
	push_base_offset(0x9e8);
	push_base_offset(0x9f4);
	load(0x2);
	move(0x2);

L01371:
	push_byte(0x10);
	push_byte(0x0);
	add();
	load(0x1);
	push_offset(L01386);
	jc(0x1);
	push_dword(0x15d61c);
	push_byte(0x1);
	move(0x2);

L01386:
	push_dword(0x48890);
	load(0x2);
	push_offset(L01448);
	jc(0x0);
	push_word(0xb40);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x9fc);
	load(0x2);
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x7);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xa);
	add();
	load(0x1);
	push_base_offset(0x9e8);
	load(0x2);
	push_byte(0x0);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_and();
	push_byte(0x1);
	grp3(0x90);
	push_base_offset(0xc);
	move_arg(0x2);
	push_word(0xb40);
	push_byte(0x0);
	move(0x2);

L01448:
	push_word(0x7e4);
	load(0x2);
	push_offset(L0167a);
	jc(0x0);
	push_base_offset(0x9f0);
	load(0x2);
	push_offset(L01465);
	jc(0x0);
	push_word(0xeba);
	grp1(0x12);
	push_offset(L017b8);
	jmp();

L01465:
	push_word(0x504);
	load(0x2);
	push_offset(L01d00);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L01cf9);
	jc(0x0);
	sys1(0x17);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_dword(0x48424);
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L017b8);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x234c0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x234c4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0xc);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x9e4);
	move_arg(0x2);
	sys1(0x4);
	push_base_offset(0x9dc);
	move_arg(0x2);
	push_base_offset(0x9dc);
	push_base_offset(0x9e4);
	load(0x2);
	push_base_offset(0x9dc);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x9dc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_byte(0x0);
	push_base_offset(0x9dc);
	load(0x2);
	ternary();
	push_base_offset(0x9dc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x20);
	push_byte(0xa);
	add();
	load(0x1);
	push_word(0xbac);
	load(0x2);
	bool_or();
	push_dword(0x9fab8);
	push_word(0xf4);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	bool_or();
	push_byte(0x20);
	push_word(0x80);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x10);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	lt();
	bool_and();
	bool_or();
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_zero();
	bool_or();
	push_word(0xb48);
	load(0x2);
	bool_and();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x9dc);
	load(0x2);
	push_word(0x1f4);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x9b);
	push_dword(0x48890);
	push_byte(0x0);
	move(0x2);
	push_word(0x920);
	push_byte(0x1);
	move(0x2);
	push_word(0xb40);
	push_byte(0x1);
	move(0x2);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_string("");
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x7);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xa);
	add();
	load(0x1);
	push_base_offset(0x9e8);
	load(0x2);
	push_base_offset(0x9f0);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_and();
	push_byte(0x1);
	grp3(0x90);
	push_base_offset(0xc);
	move_arg(0x2);
	push_word(0xb40);
	push_byte(0x0);
	move(0x2);
	push_word(0x920);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0165f);
	jc(0x1);
	push_byte(0x0);
	push_offset(L01664);
	jc(0x1);
	push_word(0xeba);
	grp1(0x4);
	push_offset(L01664);
	jmp();

L0165f:
	push_word(0xeba);
	grp1(0x12);

L01664:
	push_dword(0x4887c);
	load(0x2);
	push_offset(L01cf9);
	jc(0x0);
	push_word(0x7e4);
	load(0x2);
	push_offset(L017b8);
	jc(0x1);

L0167a:
	push_word(0x504);
	load(0x2);
	push_offset(L01d00);
	jc(0x0);
	push_word(0x7e8);
	load(0x2);
	push_offset(L01694);
	jc(0x1);
	sys1(0x5f);
	push_offset(L0167a);
	jmp();

L01694:
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L016c4);
	jc(0x1);
	push_word(0xba8);
	load(0x2);
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	move_arg(0x2);

L016c4:
	push_word(0x7e4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x9e8);
	push_byte(0x1);
	move(0x2);
	push_offset(L01371);
	jmp();

L016d6:
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x9fc);
	load(0x2);
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x7);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xa);
	add();
	load(0x1);
	grp3(0x91);
	push_byte(0x0);
	grp1(0x0);
	push_word(0xeba);
	grp1(0x12);
	push_byte(0x20);
	push_byte(0xe);
	add();
	load(0x1);
	push_offset(L017b6);
	jc(0x1);
	sys1(0x4);
	push_base_offset(0x9e4);
	move_arg(0x2);
	push_base_offset(0x9e4);
	load(0x2);
	push_dword(0x44388);
	load(0x2);
	lt();
	push_offset(L017a6);
	jc(0x1);
	push_dword(0x44388);
	load(0x2);
	push_base_offset(0x9e4);
	load(0x2);
	sub();
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0x9e4);
	push_dword(0x44388);
	load(0x2);
	move(0x2);

L017a6:
	push_dword(0x44388);
	push_base_offset(0x9e4);
	load(0x2);
	push_word(0xa6);
	add();
	move(0x2);

L017b6:
	sys1(0x5f);

L017b8:
	push_word(0x504);
	load(0x2);
	push_offset(L01d00);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	grp2(0x8d);
	push_dword(0x9fab8);
	push_dword(0x24618);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x24618);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x9e8);
	move_arg(0x2);
	push_base_offset(0x9ec);
	load(0x2);
	push_offset(L01a1c);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x245f4);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01966);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22130);
	add();
	push_dword(0x9fab8);
	push_dword(0x22130);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	grp2(0x8e);
	push_offset(L018e1);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_string("\n");
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x7);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xa);
	add();
	load(0x1);
	grp3(0x91);

L018e1:
	push_base_offset(0x20);
	load(0x2);
	push_string("\n");
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x7);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xa);
	add();
	load(0x1);
	grp3(0x91);
	push_offset(L01a1c);
	jmp();

L01966:
	push_word(0xb2c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0xbd4);
	load(0x2);
	bool_zero();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_byte(0x0);
	push_offset(L01a1c);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L01a15);
	jc(0x0);
	sys1(0x17);
	push_base_offset(0x9e8);
	move_arg(0x2);
	push_base_offset(0x9e8);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_offset(L01a15);
	jc(0x0);
	push_word(0xb40);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_string("\f");
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	grp1(0x90);
	push_word(0xb40);
	push_byte(0x0);
	move(0x2);
	push_word(0x7e4);
	load(0x2);
	push_offset(L01a1c);
	jc(0x1);

L019f0:
	push_word(0x504);
	load(0x2);
	push_offset(L01d00);
	jc(0x0);
	push_word(0x7e8);
	load(0x2);
	push_offset(L01a0a);
	jc(0x1);
	sys1(0x5f);
	push_offset(L019f0);
	jmp();

L01a0a:
	push_word(0x7e4);
	push_byte(0x0);
	move(0x2);
	push_offset(L01a1c);
	jmp();

L01a15:
	push_base_offset(0x20);
	load(0x2);
	grp3(0x8e);

L01a1c:
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x0);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x234c0);
	add();
	load(0x2);
	bool_or();
	push_offset(L01b50);
	jc(0x1);
	push_base_offset(0x9ec);
	load(0x2);
	push_offset(L01b50);
	jc(0x1);
	push_byte(0x20);
	push_byte(0x14);
	add();
	load(0x1);
	push_offset(L01a59);
	jc(0x1);
	push_offset(L0689e);
	call();

L01a59:
	sys1(0x4);
	push_base_offset(0x9dc);
	move_arg(0x2);
	push_base_offset(0x9e0);
	push_byte(0x0);
	move(0x2);

L01a67:
	push_byte(0x20);
	push_byte(0x14);
	add();
	load(0x1);
	push_offset(L01ab3);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x234c0);
	add();
	load(0x2);
	push_offset(L01aa9);
	jc(0x0);
	push_base_offset(0x9dc);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x212b8);
	add();
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	geq();
	push_offset(L01ab3);
	jc(0x0);

L01aa9:
	push_byte(0x46);
	push_base_offset(0x9e0);
	load(0x2);
	add();
	snd1(0x25);

L01ab3:
	push_dword(0x9fab8);
	push_dword(0x212b8);
	add();
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x34);
	memclr();
	push_base_offset(0x9e0);
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L01a67);
	jc(0x0);
	push_byte(0x20);
	push_byte(0x14);
	add();
	load(0x1);
	push_offset(L01b26);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x234c0);
	add();
	load(0x2);
	push_offset(L01b26);
	jc(0x0);
	push_base_offset(0x9dc);
	load(0x2);
	push_dword(0x48894);
	push_byte(0xc);
	add();
	load(0x2);
	geq();
	push_offset(L01b26);
	jc(0x0);
	push_byte(0x46);
	push_dword(0x48894);
	push_byte(0x2);
	add();
	load(0x1);
	add();
	snd1(0x25);

L01b26:
	push_dword(0x48894);
	push_byte(0x34);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x234c0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x234c4);
	add();
	push_byte(0x0);
	move(0x2);
	push_offset(L01b50);
	jmp();

L01b50:
	push_word(0x504);
	load(0x2);
	push_offset(L01d00);
	jc(0x0);
	push_word(0xb80);
	load(0x2);
	push_offset(L01b6a);
	jc(0x1);
	sys1(0x5f);
	push_offset(L01b50);
	jmp();

L01b6a:
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	push_base_offset(0x1c);
	load(0x2);
	move(0x2);
	push_dword(0x45bd0);
	push_base_offset(0x9fc);
	load(0x2);
	push_base_offset(0x9ec);
	load(0x2);
	push_word(0xbd4);
	load(0x2);
	bool_or();
	push_offset(L005f1);
	call();
	push_base_offset(0x20);
	load(0x2);
	grp2(0x8d);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x9e8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x230a8);
	add();
	push_base_offset(0x9ec);
	load(0x2);
	move(0x2);
	push_base_offset(0x9f0);
	load(0x2);
	push_offset(L01bfa);
	jc(0x1);
	push_base_offset(0x5cc);
	push_dword(0x43f68);
	load(0x2);
	call();

L01bfa:
	push_dword(0x9fab8);
	push_dword(0x234b0);
	add();
	push_dword(0x9fab8);
	push_dword(0x234ac);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x9ec);
	load(0x2);
	push_offset(L01c9d);
	jc(0x1);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01c61);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x234cc);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01c5b);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x234cc);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	bool_or();
	push_offset(L01c61);
	jc(0x0);

L01c5b:
	push_byte(0x0);
	push_offset(L003e5);
	call();

L01c61:
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_byte(0x40);
	memclr();
	push_dword(0x45bd0);
	push_byte(0x40);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x234c8);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x234cc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L01ccb);
	jmp();

L01c9d:
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_byte(0x40);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_dword(0x45bd0);
	cmd_6a();
	push_dword(0x9fab8);
	push_dword(0x234c8);
	add();
	push_byte(0x1);
	move(0x2);

L01ccb:
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	push_base_offset(0x34);
	load(0x2);
	move(0x2);
	push_dword(0x48890);
	push_byte(0x0);
	move(0x2);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L01cf9);
	jc(0x1);
	push_dword(0x4888c);
	push_byte(0x1);
	move(0x2);

L01cf9:
	push_word(0xb3c);
	push_byte(0x0);
	move(0x2);

L01d00:
	push_byte(0x0);
	load_base();
	push_word(0x9fc);
	sub();
	store_base();
	ret();

L01d09:
	load_base();
	push_byte(0x5c);
	add();
	store_base();
	push_base_offset(0x58);
	move_arg(0x2);
	push_base_offset(0x5c);
	move_arg(0x2);
	push_base_offset(0x54);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x48);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x58);
	load(0x2);
	cmd_68();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x50);
	push_byte(0x0);
	move(0x2);

L01d3f:
	push_word(0x5a8);
	push_byte(0x20);
	push_base_offset(0x50);
	load(0x2);
	mul();
	add();
	cmd_68();
	push_base_offset(0x40);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_word(0x628);
	push_byte(0x20);
	push_base_offset(0x50);
	load(0x2);
	mul();
	add();
	cmd_68();
	push_base_offset(0x30);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x24334);
	add();
	push_byte(0x20);
	push_base_offset(0x50);
	load(0x2);
	mul();
	add();
	cmd_68();
	push_base_offset(0x20);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x243b4);
	add();
	push_byte(0x20);
	push_base_offset(0x50);
	load(0x2);
	mul();
	add();
	cmd_68();
	push_base_offset(0x10);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x50);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	lt();
	push_offset(L01d3f);
	jc(0x0);

L01dd5:
	push_base_offset(0x4c);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	geq();
	push_offset(L0206a);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_offset(L01e4a);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x5);
	add();
	push_base_offset(0x44);
	load(0x2);
	leq();
	push_offset(L02032);
	jc(0x1);
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	add();
	push_string("</ns>");
	push_byte(0x5);
	memcmp();
	push_offset(L01e32);
	jc(0x0);
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	add();
	push_string("</NS>");
	push_byte(0x5);
	memcmp();
	push_offset(L01e32);
	jc(0x0);
	push_offset(L02032);
	jmp();

L01e32:
	push_base_offset(0x54);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4c);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x5);
	add();
	move(0x2);
	push_offset(L01dd5);
	jmp();

L01e4a:
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x4);
	add();
	push_base_offset(0x44);
	load(0x2);
	leq();
	push_offset(L01ea5);
	jc(0x1);
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	add();
	push_string("<ns>");
	push_byte(0x4);
	memcmp();
	push_offset(L01e8d);
	jc(0x0);
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	add();
	push_string("<NS>");
	push_byte(0x4);
	memcmp();
	push_offset(L01e8d);
	jc(0x0);
	push_offset(L01ea5);
	jmp();

L01e8d:
	push_base_offset(0x54);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4c);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_offset(L01dd5);
	jmp();

L01ea5:
	push_base_offset(0x50);
	push_byte(0x0);
	move(0x2);

L01eac:
	push_base_offset(0x40);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L01f62);
	jc(0x1);
	push_base_offset(0x4c);
	load(0x2);
	push_base_offset(0x40);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_base_offset(0x44);
	load(0x2);
	leq();
	push_offset(L01f62);
	jc(0x1);
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	add();
	push_word(0x5a8);
	push_byte(0x20);
	push_base_offset(0x50);
	load(0x2);
	mul();
	add();
	push_base_offset(0x40);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	memcmp();
	push_offset(L01f62);
	jc(0x1);
	push_base_offset(0x5c);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x24334);
	add();
	push_byte(0x20);
	push_base_offset(0x50);
	load(0x2);
	mul();
	add();
	cmd_6a();
	push_base_offset(0x4c);
	push_base_offset(0x4c);
	load(0x2);
	push_base_offset(0x40);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x48);
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x20);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	move(0x2);
	push_offset(L01dd5);
	jmp();

L01f62:
	push_base_offset(0x30);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L02018);
	jc(0x1);
	push_base_offset(0x4c);
	load(0x2);
	push_base_offset(0x30);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_base_offset(0x44);
	load(0x2);
	leq();
	push_offset(L02018);
	jc(0x1);
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	add();
	push_word(0x628);
	push_byte(0x20);
	push_base_offset(0x50);
	load(0x2);
	mul();
	add();
	push_base_offset(0x30);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	memcmp();
	push_offset(L02018);
	jc(0x1);
	push_base_offset(0x5c);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x243b4);
	add();
	push_byte(0x20);
	push_base_offset(0x50);
	load(0x2);
	mul();
	add();
	cmd_6a();
	push_base_offset(0x4c);
	push_base_offset(0x4c);
	load(0x2);
	push_base_offset(0x30);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x48);
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x10);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	move(0x2);
	push_offset(L01dd5);
	jmp();

L02018:
	push_base_offset(0x50);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x4);
	lt();
	push_offset(L01eac);
	jc(0x0);

L02032:
	push_base_offset(0x5c);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	add();
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	add();
	load(0x0);
	move(0x0);
	push_base_offset(0x4c);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x48);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L01dd5);
	jmp();

L0206a:
	push_base_offset(0x5c);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	add();
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	add();
	load(0x0);
	move(0x0);
	load_base();
	push_byte(0x5c);
	sub();
	store_base();
	ret();

L0208a:
	load_base();
	push_word(0x230);
	add();
	store_base();
	push_dword(0xc58f4);
	push_dword(0x9fab8);
	push_dword(0x25e3c);
	memcpy();
	push_dword(0x9fab8);
	push_dword(0x234ac);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L020c5);
	jc(0x1);
	push_dword(0xeb730);
	push_dword(0x9fab8);
	push_dword(0x25e3c);
	memcpy();

L020c5:
	push_base_offset(0x224);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x228);
	push_dword(0x42a94);
	push_base_offset(0x224);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x224);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L02130);
	jc(0x1);
	push_offset(L023b6);
	call();
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x224);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L02130:
	push_dword(0x44000);
	load(0x2);
	call();
	push_base_offset(0x220);
	move_arg(0x2);
	push_dword(0x44000);
	load(0x2);
	call();
	push_base_offset(0x21c);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x218);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x214);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x210);
	move_arg(0x2);
	push_word(0xb28);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x220);
	load(0x2);
	cmd_68();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x220);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	load(0x0);
	push_byte(0x26);
	eq();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L021db);
	jc(0x1);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x20c);
	push_base_offset(0x220);
	load(0x2);
	cmd_6a();
	push_base_offset(0x20c);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_byte(0x0);
	move(0x0);
	push_base_offset(0x220);
	push_base_offset(0x20c);
	move(0x2);
	push_base_offset(0x210);
	push_byte(0x0);
	move(0x2);
	push_offset(L02225);
	jmp();

L021db:
	push_base_offset(0x220);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	load(0x0);
	push_byte(0x3c);
	eq();
	push_offset(L02225);
	jc(0x1);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x20c);
	push_base_offset(0x220);
	load(0x2);
	cmd_6a();
	push_base_offset(0x20c);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_byte(0x0);
	move(0x0);
	push_base_offset(0x220);
	push_base_offset(0x20c);
	move(0x2);
	push_base_offset(0x218);
	push_byte(0x1);
	move(0x2);

L02225:
	push_base_offset(0x21c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0224a);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x24098);
	add();
	push_byte(0x70);
	add();
	push_base_offset(0x21c);
	load(0x2);
	cmd_6a();
	push_offset(L0228d);
	jmp();

L0224a:
	push_dword(0x9fab8);
	push_dword(0x24098);
	add();
	push_byte(0x70);
	add();
	cmd_68();
	push_offset(L0228d);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x24098);
	add();
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x24098);
	add();
	push_byte(0xc);
	add();
	push_dword(0x9fab8);
	push_dword(0x24098);
	add();
	push_byte(0x70);
	add();
	cmd_6a();

L0228d:
	push_word(0xba8);
	load(0x2);
	push_byte(0x20);
	push_byte(0xc);
	add();
	load(0x1);
	bool_or();
	push_offset(L022ef);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x230);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0x230);
	load(0x2);
	push_word(0x3e8);
	add();
	move(0x2);

L022b4:
	push_word(0xbbc);
	load(0x2);
	push_offset(L022ef);
	jc(0x1);
	push_word(0x504);
	load(0x2);
	push_offset(L022ef);
	jc(0x0);
	push_word(0xbd4);
	load(0x2);
	push_offset(L022ef);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x230);
	move_arg(0x2);
	push_base_offset(0x230);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	lt();
	push_offset(L022ef);
	jc(0x1);
	sys1(0x5f);
	push_offset(L022b4);
	jmp();

L022ef:
	push_base_offset(0x21c);
	load(0x2);
	push_dword(0x44040);
	load(0x2);
	call();
	push_base_offset(0x220);
	load(0x2);
	push_base_offset(0x21c);
	load(0x2);
	push_base_offset(0x218);
	load(0x2);
	push_base_offset(0x214);
	load(0x2);
	push_base_offset(0x210);
	load(0x2);
	push_offset(L00c0a);
	call();
	push_base_offset(0x22c);
	move_arg(0x2);
	push_base_offset(0x210);
	load(0x2);
	push_offset(L02341);
	jc(0x1);
	push_byte(0x2);
	push_dword(0x43f50);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x23e98);
	add();
	push_word(0x200);
	memclr();

L02341:
	push_base_offset(0x21c);
	load(0x2);
	push_dword(0x44044);
	load(0x2);
	call();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x2);
	geq();
	push_offset(L0239a);
	jc(0x1);
	push_base_offset(0x220);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_byte(0x2);
	sub();
	push_string("」");
	cmd_69();
	push_offset(L02389);
	jc(0x0);
	push_base_offset(0x220);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_byte(0x2);
	sub();
	push_string("）");
	cmd_69();
	push_offset(L0239a);
	jc(0x1);

L02389:
	push_dword(0x9fab8);
	push_dword(0x24098);
	add();
	push_byte(0x70);
	add();
	push_byte(0x20);
	memclr();

L0239a:
	push_dword(0x45f10);
	push_byte(0x6);
	move(0x2);
	push_word(0xb28);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x22c);
	load(0x2);
	load_base();
	push_word(0x230);
	sub();
	store_base();
	ret();

L023b6:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_dword(0x42a94);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_word(0xb2c);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L02597);
	jc(0x0);
	push_dword(0xc58f4);
	push_dword(0x9fab8);
	push_dword(0x25e3c);
	memcpy();
	push_word(0xb3c);
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_byte(0x0);
	push_byte(0x1);
	push_offset(L005f1);
	call();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L02438);
	jc(0x1);
	push_byte(0x0);
	push_offset(L003e5);
	call();

L02438:
	sys1(0x17);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	bool_or();
	push_offset(L024b1);
	jc(0x0);
	push_word(0xb40);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_string("\f");
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	grp1(0x90);
	push_word(0xb40);
	push_byte(0x0);
	move(0x2);
	push_word(0x7e4);
	load(0x2);
	push_offset(L024b8);
	jc(0x1);

L0248c:
	push_word(0x504);
	load(0x2);
	push_offset(L02597);
	jc(0x0);
	push_word(0x7e8);
	load(0x2);
	push_offset(L024a6);
	jc(0x1);
	sys1(0x5f);
	push_offset(L0248c);
	jmp();

L024a6:
	push_word(0x7e4);
	push_byte(0x0);
	move(0x2);
	push_offset(L024b8);
	jmp();

L024b1:
	push_base_offset(0x8);
	load(0x2);
	grp3(0x8e);

L024b8:
	push_word(0xb2c);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_byte(0x40);
	memclr();
	push_dword(0x45bd0);
	push_byte(0x40);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_dword(0x9fab8);
	push_dword(0x235d4);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22130);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp2(0x8d);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x2212c);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L02590);
	jc(0x1);
	push_byte(0x0);
	push_dword(0x43fec);
	load(0x2);
	call();
	push_offset(L04804);
	call();

L02590:
	push_word(0xb3c);
	push_byte(0x0);
	move(0x2);

L02597:
	push_byte(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0259f:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_dword(0xc58f4);
	push_dword(0x9fab8);
	push_dword(0x25e3c);
	memcpy();
	push_word(0xb3c);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_dword(0x42a94);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_string("\n");
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x7);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_byte(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xa);
	add();
	load(0x1);
	grp3(0x91);
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_byte(0x0);
	push_byte(0x1);
	push_offset(L005f1);
	call();
	push_base_offset(0x8);
	load(0x2);
	grp2(0x8d);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_word(0xb3c);
	push_byte(0x0);
	move(0x2);
	push_byte(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L026ee:
	load_base();
	push_word(0x508);
	add();
	store_base();
	push_dword(0xc58f4);
	push_dword(0x9fab8);
	push_dword(0x25e3c);
	memcpy();
	push_dword(0x44000);
	load(0x2);
	call();
	push_base_offset(0x508);
	move_arg(0x2);
	push_dword(0x44000);
	load(0x2);
	call();
	push_base_offset(0x504);
	move_arg(0x2);
	push_base_offset(0x508);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0273f);
	jc(0x1);
	push_base_offset(0x500);
	push_base_offset(0x508);
	load(0x2);
	push_offset(L01d09);
	call();
	push_base_offset(0x508);
	push_base_offset(0x500);
	move(0x2);

L0273f:
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02760);
	jc(0x1);
	push_base_offset(0x400);
	push_base_offset(0x504);
	load(0x2);
	push_offset(L01d09);
	call();
	push_base_offset(0x504);
	push_base_offset(0x400);
	move(0x2);

L02760:
	push_base_offset(0x508);
	load(0x2);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x1);
	push_offset(L005f1);
	call();
	push_byte(0x0);
	load_base();
	push_word(0x508);
	sub();
	store_base();
	ret();

L02779:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x234b8);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_byte(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L027a5:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_byte(0xa);
	push_string("テキスト表示速度");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L02868);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0xf8);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0xf8);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02868);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("environ._bp");
	sys1(0x40);
	push_base_offset(0x8);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x72);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_byte(0x20);
	push_byte(0x10);
	add();
	load(0x1);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0xf8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xf8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	push_byte(0x0);
	push_base_offset(0x8);
	load(0x2);
	call();
	sys1(0x41);

L02868:
	push_byte(0x0);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L02870:
	load_base();
	push_byte(0x68);
	add();
	store_base();
	push_base_offset(0x60);
	move_arg(0x2);
	push_base_offset(0x64);
	move_arg(0x2);
	push_base_offset(0x68);
	move_arg(0x2);
	push_base_offset(0x54);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x58);
	push_dword(0x42a94);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L028fc);
	jc(0x1);
	push_base_offset(0x50);
	push_byte(0x1a);
	move(0x2);
	push_base_offset(0x4c);
	push_byte(0x1a);
	push_byte(0x20);
	mul();
	push_byte(0x64);
	div();
	move(0x2);
	push_base_offset(0x48);
	push_byte(0xb);
	push_byte(0x1a);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	move(0x2);
	push_base_offset(0x44);
	push_byte(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x20);
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x8);
	add();
	move(0x2);
	push_offset(L029cd);
	jmp();

L028fc:
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L02947);
	jc(0x1);
	push_base_offset(0x50);
	push_byte(0x1a);
	move(0x2);
	push_base_offset(0x4c);
	push_byte(0x1a);
	push_byte(0x20);
	mul();
	push_byte(0x64);
	div();
	move(0x2);
	push_base_offset(0x48);
	push_byte(0xb);
	push_byte(0x1a);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	move(0x2);
	push_base_offset(0x44);
	push_byte(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x20);
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x8);
	add();
	move(0x2);
	push_offset(L029cd);
	jmp();

L02947:
	push_base_offset(0x50);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4c);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	load(0x2);
	move(0x2);
	push_string("sysprg.arc");
	push_string("msgwndctrl._bp");
	sys1(0x40);
	push_base_offset(0x40);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22110);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22108);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2210c);
	add();
	load(0x2);
	push_byte(0x7);
	push_base_offset(0x40);
	load(0x2);
	call();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x48);
	move_arg(0x2);
	sys1(0x41);

L029cd:
	push_base_offset(0x2c);
	push_base_offset(0x50);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x50);
	load(0x2);
	div();
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x50);
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x34);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x2c);
	load(0x2);
	div();
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x2c);
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x0);
	push_byte(0x2);
	push_string("単位");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L02b71);
	jc(0x1);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x3c);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_string("テキスト出力Ｘ座標");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L02b71);
	jc(0x1);
	push_base_offset(0x60);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x34);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_string("テキスト出力Ｙ座標");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L02b71);
	jc(0x1);
	push_base_offset(0x28);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x1);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x20);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x18);
	push_base_offset(0x64);
	load(0x2);
	push_base_offset(0x28);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	mul();
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x60);
	load(0x2);
	push_base_offset(0x20);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	mul();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x58);
	load(0x2);
	grp1(0x89);
	push_dword(0x9fab8);
	push_dword(0x22128);
	add();
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L02b10);
	jc(0x1);
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x10);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	add();
	push_base_offset(0x10);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	add();
	grp2(0x8c);
	push_offset(L02b33);
	jmp();

L02b10:
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x10);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	sub();
	push_base_offset(0x10);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	add();
	grp2(0x8c);

L02b33:
	push_base_offset(0x58);
	load(0x2);
	grp2(0x8d);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x5c);
	move_arg(0x2);

L02b71:
	load_base();
	push_byte(0x68);
	sub();
	store_base();
	ret();

L02b77:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L02870);
	call();
	push_byte(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02bae:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L02870);
	call();
	push_byte(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L02bf5:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x9fab8);
	push_dword(0x234c8);
	add();
	push_byte(0x1);
	move(0x2);
	push_byte(0x0);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L02c11:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x2);
	push_string("動作モード");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L02c4e);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x234cc);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);

L02c4e:
	push_byte(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L02c56:
	load_base();
	push_word(0x20c);
	add();
	store_base();
	push_dword(0x44000);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x44000);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_string("");
	push_base_offset(0x8);
	load(0x2);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	cmd_68();
	push_base_offset(0x20c);
	move_arg(0x2);
	push_base_offset(0x20c);
	load(0x2);
	push_byte(0x4);
	lt();
	push_offset(L02cd6);
	jc(0x0);
	push_byte(0x0);
	push_offset(L02da0);
	jc(0x0);
	push_byte(0x4);
	push_byte(0x1);
	sub();
	push_byte(0x4);
	push_byte(0x1);
	sub();
	push_byte(0x1);
	sar();
	push_base_offset(0x208);
	push_string("名前の前の装飾の長さが全角%d文字（半角%d文字）を超えています");
	cmd_6f();
	push_base_offset(0x108);
	push_base_offset(0x208);
	push_dword(0x4400c);
	load(0x2);
	call();
	push_base_offset(0x108);
	usr1(0x80);
	push_offset(L02da0);
	jmp();

L02cd6:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	eq();
	push_string("");
	push_base_offset(0x4);
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	cmd_68();
	push_base_offset(0x20c);
	move_arg(0x2);
	push_base_offset(0x20c);
	load(0x2);
	push_byte(0x4);
	lt();
	push_offset(L02d36);
	jc(0x0);
	push_byte(0x0);
	push_offset(L02da0);
	jc(0x0);
	push_byte(0x4);
	push_byte(0x1);
	sub();
	push_byte(0x4);
	push_byte(0x1);
	sub();
	push_byte(0x1);
	sar();
	push_base_offset(0x208);
	push_string("名前の後ろの装飾の長さが全角%d文字（半角%d文字）を超えています");
	cmd_6f();
	push_base_offset(0x108);
	push_base_offset(0x208);
	push_dword(0x4400c);
	load(0x2);
	call();
	push_base_offset(0x108);
	usr1(0x80);
	push_offset(L02da0);
	jmp();

L02d36:
	push_word(0x424);
	load(0x2);
	push_offset(L02d62);
	jc(0x1);
	push_word(0x7a8);
	push_byte(0x4);
	memclr();
	push_word(0x7a8);
	push_base_offset(0x8);
	load(0x2);
	cmd_6a();
	push_word(0x7ac);
	push_byte(0x4);
	memclr();
	push_word(0x7ac);
	push_base_offset(0x4);
	load(0x2);
	cmd_6a();
	push_offset(L02da0);
	jmp();

L02d62:
	push_dword(0x9fab8);
	push_dword(0x244b4);
	add();
	push_byte(0x4);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x244b4);
	add();
	push_base_offset(0x8);
	load(0x2);
	cmd_6a();
	push_dword(0x9fab8);
	push_dword(0x244b8);
	add();
	push_byte(0x4);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x244b8);
	add();
	push_base_offset(0x4);
	load(0x2);
	cmd_6a();

L02da0:
	push_byte(0x0);
	load_base();
	push_word(0x20c);
	sub();
	store_base();
	ret();

L02da9:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x14);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	push_byte(0x3);
	push_string("フォント番号");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L02efd);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	push_word(0xc8);
	push_byte(0x1);
	add();
	push_string("フォントサイズ");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L02efd);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_byte(0x2);
	push_string("フォントの太さ");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L02efd);
	jc(0x1);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_dword(0x42a94);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	load(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x88);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x0);

L02efd:
	push_byte(0x0);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L02f05:
	load_base();
	push_byte(0x1c);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x18);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x14);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	eq();
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	push_byte(0x3);
	push_string("フォント番号");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0310f);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	push_word(0xc8);
	push_byte(0x1);
	add();
	push_string("フォントの縦幅");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0310f);
	jc(0x1);
	push_base_offset(0x1c);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x3);
	add();
	push_byte(0x2);
	sar();
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x8);
	geq();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x8);
	ternary();
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1);
	shl();
	push_byte(0x1);
	add();
	push_string("フォントの横幅");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0310f);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_byte(0x2);
	push_string("フォントの太さ");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0310f);
	jc(0x1);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_dword(0x42a94);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x18);
	load(0x2);
	move(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x64);
	mul();
	push_base_offset(0x10);
	load(0x2);
	div();
	move(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	load(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x88);

L0310f:
	push_byte(0x0);
	load_base();
	push_byte(0x1c);
	sub();
	store_base();
	ret();

L03117:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("モノローグカラー（赤）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L031b5);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("モノローグカラー（緑）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L031b5);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("モノローグカラー（青）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L031b5);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x235d4);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	shl();
	or();
	push_base_offset(0x4);
	load(0x2);
	or();
	move(0x2);

L031b5:
	push_byte(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L031bd:
	load_base();
	push_word(0x114);
	add();
	store_base();
	push_dword(0x44000);
	load(0x2);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("ワードカラー（赤）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L03314);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("ワードカラー（緑）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L03314);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("ワードカラー（青）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L03314);
	jc(0x1);
	push_base_offset(0x114);
	push_byte(0x0);
	move(0x2);

L0324c:
	push_dword(0x9fab8);
	push_dword(0x235d8);
	add();
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x44);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L032c7);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x235d8);
	add();
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x44);
	mul();
	add();
	push_byte(0x4);
	add();
	cmd_69();
	push_offset(L032c7);
	jc(0x0);
	push_base_offset(0x114);
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L0324c);
	jc(0x0);
	push_byte(0x0);
	push_offset(L03314);
	jc(0x0);
	push_base_offset(0x110);
	push_string("これ以上、セリフ用テキストカラーを登録することはできません");
	push_dword(0x4400c);
	load(0x2);
	call();
	push_base_offset(0x110);
	usr1(0x80);
	push_offset(L03314);
	jmp();

L032c7:
	push_dword(0x9fab8);
	push_dword(0x235d8);
	add();
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x44);
	mul();
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x10);
	load(0x2);
	cmd_6a();
	push_dword(0x9fab8);
	push_dword(0x235d8);
	add();
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x44);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	shl();
	or();
	push_base_offset(0x4);
	load(0x2);
	or();
	move(0x2);

L03314:
	push_byte(0x0);
	load_base();
	push_word(0x114);
	sub();
	store_base();
	ret();

L0331d:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x10);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);

L03359:
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L033c3);
	jc(0x1);
	push_base_offset(0x10);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L033c3);
	jc(0x0);
	push_base_offset(0x10);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	move(0x2);

L033c3:
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L03359);
	jc(0x0);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_base_offset(0x10);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_and();
	push_offset(L0343c);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	load(0x2);
	bool_zero();
	push_base_offset(0x10);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_and();
	push_offset(L0343c);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	load(0x2);
	bool_zero();
	push_base_offset(0x10);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_and();
	push_offset(L0343c);
	jc(0x0);
	push_offset(L03680);
	jmp();

L0343c:
	push_word(0x7e0);
	sys1(0x18);
	push_word(0xb60);
	load(0x2);
	push_offset(L0346d);
	jc(0x0);
	push_word(0x7ec);
	load(0x2);
	push_offset(L0346d);
	jc(0x1);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x32);
	push_word(0x7ec);
	push_byte(0x0);
	move(0x2);

L0346d:
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x43f00);
	load(0x2);
	call();
	push_base_offset(0x18);
	move_arg(0x2);
	sys1(0x17);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	ternary();
	push_base_offset(0x18);
	move_arg(0x2);
	push_word(0x900);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_base_offset(0x10);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_and();
	move(0x2);
	push_word(0x904);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	load(0x2);
	bool_zero();
	push_base_offset(0x10);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_and();
	move(0x2);
	push_word(0x908);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	load(0x2);
	bool_zero();
	push_base_offset(0x10);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_and();
	move(0x2);
	push_word(0x100);
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	push_offset(L072c6);
	call();
	push_word(0x900);
	push_byte(0x0);
	move(0x2);
	push_word(0x904);
	push_byte(0x0);
	move(0x2);
	push_word(0x908);
	push_byte(0x0);
	move(0x2);
	push_word(0x7e0);
	sys1(0x19);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_offset(L0353e);
	jc(0x0);
	push_word(0x700);
	sys1(0x19);

L0353e:
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	push_base_offset(0x10);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	push_base_offset(0x10);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	push_base_offset(0x10);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_dword(0x43f0c);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x25e10);
	add();
	load(0x2);
	push_offset(L03680);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x25e0c);
	add();
	load(0x2);
	push_offset(L035f9);
	jc(0x1);
	push_byte(0x20);
	push_word(0x132);
	add();
	load(0x1);
	push_offset(L035c6);
	jc(0x1);
	push_byte(0x0);
	push_byte(0x17);
	add();
	push_offset(L058d7);
	call();

L035c6:
	push_byte(0x20);
	push_word(0x130);
	add();
	load(0x1);
	push_offset(L035f9);
	jc(0x1);
	push_dword(-0x1);
	push_byte(0x1);
	push_byte(0x0);
	push_offset(L05d0d);
	call();
	push_byte(0x1);
	push_offset(L05da5);
	call();
	push_byte(0x2);
	push_byte(0x1);
	push_dword(-0x3);
	push_offset(L05d0d);
	call();
	push_byte(0x0);
	push_offset(L05da5);
	call();

L035f9:
	push_dword(0x9fab8);
	push_dword(0x25e10);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0xc58f4);
	push_dword(0x25e10);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0xeb730);
	push_dword(0x25e10);
	add();
	push_byte(0x0);
	move(0x2);
	push_offset(L03680);
	jmp();
	push_word(0xb60);
	load(0x2);
	push_offset(L03680);
	jc(0x0);
	push_word(0x7ec);
	load(0x2);
	push_offset(L03680);
	jc(0x1);
	push_word(0x96);
	push_offset(L05887);
	call();
	push_base_offset(0x18);
	move_arg(0x2);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x22);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_word(0x7ec);
	push_byte(0x0);
	move(0x2);

L03680:
	push_word(0x8fc);
	push_byte(0x0);
	move(0x2);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L0368d:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x96);
	push_offset(L0331d);
	call();
	push_byte(0x0);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L036a1:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0331d);
	call();
	push_byte(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L036c4:
	load_base();
	push_byte(0x34);
	add();
	store_base();
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x28);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);

L03700:
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L0376a);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03749);
	jc(0x1);
	push_base_offset(0x28);
	push_byte(0x3);
	push_byte(0x4);
	mul();
	memclr();
	push_offset(L03784);
	jmp();

L03749:
	push_base_offset(0x28);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);

L0376a:
	push_base_offset(0x2c);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L03700);
	jc(0x0);

L03784:
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L037e3);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	load(0x2);
	push_base_offset(0x28);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L037e3);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	load(0x2);
	push_base_offset(0x28);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L037e3);
	jc(0x0);
	push_offset(L03a89);
	jmp();

L037e3:
	push_base_offset(0x1c);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x18);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	push_base_offset(0x28);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	push_base_offset(0x28);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	push_base_offset(0x28);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_dword(0x43f0c);
	load(0x2);
	call();
	push_base_offset(0x1c);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L03881);
	jc(0x1);
	push_word(0x700);
	sys1(0x18);

L03881:
	push_word(0x7e0);
	sys1(0x18);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03989);
	jc(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_dword(0x44050);
	load(0x2);
	call();
	push_base_offset(0x10);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);

L038c5:
	push_base_offset(0x10);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x28);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L0396f);
	jc(0x1);
	push_dword(0x42a94);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp3(0x8e);
	push_word(0xb2c);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x42a94);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp2(0x8d);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);

L0396f:
	push_base_offset(0x2c);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L038c5);
	jc(0x0);

L03989:
	push_base_offset(0x34);
	load(0x2);
	push_dword(0x43f00);
	load(0x2);
	call();
	push_base_offset(0x34);
	move_arg(0x2);
	sys1(0x17);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_byte(0x0);
	push_base_offset(0x34);
	load(0x2);
	ternary();
	push_base_offset(0x34);
	move_arg(0x2);
	push_word(0x900);
	push_base_offset(0x1c);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_word(0x904);
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_word(0x908);
	push_base_offset(0x14);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x0);
	push_offset(L072c6);
	call();
	push_word(0x900);
	push_byte(0x0);
	move(0x2);
	push_word(0x904);
	push_byte(0x0);
	move(0x2);
	push_word(0x908);
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_offset(L03a58);
	jc(0x0);
	push_dword(0x42aa8);
	load(0x2);
	push_byte(0x0);
	grp1(0x31);
	push_dword(0x9fab8);
	push_dword(0x25e0c);
	add();
	push_byte(0x0);
	move(0x2);

L03a58:
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_offset(L03a6e);
	jc(0x0);
	push_byte(0x0);
	push_offset(L003e5);
	call();

L03a6e:
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_byte(0x40);
	memclr();
	push_dword(0x45bd0);
	push_byte(0x40);
	memclr();
	push_word(0x7e0);
	sys1(0x19);

L03a89:
	push_byte(0x0);
	load_base();
	push_byte(0x34);
	sub();
	store_base();
	ret();

L03a91:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x96);
	push_offset(L036c4);
	call();
	push_byte(0x0);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L03aa5:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L036c4);
	call();
	push_byte(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L03ac8:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);

L03aee:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x3);
	geq();
	push_offset(L03b28);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L03aee);
	jmp();

L03b28:
	push_base_offset(0x8);
	load(0x2);
	push_offset(L0331d);
	call();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L03b37:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);

L03b5d:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x3);
	geq();
	push_offset(L03b97);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L03b5d);
	jmp();

L03b97:
	push_base_offset(0x8);
	load(0x2);
	push_offset(L036c4);
	call();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_dword(0x43f00);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_offset(L03c09);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x1a544);
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a544);
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a544);
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);

L03c09:
	push_byte(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_dword(0x43f00);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_offset(L03c74);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x1a544);
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a544);
	add();
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a544);
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);

L03c74:
	push_byte(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L03c7c:
	load_base();
	push_word(0x94);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x90);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_dword(0x43f00);
	load(0x2);
	call();
	push_base_offset(0x8c);
	move_arg(0x2);
	push_base_offset(0x90);
	load(0x2);
	push_byte(0x7d);
	push_dword(0x27100);
	push_byte(0x1);
	add();
	push_string("拡大倍率");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0441a);
	jc(0x1);
	push_base_offset(0x84);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x88);
	push_dword(0x42a94);
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_word(0xb2c);
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L0441a);
	jc(0x0);
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L03d64);
	jc(0x1);
	push_base_offset(0x80);
	push_byte(0x1c);
	move(0x2);
	push_base_offset(0x7c);
	push_word(0x11b);
	move(0x2);
	push_base_offset(0x78);
	push_byte(0x2c);
	move(0x2);
	push_base_offset(0x74);
	push_byte(0xf);
	move(0x2);
	push_base_offset(0x70);
	push_byte(0x1a);
	push_byte(0x20);
	mul();
	push_byte(0x64);
	div();
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0xb);
	push_byte(0x1a);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	move(0x2);
	push_base_offset(0x68);
	push_byte(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x20);
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x8);
	add();
	move(0x2);
	push_offset(L03e8e);
	jmp();

L03d64:
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L03dc6);
	jc(0x1);
	push_base_offset(0x80);
	push_word(0x362);
	move(0x2);
	push_base_offset(0x7c);
	push_word(0x149);
	move(0x2);
	push_base_offset(0x78);
	push_byte(0x1a);
	move(0x2);
	push_base_offset(0x74);
	push_byte(0xf);
	move(0x2);
	push_base_offset(0x70);
	push_byte(0x1a);
	push_byte(0x20);
	mul();
	push_byte(0x64);
	div();
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0xb);
	push_byte(0x1a);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	move(0x2);
	push_base_offset(0x68);
	push_byte(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x20);
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x8);
	add();
	move(0x2);
	push_offset(L03e8e);
	jmp();

L03dc6:
	push_base_offset(0x80);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x7c);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x78);
	push_dword(0x9fab8);
	push_dword(0x220f8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x74);
	push_dword(0x9fab8);
	push_dword(0x220f8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x70);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	load(0x2);
	move(0x2);
	push_string("sysprg.arc");
	push_string("msgwndctrl._bp");
	sys1(0x40);
	push_base_offset(0x64);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22110);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22108);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2210c);
	add();
	load(0x2);
	push_byte(0x7);
	push_base_offset(0x64);
	load(0x2);
	call();
	push_base_offset(0x68);
	move_arg(0x2);
	push_base_offset(0x6c);
	move_arg(0x2);
	sys1(0x41);

L03e8e:
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x0);
	grp3(0x88);
	push_word(0xebb);
	push_base_offset(0x88);
	load(0x2);
	grp1(0x83);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03fd1);
	jc(0x1);
	push_base_offset(0x88);
	load(0x2);
	grp2(0x8d);
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x94);
	move_arg(0x2);
	push_base_offset(0x88);
	load(0x2);
	grp2(0x8e);
	push_base_offset(0x94);
	move_arg(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x74);
	load(0x2);
	eq();
	push_base_offset(0x48);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x24600);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	mul();
	push_byte(0x64);
	div();
	push_byte(0x2);
	mul();
	add();
	push_base_offset(0x6c);
	load(0x2);
	ternary();
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x94);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x24600);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x24600);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	push_base_offset(0x70);
	load(0x2);
	add();
	add();
	ternary();
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x48);
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_base_offset(0x44);
	push_base_offset(0x74);
	load(0x2);
	move(0x2);
	push_offset(L04110);
	jmp();

L03fd1:
	push_base_offset(0x88);
	load(0x2);
	grp2(0x8d);
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x94);
	move_arg(0x2);
	push_base_offset(0x88);
	load(0x2);
	grp2(0x8e);
	push_base_offset(0x94);
	move_arg(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x24600);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	push_base_offset(0x48);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x24600);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	mul();
	push_byte(0x64);
	div();
	push_byte(0x2);
	mul();
	add();
	push_base_offset(0x6c);
	load(0x2);
	ternary();
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x94);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x24600);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x24600);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	push_base_offset(0x70);
	load(0x2);
	add();
	add();
	ternary();
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x48);
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_base_offset(0x44);
	push_dword(0x9fab8);
	push_dword(0x24600);
	add();
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);

L04110:
	push_word(0xebc);
	push_word(0xebb);
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	grp1(0x1f);
	push_base_offset(0x60);
	push_word(0xebc);
	grp1(0x16);
	push_word(0xed0);
	push_base_offset(0x60);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x60);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x60);
	push_byte(0x10);
	add();
	load(0x2);
	grp1(0x11);
	push_word(0xed0);
	push_byte(0x0);
	grp1(0x13);
	push_word(0xebb);
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_word(0xed0);
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_word(0xed0);
	grp1(0x12);
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x1);
	grp3(0x88);
	grp1(0x50);
	push_base_offset(0x38);
	move_arg(0x2);
	grp1(0x50);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x0);
	leq();
	push_offset(L041c4);
	jc(0x0);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x24);
	push_byte(0x0);
	move(0x2);
	push_offset(L041d2);
	jmp();

L041c4:
	push_offset(L0744d);
	call();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);

L041d2:
	push_base_offset(0x30);
	push_base_offset(0x80);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	add();
	push_base_offset(0x40);
	load(0x2);
	add();
	push_word(0x500);
	push_byte(0x1);
	sar();
	sub();
	push_base_offset(0x28);
	load(0x2);
	add();
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x7c);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	add();
	push_base_offset(0x3c);
	load(0x2);
	add();
	push_word(0x2d0);
	push_byte(0x1);
	sar();
	sub();
	push_base_offset(0x24);
	load(0x2);
	add();
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x48);
	push_base_offset(0x80);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x44);
	push_base_offset(0x7c);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_word(0xebb);
	push_byte(0x20);
	push_byte(0x0);
	push_word(0x7d0);
	grp1(0x56);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x1);
	grp1(0x54);
	push_base_offset(0x34);
	load(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x10);
	shl();
	push_word(0xebc);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x10);
	shl();
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x20);
	push_byte(0x0);
	push_word(0x7e0);
	grp1(0x5c);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x1);
	grp1(0x54);
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x0);
	grp3(0x8c);
	push_base_offset(0x20);
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x30);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x2c);
	load(0x2);
	move(0x2);
	push_base_offset(0x90);
	load(0x2);
	push_word(0x2710);
	geq();
	push_base_offset(0x90);
	load(0x2);
	push_word(0x2710);
	sub();
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	mul();
	push_word(0x2710);
	div();
	push_byte(0x10);
	shl();
	not();
	push_byte(0x1);
	add();
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	push_word(0x2710);
	mul();
	push_base_offset(0x90);
	load(0x2);
	div();
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	sub();
	push_byte(0x10);
	shl();
	ternary();
	push_base_offset(0x20);
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x90);
	load(0x2);
	push_word(0x2710);
	lt();
	push_base_offset(0x20);
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	lt();
	bool_and();
	push_word(0x7fff);
	push_byte(0x10);
	shl();
	push_base_offset(0x20);
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x20);
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x20);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x30);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x2c);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	push_byte(0x10);
	shl();
	move(0x2);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x20);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x8c);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	push_word(0x710);
	grp1(0x29);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x1);
	grp3(0x8c);
	push_base_offset(0x38);
	load(0x2);
	grp1(0x51);
	push_base_offset(0x34);
	load(0x2);
	grp1(0x51);
	push_word(0xebb);
	grp1(0x12);
	push_word(0xebc);
	grp1(0x12);

L0441a:
	push_byte(0x0);
	load_base();
	push_word(0x94);
	sub();
	store_base();
	ret();

L04423:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x2);
	push_string("メッセージ出力スタイル");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L047fc);
	jc(0x1);
	push_word(0x8fc);
	push_byte(0x1);
	move(0x2);
	push_word(0x96);
	push_dword(0x44060);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04635);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_byte(0x1a);
	eq();
	push_offset(L044da);
	jc(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x2);
	grp1(0xe);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x400);
	grp1(0xe);

L044da:
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x0);
	add();
	push_word(0x118);
	push_byte(0x10);
	sub();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x4);
	add();
	push_word(0x252);
	push_dword(0x483c8);
	load(0x2);
	sub();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f8);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f8);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	push_byte(0x1a);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	push_dword(0x483c4);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22108);
	add();
	push_byte(0x1c);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2210c);
	add();
	push_byte(0x3);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22110);
	add();
	push_dword(0x483c8);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	push_word(0x110);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	push_word(0x22c);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	push_byte(0x1a);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	push_byte(0x1a);
	move(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	push_byte(0x64);
	move(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	push_byte(0x0);
	move(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0xa);
	move(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	push_byte(0xa);
	move(0x0);
	push_offset(L047e6);
	jmp();

L04635:
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_byte(0x1c);
	eq();
	push_offset(L04690);
	jc(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x2);
	grp1(0xe);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x1c);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x400);
	grp1(0xe);

L04690:
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x0);
	add();
	push_word(0xc8);
	push_byte(0x10);
	sub();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x4);
	add();
	push_byte(0x78);
	push_dword(0x483c8);
	load(0x2);
	sub();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f8);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f8);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	push_byte(0x1c);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	push_dword(0x483c4);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22108);
	add();
	push_byte(0x22);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2210c);
	add();
	push_byte(0xf);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22110);
	add();
	push_dword(0x483c8);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	push_word(0x110);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	push_word(0x22c);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	push_byte(0x1a);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	push_byte(0x1c);
	move(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	push_byte(0x64);
	move(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	push_byte(0x0);
	move(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0xa);
	move(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	push_byte(0xa);
	move(0x0);

L047e6:
	push_dword(0x9fab8);
	push_dword(0x220e0);
	add();
	load(0x2);
	push_offset(L047fc);
	jc(0x0);
	push_offset(L05698);
	call();

L047fc:
	push_byte(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L04804:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_byte(0x3);
	push_string("メッセージスインギングスタイル");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0487a);
	jc(0x1);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_dword(0x42a94);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	grp2(0x8b);
	push_dword(0x9fab8);
	push_dword(0x2212c);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);

L0487a:
	push_byte(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L04882:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x4);
	push_string("ウィンドウカラー");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L048ad);
	jc(0x1);

L048ad:
	push_byte(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L048b5:
	load_base();
	push_word(0x114);
	add();
	store_base();
	push_dword(0x44000);
	load(0x2);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04935);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L04935);
	jc(0x1);
	push_base_offset(0x110);
	push_base_offset(0x10);
	load(0x2);
	cmd_6a();
	push_base_offset(0x110);
	cmd_6d();
	push_string("data02xxx.arc");
	push_base_offset(0x110);
	push_dword(0x43f54);
	load(0x2);
	call();
	push_offset(L04a3c);
	jc(0x1);
	push_byte(0x0);
	push_base_offset(0x110);
	sys1(0xdc);
	push_base_offset(0x4);
	move_arg(0x2);

L04935:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e4);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0xc);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	bool_and();
	push_offset(L04a3c);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	lt();
	push_dword(0x9fab8);
	push_dword(0x220e4);
	add();
	load(0x2);
	push_byte(0x0);
	lt();
	bool_and();
	push_offset(L04a3c);
	jc(0x0);
	push_word(0x8fc);
	push_byte(0x1);
	move(0x2);
	push_word(0x96);
	push_dword(0x44060);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x220e4);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L04a01);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_offset(L04a26);
	jmp();

L04a01:
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	push_word(0x223);
	move(0x2);

L04a26:
	push_dword(0x9fab8);
	push_dword(0x220e0);
	add();
	load(0x2);
	push_offset(L04a3c);
	jc(0x0);
	push_offset(L05698);
	call();

L04a3c:
	push_byte(0x0);
	load_base();
	push_word(0x114);
	sub();
	store_base();
	ret();

L04a45:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0xd4);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	bool_and();
	push_dword(0x9fab8);
	push_word(0xd4);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	bool_or();
	bool_zero();
	bool_or();
	push_offset(L04ae6);
	jc(0x0);
	push_dword(0x9fab8);
	push_word(0xd4);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_word(0x96);
	push_byte(0x0);
	ternary();
	push_offset(L05887);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_dword(0x42aa0);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x22);
	push_byte(0x5);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);

L04ae6:
	push_byte(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L04aee:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22194);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	bool_and();
	push_dword(0x9fab8);
	push_dword(0x22194);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	bool_or();
	bool_zero();
	bool_or();
	push_offset(L04b75);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x22194);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_string("sysprg.arc");
	push_string("msgwndctrl._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22124);
	add();
	load(0x2);
	push_byte(0x5);
	push_base_offset(0x4);
	load(0x2);
	call();
	sys1(0x41);

L04b75:
	push_byte(0x0);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L04b7d:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);

L04b89:
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L04b89);
	jc(0x0);
	push_base_offset(0xc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x3);
	push_string("メッセージウィンドウターゲット");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L04d28);
	jc(0x1);
	push_base_offset(0x14);
	push_byte(0x1);
	move(0x2);

L04bdf:
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x3);
	geq();
	push_offset(L04c9b);
	jc(0x0);
	push_base_offset(0xc);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x3);
	push_string("メッセージウィンドウターゲット");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L04d28);
	jc(0x1);
	push_base_offset(0xc);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L04c8a);
	jc(0x1);
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);

L04c2f:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	geq();
	push_offset(L04c8a);
	jc(0x0);
	push_base_offset(0xc);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0xc);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	eq();
	push_offset(L04c79);
	jc(0x1);
	push_base_offset(0xc);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L04c8a);
	jmp();

L04c79:
	push_base_offset(0x10);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L04c2f);
	jmp();

L04c8a:
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L04bdf);
	jmp();

L04c9b:
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L04d14);
	jc(0x0);
	push_word(0xb2c);
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L04d14);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0xb3c);
	push_byte(0x1);
	move(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_offset(L005f1);
	call();
	push_word(0xb3c);
	push_byte(0x0);
	move(0x2);

L04d14:
	push_dword(0x9fab8);
	push_dword(0x25e14);
	add();
	push_base_offset(0xc);
	push_byte(0x3);
	push_byte(0x4);
	mul();
	memcpy();

L04d28:
	push_byte(0x0);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L04d30:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_word(0xc8);
	push_byte(0x1);
	add();
	push_string("行間");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L04d94);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("msgwndctrl._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_byte(0xa);
	push_base_offset(0x4);
	load(0x2);
	call();
	sys1(0x41);
	push_dword(0x483c4);
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L04d94:
	push_byte(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L04d9c:
	load_base();
	push_byte(0x1c);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x1c);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x18);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x14);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x8);
	push_word(0xc8);
	push_byte(0x1);
	add();
	push_string("フォントサイズ");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L050f9);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	push_word(0xc8);
	push_byte(0x1);
	add();
	push_string("ルビのフォントサイズ");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L050f9);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_word(0xc8);
	push_byte(0x1);
	add();
	push_string("行間");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L050f9);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	push_word(0xc8);
	push_byte(0x1);
	add();
	push_string("1行の文字数");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L050f9);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_word(0xc8);
	push_byte(0x1);
	add();
	push_string("行数");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L050f9);
	jc(0x1);
	push_base_offset(0x1c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	sub();
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	eq();
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x14);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x10);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22110);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0xc);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22108);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2210c);
	add();
	load(0x2);
	eq();
	bool_and();
	push_offset(L050f9);
	jc(0x0);
	push_word(0x8fc);
	push_byte(0x1);
	move(0x2);
	push_word(0x96);
	push_dword(0x44060);
	load(0x2);
	call();
	push_base_offset(0x14);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	eq();
	push_offset(L04fc0);
	jc(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x2);
	grp1(0xe);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x400);
	grp1(0xe);

L04fc0:
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x1c);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x18);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22110);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22108);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2210c);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	push_byte(0x64);
	move(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	push_byte(0x0);
	move(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x2);
	push_byte(0x64);
	mul();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	sub();
	add();
	push_base_offset(0x14);
	load(0x2);
	div();
	move(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	push_byte(0x2);
	push_byte(0x64);
	mul();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	sub();
	add();
	push_base_offset(0x14);
	load(0x2);
	div();
	move(0x0);
	push_dword(0x9fab8);
	push_dword(0x220e0);
	add();
	load(0x2);
	push_offset(L050f9);
	jc(0x0);
	push_offset(L05698);
	call();

L050f9:
	push_byte(0x0);
	load_base();
	push_byte(0x1c);
	sub();
	store_base();
	ret();

L05101:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	push_word(0xc8);
	push_byte(0x1);
	add();
	push_string("フォントサイズ");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L051f4);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	eq();
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	load(0x2);
	eq();
	bool_and();
	push_offset(L051f4);
	jc(0x0);
	push_word(0x8fc);
	push_byte(0x1);
	move(0x2);
	push_word(0x96);
	push_dword(0x44060);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e0);
	add();
	load(0x2);
	push_offset(L051f4);
	jc(0x0);
	push_offset(L05698);
	call();

L051f4:
	push_byte(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L051fc:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	push_word(0xc8);
	push_byte(0x1);
	add();
	push_string("フォントサイズ");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L05258);
	jc(0x1);
	push_dword(0x483c8);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0x483cc);
	load(0x2);
	push_dword(0x483d0);
	load(0x2);
	grp3(0x97);

L05258:
	push_byte(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L05260:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("ルビカラー（赤）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0531b);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("ルビカラー（緑）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0531b);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("ルビカラー（青）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0531b);
	jc(0x1);
	push_dword(0x483cc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	shl();
	or();
	push_base_offset(0x4);
	load(0x2);
	or();
	move(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_dword(0x483c8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0x483cc);
	load(0x2);
	push_dword(0x483d0);
	load(0x2);
	grp3(0x97);

L0531b:
	push_byte(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L05323:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("ルビ枠カラー（赤）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L053de);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("ルビ枠カラー（緑）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L053de);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_string("ルビ枠カラー（青）");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L053de);
	jc(0x1);
	push_dword(0x483d0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	shl();
	or();
	push_base_offset(0x4);
	load(0x2);
	or();
	move(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_dword(0x483c8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0x483cc);
	load(0x2);
	push_dword(0x483d0);
	load(0x2);
	grp3(0x97);

L053de:
	push_byte(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L053e6:
	load_base();
	push_word(0x11c);
	add();
	store_base();
	push_dword(0x44000);
	load(0x2);
	call();
	push_base_offset(0x18);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x14);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x2);
	push_byte(0x20);
	push_byte(0x1);
	add();
	push_string("パターン数");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0568f);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	push_dword(0xea60);
	push_string("切り替え間隔");
	push_dword(0x44004);
	load(0x2);
	call();
	push_offset(L0568f);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L054b8);
	jc(0x1);
	push_base_offset(0x18);
	load(0x2);
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L054b8);
	jc(0x1);
	push_base_offset(0x118);
	push_base_offset(0x18);
	load(0x2);
	cmd_6a();
	push_base_offset(0x118);
	cmd_6d();
	push_string("data02xxx.arc");
	push_base_offset(0x118);
	push_dword(0x43f54);
	load(0x2);
	call();
	push_offset(L0568f);
	jc(0x1);
	push_byte(0x0);
	push_base_offset(0x118);
	sys1(0xdc);
	push_base_offset(0x4);
	move_arg(0x2);

L054b8:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2217c);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x14);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22180);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x10);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22184);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0xc);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	bool_and();
	push_offset(L0568f);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	lt();
	push_dword(0x9fab8);
	push_dword(0x2217c);
	add();
	load(0x2);
	push_byte(0x0);
	lt();
	bool_and();
	push_offset(L0568f);
	jc(0x0);
	push_word(0x8fc);
	push_byte(0x1);
	move(0x2);
	push_word(0x96);
	push_dword(0x44060);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x2217c);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L055d0);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22180);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22184);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_offset(L05679);
	jmp();

L055d0:
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L05631);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22180);
	add();
	push_byte(0x8);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22184);
	add();
	push_word(0xbb8);
	push_byte(0x8);
	div();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x0);
	add();
	push_word(0x40f);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x4);
	add();
	push_word(0x299);
	move(0x2);
	push_offset(L05679);
	jmp();

L05631:
	push_dword(0x9fab8);
	push_dword(0x22180);
	add();
	push_byte(0x8);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22184);
	add();
	push_word(0xbb8);
	push_byte(0x8);
	div();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x0);
	add();
	push_word(0x456);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x4);
	add();
	push_word(0x288);
	move(0x2);

L05679:
	push_dword(0x9fab8);
	push_dword(0x220e0);
	add();
	load(0x2);
	push_offset(L0568f);
	jc(0x0);
	push_offset(L05698);
	call();

L0568f:
	push_byte(0x0);
	load_base();
	push_word(0x11c);
	sub();
	store_base();
	ret();

L05698:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_word(0x8fc);
	push_byte(0x1);
	move(0x2);
	push_word(0x96);
	push_dword(0x44060);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L056d2);
	jc(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_dword(0x44050);
	load(0x2);
	call();

L056d2:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L056d9:
	push_byte(0x4f);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0x43fc0);
	load(0x2);
	call();
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L056d9);
	jc(0x0);
	push_word(0x7e0);
	push_byte(0x1);
	move(0x2);
	push_word(0xbbc);
	load(0x2);
	push_offset(L0572e);
	jc(0x0);
	push_word(0xbac);
	load(0x2);
	push_offset(L0572e);
	jc(0x0);
	push_dword(0x43f08);
	load(0x2);
	call();
	push_offset(L0574b);
	jmp();

L0572e:
	push_word(0x7dc);
	push_byte(0x1);
	move(0x2);

L05735:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L0580d);
	jc(0x0);
	push_word(0x7dc);
	load(0x2);
	push_offset(L05735);
	jc(0x0);

L0574b:
	push_dword(0x9fab8);
	push_dword(0x22130);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L05761:
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_dword(0x9fab8);
	push_dword(0x235d4);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x42a94);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp2(0x8d);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L05761);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x2212c);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L0580d);
	jc(0x1);
	push_byte(0x0);
	push_dword(0x43fec);
	load(0x2);
	call();
	push_offset(L04804);
	call();

L0580d:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L05813:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_dword(0x43ffc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L05857);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x220e0);
	add();
	load(0x2);
	push_offset(L0587f);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x220e0);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_offset(L0587f);
	jmp();

L05857:
	push_dword(0x9fab8);
	push_dword(0x220e0);
	add();
	load(0x2);
	push_offset(L0587f);
	jc(0x1);
	push_offset(L05698);
	call();
	push_dword(0x9fab8);
	push_dword(0x220e0);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);

L0587f:
	push_byte(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L05887:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L058ab);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_offset(L058c7);
	jmp();

L058ab:
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L058c7);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);

L058c7:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L058d7:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x7);
	add();
	eq();
	push_offset(L05c2d);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x6);
	add();
	eq();
	push_offset(L05c2d);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x16);
	add();
	eq();
	push_offset(L05c2d);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L05c2d);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x8);
	add();
	eq();
	push_offset(L05a86);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	add();
	eq();
	push_offset(L059f9);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x3);
	add();
	eq();
	push_offset(L05a57);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xc);
	add();
	eq();
	push_offset(L05a28);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xf);
	add();
	eq();
	push_offset(L05ab5);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x12);
	add();
	eq();
	push_offset(L05ae4);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x17);
	add();
	eq();
	push_offset(L05b13);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1b);
	add();
	eq();
	push_offset(L05b42);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1e);
	add();
	eq();
	push_offset(L05b71);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x21);
	add();
	eq();
	push_offset(L05ba0);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x24);
	add();
	eq();
	push_offset(L05bcf);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x27);
	add();
	eq();
	push_offset(L05bfe);
	jc(0x0);
	push_offset(L05c9d);
	jmp();
	push_offset(L05c2d);
	jmp();

L059f9:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x51c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x51c);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05a28:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	load(0x2);
	add();
	move(0x2);
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x520);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05a57:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x524);
	load(0x2);
	add();
	move(0x2);
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x524);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05a86:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x528);
	load(0x2);
	add();
	move(0x2);
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x528);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05ab5:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x52c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x52c);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05ae4:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x530);
	load(0x2);
	add();
	move(0x2);
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x530);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05b13:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x534);
	load(0x2);
	add();
	move(0x2);
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x534);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05b42:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x538);
	load(0x2);
	add();
	move(0x2);
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x538);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05b71:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x53c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x53c);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05ba0:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x540);
	load(0x2);
	add();
	move(0x2);
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x540);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05bcf:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x544);
	load(0x2);
	add();
	move(0x2);
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x544);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05bfe:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x548);
	load(0x2);
	add();
	move(0x2);
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x548);
	move_arg(0x2);
	push_offset(L05c2d);
	jmp();

L05c2d:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L05c68);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	geq();
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L05c68);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	snd1(0x26);

L05c68:
	push_base_offset(0x8);
	load(0x2);
	push_word(0x80);
	push_byte(0x40);
	snd1(0x24);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x49c);
	load(0x2);
	ternary();
	push_word(0x49c);
	move_arg(0x2);

L05c9d:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L05ca8:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0xc);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L05d07);
	jc(0x1);
	push_base_offset(0x10);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	cmd_0c(0x2, 0x4);
	push_dword(0x42768);
	push_byte(0xc);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x10);
	sys1(0x4a);

L05d07:
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L05d0d:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L05d28:
	push_base_offset(0x4);
	push_word(0x930);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L05d85);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_offset(L05d9f);
	jmp();

L05d85:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L05d28);
	jc(0x0);

L05d9f:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L05da5:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L05db6:
	push_base_offset(0x4);
	push_word(0x930);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L05e05);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L05ca8);
	call();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	memclr();

L05e05:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L05db6);
	jc(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L05e25:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9b8);
	load(0x2);
	push_offset(L05e64);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x2);
	push_dword(-0x3);
	push_offset(L05d0d);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L05da5);
	call();
	push_word(0x9b8);
	push_byte(0x1);
	move(0x2);

L05e64:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L05e6a:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9bc);
	load(0x2);
	push_offset(L05ea9);
	jc(0x0);
	push_byte(0x1);
	push_byte(0x3);
	push_dword(-0x3);
	push_offset(L05d0d);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L05da5);
	call();
	push_word(0x9bc);
	push_byte(0x1);
	move(0x2);

L05ea9:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L05eaf:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9b8);
	load(0x2);
	push_offset(L05ef1);
	jc(0x1);
	push_dword(-0x1);
	push_byte(0x2);
	push_dword(-0x3);
	push_offset(L05d0d);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L05da5);
	call();
	push_word(0x9b8);
	push_byte(0x0);
	move(0x2);

L05ef1:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L05ef7:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9bc);
	load(0x2);
	push_offset(L05f39);
	jc(0x1);
	push_dword(-0x1);
	push_byte(0x3);
	push_dword(-0x3);
	push_offset(L05d0d);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L05da5);
	call();
	push_word(0x9bc);
	push_byte(0x0);
	move(0x2);

L05f39:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L05f5b);
	jc(0x1);
	push_offset(L05e25);
	call();
	push_offset(L05f5f);
	jmp();

L05f5b:
	push_offset(L05eaf);
	call();

L05f5f:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L05f81);
	jc(0x1);
	push_offset(L05e6a);
	call();
	push_offset(L05f85);
	jmp();

L05f81:
	push_offset(L05ef7);
	call();

L05f85:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L05f9c:
	push_base_offset(0x4);
	push_word(0x92c);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L05fe4);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L05fe4);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	grp2(0x31);

L05fe4:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L05f9c);
	jc(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L06004:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x3b90);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L06026:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L06086);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L06091);
	call();
	push_offset(L06086);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0611b);
	call();
	push_offset(L06086);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L06086:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L06091:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06110);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L06110);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L06110);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06110);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L06110:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0611b:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0619a);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0619a);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L0619a);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0619a);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L0619a:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L061a5:
	load_base();
	push_word(0x120);
	add();
	store_base();
	push_base_offset(0x11c);
	move_arg(0x2);
	push_base_offset(0x120);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06285);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06285);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x118);
	push_dword(0x40000002);
	push_base_offset(0x120);
	load(0x2);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x4);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x118);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L06238:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06285);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L06238);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000000);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000001);
	eq();
	bool_or();
	push_offset(L06285);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("ウィンク開始要求時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L06285:
	load_base();
	push_word(0x120);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0629d:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L062bf);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L062d0);
	jc(0x1);

L062bf:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L061a5);
	call();

L062d0:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1f);
	lt();
	push_word(0xb9c);
	load(0x2);
	bool_zero();
	bool_or();
	bool_and();
	push_offset(L0629d);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L06300:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06350);
	jc(0x1);
	push_base_offset(0xc);
	push_dword(0x40000003);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0xc);
	sys1(0x4a);

L06350:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x227a0);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x118);
	add();
	store_base();
	push_base_offset(0x118);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06438);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_dword(0x445b4);
	push_base_offset(0x118);
	load(0x2);
	cmd_6a();
	push_dword(0x40000004);
	push_base_offset(0x114);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x445b4);
	push_base_offset(0x114);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x108);
	load(0x2);
	push_base_offset(0x114);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x114);
	sys1(0x4a);

L063eb:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06438);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L063eb);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000002);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000003);
	eq();
	bool_or();
	push_offset(L06438);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("音声再生時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L06438:
	load_base();
	push_word(0x118);
	sub();
	store_base();
	ret();

L0643f:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06470);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x40000005);
	sys1(0x48);

L06470:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L06487:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L064a9);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L064ba);
	jc(0x1);

L064a9:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L06300);
	call();

L064ba:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L06487);
	jc(0x0);
	push_offset(L0643f);
	call();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L064df:
	sys1(0x5f);

L064e1:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L06503);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L06519);
	jc(0x1);

L06503:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L06026);
	call();
	push_offset(L064df);
	jc(0x0);

L06519:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L064e1);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L06539:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0657f);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x40000001);
	push_base_offset(0xc);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x8);
	sys1(0x4a);

L0657f:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L06585:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L06596:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	eq();
	push_offset(L065ee);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L065f7);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L065ee);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L065f7);
	jc(0x1);

L065ee:
	push_base_offset(0x4);
	load(0x2);
	push_offset(L06539);
	call();

L065f7:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L06596);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L06618:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L066c0);
	jc(0x0);

L06624:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	eq();
	push_offset(L0667c);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L066a6);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0667c);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L066a6);
	jc(0x1);

L0667c:
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L06004);
	call();
	push_offset(L06618);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x1b4d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x94);
	mul();
	add();
	push_word(0x94);
	memclr();

L066a6:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L06624);
	jc(0x0);

L066c0:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L066c6:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0671a);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L06004);
	call();
	push_offset(L0671a);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x40000007);
	push_base_offset(0xc);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x8);
	sys1(0x4a);

L0671a:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L06720:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L06744);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L066c6);
	call();
	push_offset(L067be);
	jmp();

L06744:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0674b:
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0678c);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L067a4);
	jc(0x1);

L0678c:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L066c6);
	call();
	push_byte(0x40);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L066c6);
	call();

L067a4:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L0674b);
	jc(0x0);

L067be:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L067e9);
	jc(0x0);

L067cb:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L06879);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L06004);
	call();
	push_offset(L067cb);
	jc(0x0);
	push_offset(L06879);
	jmp();

L067e9:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L067f0:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L06879);
	jc(0x0);

L067fc:
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0683d);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L0685f);
	jc(0x1);

L0683d:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L06004);
	call();
	push_offset(L067f0);
	jc(0x0);
	push_byte(0x40);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L06004);
	call();
	push_offset(L067f0);
	jc(0x0);

L0685f:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L067fc);
	jc(0x0);

L06879:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L06585);
	call();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L06720);
	call();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L0689e:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_offset(L0643f);
	call();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L068ae:
	sys1(0x5f);

L068b0:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L0611b);
	call();
	push_offset(L068ae);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L068b0);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x118);
	add();
	store_base();
	push_base_offset(0x118);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L069a9);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x114);
	push_dword(0x40000000);
	push_base_offset(0x118);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x114);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L0695c:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L069a9);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L0695c);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000004);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000005);
	eq();
	bool_or();
	push_offset(L069a9);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("スプライトアニメーション開始時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L069a9:
	load_base();
	push_word(0x118);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x150);
	add();
	store_base();
	push_base_offset(0x130);
	move_arg(0x2);
	push_base_offset(0x134);
	move_arg(0x2);
	push_base_offset(0x138);
	move_arg(0x2);
	push_base_offset(0x13c);
	move_arg(0x2);
	push_base_offset(0x140);
	move_arg(0x2);
	push_base_offset(0x144);
	move_arg(0x2);
	push_base_offset(0x148);
	move_arg(0x2);
	push_base_offset(0x14c);
	move_arg(0x2);
	push_base_offset(0x150);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06b02);
	jc(0x1);
	push_base_offset(0x138);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06b02);
	jc(0x1);
	push_base_offset(0x12c);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x20);
	sub();
	move(0x2);
	push_dword(0x8e1cc);
	push_base_offset(0x12c);
	load(0x2);
	push_word(0x8b0);
	mul();
	add();
	push_base_offset(0x138);
	load(0x2);
	push_word(0x8b0);
	memcpy();
	push_dword(0x9f7cc);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_base_offset(0x134);
	load(0x2);
	push_byte(0x10);
	memcpy();
	push_dword(0x9f9cc);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x130);
	load(0x2);
	move(0x2);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x128);
	push_dword(0x40000006);
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x144);
	load(0x2);
	push_base_offset(0x140);
	load(0x2);
	push_base_offset(0x13c);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x8);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x8);
	push_base_offset(0x128);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L06ab5:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L06b02);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L06ab5);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000006);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000007);
	eq();
	bool_or();
	push_offset(L06b02);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("スプライトアニメーション開始時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L06b02:
	load_base();
	push_word(0x150);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L06c0c);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_offset(L06720);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	neq();
	push_offset(L06b7d);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	grp2(0x1f);

L06b7d:
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memcpy();
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x514);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memclr();

L06c0c:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x1c);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L06e8f);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	neq();
	push_offset(L06c8c);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	grp2(0x1f);

L06c8c:
	push_word(0x3b90);
	push_base_offset(0x30);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memcpy();
	push_base_offset(0x10);
	push_word(0x3b90);
	push_base_offset(0x30);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);

L06cd5:
	push_base_offset(0x8);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	sys1(0x20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	grp2(0x1f);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	grp2(0x1f);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);

L06d61:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	lt();
	push_offset(L06d61);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x40);
	add();
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	lt();
	push_offset(L06cd5);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x2c);
	load(0x2);
	move(0x2);

L06e8f:
	push_base_offset(0x1c);
	load(0x2);
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L06ee1);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L06ee1:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L06f74);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x514);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L06f74:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L06fc7);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x50c);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L06fc7:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L07035);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L07035);
	jc(0x0);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_offset(L07040);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L07035:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L07040:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0705e);
	jc(0x1);
	push_word(0x720);
	sys1(0x18);

L0705e:
	push_word(0x504);
	load(0x2);
	push_offset(L070c3);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L070c3);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0708f);
	jc(0x1);
	sys1(0x17);
	push_offset(L070c3);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L070c3);
	jc(0x0);

L0708f:
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L070c3);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L070c3);
	jc(0x0);
	sys1(0x5f);
	push_offset(L0705e);
	jmp();

L070c3:
	push_base_offset(0x4);
	load(0x2);
	push_offset(L070d2);
	jc(0x1);
	push_word(0x720);
	sys1(0x19);

L070d2:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L070e7:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x900);
	load(0x2);
	push_offset(L07280);
	jc(0x1);
	push_word(0x8f8);
	load(0x2);
	push_offset(L07186);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);
	push_word(0x4fc);
	load(0x2);
	bool_zero();
	push_word(0x8fc);
	load(0x2);
	bool_and();
	push_offset(L0713e);
	jc(0x1);
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L0713e:
	push_word(0x9b4);
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L07186);
	jc(0x1);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L07186);
	jc(0x1);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L07186:
	push_dword(0x42aa8);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);
	push_word(0xb0c);
	load(0x2);
	push_offset(L071ff);
	jc(0x0);
	push_word(0xb74);
	load(0x2);
	push_offset(L071ff);
	jc(0x0);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L071ff);
	jc(0x1);
	push_dword(0x42a80);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L071e2);
	jc(0x1);
	push_dword(0x42a84);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L071e2:
	push_dword(0x42a88);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L071ff);
	jc(0x1);
	push_dword(0x42a88);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L071ff:
	push_word(0x8f8);
	load(0x2);
	push_offset(L07280);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L07232);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L07232:
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L07280);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L07280);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L07280:
	push_word(0x904);
	load(0x2);
	push_offset(L0729e);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L0729e:
	push_word(0x908);
	load(0x2);
	push_offset(L072bc);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L072bc:
	push_byte(0x0);
	grp1(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L072c6:
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_word(0x710);
	sys1(0x18);
	push_base_offset(0x24);
	push_byte(0x1);
	push_word(0x80);
	or();
	push_word(0x100);
	or();
	push_word(0x2000);
	or();
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	sys1(0x1c);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x1c);
	push_base_offset(0x34);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x18);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	add();
	move(0x2);

L07362:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L07442);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	sys1(0x1c);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	neq();
	push_base_offset(0x2c);
	load(0x2);
	bool_and();
	push_offset(L0742c);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	lt();
	push_offset(L07362);
	jc(0x0);
	push_base_offset(0x28);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	sub();
	push_base_offset(0x18);
	load(0x2);
	div();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	mul();
	add();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	leq();
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	mul();
	push_base_offset(0x14);
	load(0x2);
	div();
	add();
	push_offset(L070e7);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	lt();
	push_offset(L07362);
	jc(0x0);

L0742c:
	push_base_offset(0x34);
	load(0x2);
	push_offset(L070e7);
	call();
	push_word(0x3e8);
	push_word(0x3e8);
	div();
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);

L07442:
	push_word(0x710);
	sys1(0x19);
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();

L0744d:
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L07587);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L07587);
	jc(0x1);
	push_base_offset(0x30);
	push_word(0x400);
	push_byte(0x57);
	add();
	grp1(0x16);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	lt();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0xc);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x30);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	gt();
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x14);
	push_word(0x3c0);
	push_word(0x2d0);
	sub();
	push_base_offset(0x8);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	lt();
	push_word(0x2d0);
	push_base_offset(0x14);
	load(0x2);
	add();
	push_word(0x2d0);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	sar();
	add();
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);

L07587:
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L075c5);
	jc(0x1);
	push_base_offset(0x4);
	push_word(0x3c0);
	push_word(0x2d0);
	sub();
	move(0x2);

L075c5:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L07627);
	jc(0x1);
	push_byte(0x20);
	push_word(0x12e);
	add();
	load(0x1);
	push_byte(0x2);
	eq();
	push_offset(L07627);
	jc(0x1);
	push_base_offset(0x20);
	push_word(0x400);
	push_byte(0x5a);
	add();
	grp1(0x16);
	push_base_offset(0x4);
	push_word(0x2d0);
	push_base_offset(0x20);
	push_byte(0xc);
	add();
	load(0x2);
	sub();
	push_word(0x1c7);
	sub();
	move(0x2);

L07627:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();
