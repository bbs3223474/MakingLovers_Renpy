	load_base();
	push_byte(0x50);
	add();
	store_base();
	push_word(0x4f8);
	push_word(0x4f8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L00012:
	push_base_offset(0x50);
	sys1(0x49);
	push_offset(L00022);
	jc(0x0);
	sys1(0x5f);
	push_offset(L00012);
	jmp();

L00022:
	push_base_offset(0x4c);
	push_dword(0x227a4);
	push_base_offset(0x50);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00397);
	jc(0x1);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00397);
	jc(0x1);
	push_base_offset(0x48);
	push_base_offset(0x50);
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x44);
	push_dword(0x42868);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move(0x2);
	push_base_offset(0x40);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x3c);
	push_dword(0x2c864);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x44);
	load(0x2);
	load(0x2);
	push_byte(0x20);
	grp2(0x38);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x20);
	geq();
	push_offset(L000fc);
	jc(0x1);
	push_base_offset(0x30);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x1);
	sar();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	add();
	move(0x2);
	push_offset(L0011a);
	jmp();

L000fc:
	push_base_offset(0x30);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	move(0x2);

L0011a:
	push_base_offset(0x38);
	push_word(0x500);
	push_byte(0x1);
	sar();
	push_byte(0x10);
	shl();
	push_base_offset(0x30);
	load(0x2);
	push_byte(0x10);
	shl();
	sub();
	push_base_offset(0x10);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x34);
	push_word(0x2d0);
	push_byte(0x1);
	sar();
	push_byte(0x10);
	shl();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x10);
	shl();
	sub();
	push_base_offset(0x10);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	not();
	push_byte(0x1);
	add();
	move(0x2);
	sys1(0x4);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x18);
	push_base_offset(0x1c);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	add();
	move(0x2);

L00181:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L00383);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L00383);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L00383);
	jc(0x0);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00383);
	jc(0x1);
	sys1(0x4);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	leq();
	push_offset(L0020b);
	jc(0x1);
	push_base_offset(0x14);
	push_byte(0x1);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	sub();
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	add();
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	mul();
	add();
	move(0x2);

L0020b:
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L00181);
	jc(0x1);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0029a);
	jc(0x1);
	push_base_offset(0x28);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x20);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	add();
	ternary();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	lt();
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	mod();
	ternary();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x38);
	push_base_offset(0x28);
	load(0x2);
	move(0x2);

L0029a:
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0031c);
	jc(0x1);
	push_base_offset(0x28);
	push_base_offset(0x34);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x20);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	add();
	ternary();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	lt();
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	mod();
	ternary();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x34);
	push_base_offset(0x28);
	load(0x2);
	move(0x2);

L0031c:
	push_base_offset(0x44);
	load(0x2);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00383);
	jc(0x1);
	push_base_offset(0x44);
	load(0x2);
	load(0x2);
	push_word(0x500);
	push_byte(0x1);
	sar();
	push_byte(0x10);
	shl();
	push_base_offset(0x30);
	load(0x2);
	push_byte(0x10);
	shl();
	sub();
	push_base_offset(0x38);
	load(0x2);
	add();
	not();
	push_byte(0x1);
	add();
	push_word(0x2d0);
	push_byte(0x1);
	sar();
	push_byte(0x10);
	shl();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x10);
	shl();
	sub();
	push_base_offset(0x34);
	load(0x2);
	add();
	not();
	push_byte(0x1);
	add();
	push_byte(0x0);
	grp2(0x33);
	push_byte(0x0);
	grp1(0x0);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_offset(L0020b);
	jmp();

L00383:
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x14);
	memclr();
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x10);
	add();
	push_byte(0x2);
	move(0x2);

L00397:
	push_word(0x4f8);
	push_word(0x4f8);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	load_base();
	push_byte(0x50);
	sub();
	store_base();
	ret();
