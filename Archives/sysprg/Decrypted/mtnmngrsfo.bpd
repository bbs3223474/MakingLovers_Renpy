	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_word(0x4f8);
	push_word(0x4f8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L00012:
	push_base_offset(0x10);
	sys1(0x49);
	push_offset(L00022);
	jc(0x0);
	sys1(0x5f);
	push_offset(L00012);
	jmp();

L00022:
	push_base_offset(0xc);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x8);
	push_dword(0x227a4);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L001ac);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L001ac);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x138);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L000ed);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x128);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x12c);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x130);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x134);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x138);
	add();
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_word(0x710);
	grp1(0x28);

L000ed:
	push_word(0x4f4);
	load(0x2);
	push_offset(L001ac);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	push_offset(L035d9);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_offset(L0331e);
	call();
	push_offset(L001ac);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L0381d);
	call();
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0074c);
	call();
	push_dword(0x42868);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x51);
	push_byte(0x0);
	grp1(0x0);
	push_dword(0x42868);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L00163);
	jc(0x1);
	push_byte(0x2);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_offset(L0397c);
	call();

L00163:
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	add();
	grp1(0x12);
	push_base_offset(0x4);
	push_word(0x2000);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x20);
	mul();
	add();
	move(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);

L00185:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	add();
	grp1(0x12);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L00185);
	jc(0x0);

L001ac:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	add();
	push_byte(0x2);
	move(0x2);
	push_word(0x4f8);
	push_word(0x4f8);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L001cb:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x3b90);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L001ed:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0024d);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L00258);
	call();
	push_offset(L0024d);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L002e2);
	call();
	push_offset(L0024d);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0024d:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L00258:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L002d7);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L002d7);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L002d7);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L002d7);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L002d7:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L002e2:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00361);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00361);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00361);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00361);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L00361:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0036c:
	load_base();
	push_word(0x120);
	add();
	store_base();
	push_base_offset(0x11c);
	move_arg(0x2);
	push_base_offset(0x120);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0044c);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0044c);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x118);
	push_dword(0x40000002);
	push_base_offset(0x120);
	load(0x2);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x4);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x118);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L003ff:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0044c);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L003ff);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000000);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000001);
	eq();
	bool_or();
	push_offset(L0044c);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("ウィンク開始要求時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L0044c:
	load_base();
	push_word(0x120);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00464:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00486);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L00497);
	jc(0x1);

L00486:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0036c);
	call();

L00497:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1f);
	lt();
	push_word(0xb9c);
	load(0x2);
	bool_zero();
	bool_or();
	bool_and();
	push_offset(L00464);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L004c7:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00517);
	jc(0x1);
	push_base_offset(0xc);
	push_dword(0x40000003);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0xc);
	sys1(0x4a);

L00517:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x227a0);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x118);
	add();
	store_base();
	push_base_offset(0x118);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L005ff);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_dword(0x445b4);
	push_base_offset(0x118);
	load(0x2);
	cmd_6a();
	push_dword(0x40000004);
	push_base_offset(0x114);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x445b4);
	push_base_offset(0x114);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x108);
	load(0x2);
	push_base_offset(0x114);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x114);
	sys1(0x4a);

L005b2:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L005ff);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L005b2);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000002);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000003);
	eq();
	bool_or();
	push_offset(L005ff);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("音声再生時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L005ff:
	load_base();
	push_word(0x118);
	sub();
	store_base();
	ret();

L00606:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00637);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x40000005);
	sys1(0x48);

L00637:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0064e:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00670);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L00681);
	jc(0x1);

L00670:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L004c7);
	call();

L00681:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L0064e);
	jc(0x0);
	push_offset(L00606);
	call();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L006a6:
	sys1(0x5f);

L006a8:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L006ca);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L006e0);
	jc(0x1);

L006ca:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L001ed);
	call();
	push_offset(L006a6);
	jc(0x0);

L006e0:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L006a8);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L00700:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00746);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x40000001);
	push_base_offset(0xc);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x8);
	sys1(0x4a);

L00746:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0074c:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0075d:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	eq();
	push_offset(L007b5);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L007be);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L007b5);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L007be);
	jc(0x1);

L007b5:
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00700);
	call();

L007be:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L0075d);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L007df:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L00887);
	jc(0x0);

L007eb:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	eq();
	push_offset(L00843);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L0086d);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00843);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L0086d);
	jc(0x1);

L00843:
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L001cb);
	call();
	push_offset(L007df);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x1b4d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x94);
	mul();
	add();
	push_word(0x94);
	memclr();

L0086d:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L007eb);
	jc(0x0);

L00887:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0088d:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L008e1);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L001cb);
	call();
	push_offset(L008e1);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x40000007);
	push_base_offset(0xc);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x8);
	sys1(0x4a);

L008e1:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L008e7:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L0090b);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0088d);
	call();
	push_offset(L00985);
	jmp();

L0090b:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00912:
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00953);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L0096b);
	jc(0x1);

L00953:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L0088d);
	call();
	push_byte(0x40);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L0088d);
	call();

L0096b:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L00912);
	jc(0x0);

L00985:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L009b0);
	jc(0x0);

L00992:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L00a40);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L001cb);
	call();
	push_offset(L00992);
	jc(0x0);
	push_offset(L00a40);
	jmp();

L009b0:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L009b7:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L00a40);
	jc(0x0);

L009c3:
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00a04);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L00a26);
	jc(0x1);

L00a04:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L001cb);
	call();
	push_offset(L009b7);
	jc(0x0);
	push_byte(0x40);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L001cb);
	call();
	push_offset(L009b7);
	jc(0x0);

L00a26:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L009c3);
	jc(0x0);

L00a40:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L0074c);
	call();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L008e7);
	call();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_offset(L00606);
	call();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00a75:
	sys1(0x5f);

L00a77:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L002e2);
	call();
	push_offset(L00a75);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L00a77);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x118);
	add();
	store_base();
	push_base_offset(0x118);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00b70);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x114);
	push_dword(0x40000000);
	push_base_offset(0x118);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x114);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L00b23:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00b70);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L00b23);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000004);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000005);
	eq();
	bool_or();
	push_offset(L00b70);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("スプライトアニメーション開始時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L00b70:
	load_base();
	push_word(0x118);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x150);
	add();
	store_base();
	push_base_offset(0x130);
	move_arg(0x2);
	push_base_offset(0x134);
	move_arg(0x2);
	push_base_offset(0x138);
	move_arg(0x2);
	push_base_offset(0x13c);
	move_arg(0x2);
	push_base_offset(0x140);
	move_arg(0x2);
	push_base_offset(0x144);
	move_arg(0x2);
	push_base_offset(0x148);
	move_arg(0x2);
	push_base_offset(0x14c);
	move_arg(0x2);
	push_base_offset(0x150);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00cc9);
	jc(0x1);
	push_base_offset(0x138);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00cc9);
	jc(0x1);
	push_base_offset(0x12c);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x20);
	sub();
	move(0x2);
	push_dword(0x8e1cc);
	push_base_offset(0x12c);
	load(0x2);
	push_word(0x8b0);
	mul();
	add();
	push_base_offset(0x138);
	load(0x2);
	push_word(0x8b0);
	memcpy();
	push_dword(0x9f7cc);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_base_offset(0x134);
	load(0x2);
	push_byte(0x10);
	memcpy();
	push_dword(0x9f9cc);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x130);
	load(0x2);
	move(0x2);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x128);
	push_dword(0x40000006);
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x144);
	load(0x2);
	push_base_offset(0x140);
	load(0x2);
	push_base_offset(0x13c);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x8);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x8);
	push_base_offset(0x128);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L00c7c:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00cc9);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L00c7c);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000006);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000007);
	eq();
	bool_or();
	push_offset(L00cc9);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("スプライトアニメーション開始時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L00cc9:
	load_base();
	push_word(0x150);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L00dd3);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_offset(L008e7);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	neq();
	push_offset(L00d44);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	grp2(0x1f);

L00d44:
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memcpy();
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x514);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memclr();

L00dd3:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x1c);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L01056);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	neq();
	push_offset(L00e53);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	grp2(0x1f);

L00e53:
	push_word(0x3b90);
	push_base_offset(0x30);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memcpy();
	push_base_offset(0x10);
	push_word(0x3b90);
	push_base_offset(0x30);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);

L00e9c:
	push_base_offset(0x8);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	sys1(0x20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	grp2(0x1f);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	grp2(0x1f);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);

L00f28:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	lt();
	push_offset(L00f28);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x40);
	add();
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	lt();
	push_offset(L00e9c);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x2c);
	load(0x2);
	move(0x2);

L01056:
	push_base_offset(0x1c);
	load(0x2);
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L010a8);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L010a8:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0113b);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x514);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L0113b:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0118e);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x50c);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L0118e:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L011fc);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L011fc);
	jc(0x0);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_offset(L01207);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L011fc:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L01207:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L01225);
	jc(0x1);
	push_word(0x720);
	sys1(0x18);

L01225:
	push_word(0x504);
	load(0x2);
	push_offset(L0128a);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L0128a);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L01256);
	jc(0x1);
	sys1(0x17);
	push_offset(L0128a);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L0128a);
	jc(0x0);

L01256:
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0128a);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L0128a);
	jc(0x0);
	sys1(0x5f);
	push_offset(L01225);
	jmp();

L0128a:
	push_base_offset(0x4);
	load(0x2);
	push_offset(L01299);
	jc(0x1);
	push_word(0x720);
	sys1(0x19);

L01299:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L012ae:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);

L012cc:
	push_word(0x504);
	load(0x2);
	push_offset(L012f7);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L012f7);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L012f7);
	jc(0x1);
	sys1(0x5f);
	push_offset(L012cc);
	jmp();

L012f7:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L0130c:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x720);
	sys1(0x18);
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);

L0132f:
	push_word(0x504);
	load(0x2);
	push_offset(L0136b);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L0136b);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0136b);
	jc(0x1);
	sys1(0x17);
	push_offset(L0136b);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L0136b);
	jc(0x0);
	sys1(0x5f);
	push_offset(L0132f);
	jmp();

L0136b:
	push_word(0x720);
	sys1(0x19);
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L01385:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01429);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	geq();
	push_offset(L013ff);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	bool_or();
	push_offset(L013ff);
	jc(0x0);
	push_string("循環制御が行われているオブジェクトに対して待機要求が発行されました");
	cmd_79();
	push_offset(L01429);
	jmp();

L013ff:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0141b);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L012ae);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_offset(L01429);
	jmp();

L0141b:
	push_base_offset(0x10);
	load(0x2);
	push_offset(L0130c);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L01429:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L01434:
	load_base();
	push_word(0x1f8);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d8);
	move_arg(0x2);
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_base_offset(0x1e0);
	move_arg(0x2);
	push_base_offset(0x1e4);
	move_arg(0x2);
	push_base_offset(0x1e8);
	move_arg(0x2);
	push_base_offset(0x1ec);
	move_arg(0x2);
	push_base_offset(0x1f0);
	move_arg(0x2);
	push_base_offset(0x1f4);
	move_arg(0x2);
	push_base_offset(0x1f8);
	move_arg(0x2);
	push_base_offset(0x1f8);
	load(0x2);
	push_offset(L01b2e);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memclr();
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_base_offset(0x1f4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1f0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x1c);
	add();
	push_base_offset(0x1ec);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x20);
	add();
	push_base_offset(0x1e8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x128);
	add();
	push_base_offset(0x1e4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x12c);
	add();
	push_base_offset(0x1e0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x130);
	add();
	push_base_offset(0x1dc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x134);
	add();
	push_base_offset(0x1d8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x138);
	add();
	push_base_offset(0x1d4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x13c);
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01566);
	jc(0x1);
	push_base_offset(0x1c0);
	push_word(0x150);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x70);
	memcpy();

L01566:
	push_dword(0x227a4);
	push_base_offset(0x1f8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1cc);
	load(0x2);
	push_offset(L01596);
	jc(0x1);
	push_base_offset(0x1f8);
	load(0x2);
	push_byte(0x0);
	push_offset(L01385);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);

L01596:
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1f8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x24);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L01434);
	call();
	load_base();
	push_byte(0x24);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L01434);
	call();
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x1f0);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d8);
	move_arg(0x2);
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_base_offset(0x1e0);
	move_arg(0x2);
	push_base_offset(0x1e4);
	move_arg(0x2);
	push_base_offset(0x1e8);
	move_arg(0x2);
	push_base_offset(0x1ec);
	move_arg(0x2);
	push_base_offset(0x1f0);
	move_arg(0x2);
	push_base_offset(0x1f0);
	load(0x2);
	push_offset(L01b2e);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1ec);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x24);
	add();
	push_base_offset(0x1e8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x28);
	add();
	push_base_offset(0x1e4);
	load(0x2);
	push_base_offset(0x1e8);
	load(0x2);
	push_byte(0x10);
	mul();
	memcpy();
	push_base_offset(0x1c0);
	push_word(0x128);
	add();
	push_base_offset(0x1e0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x12c);
	add();
	push_base_offset(0x1dc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x130);
	add();
	push_base_offset(0x1d8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x134);
	add();
	push_base_offset(0x1d4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x138);
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x13c);
	add();
	push_base_offset(0x1cc);
	load(0x2);
	move(0x2);
	push_dword(0x227a4);
	push_base_offset(0x1f0);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c8);
	load(0x2);
	push_offset(L017cd);
	jc(0x1);
	push_base_offset(0x1f0);
	load(0x2);
	push_byte(0x0);
	push_offset(L01385);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);

L017cd:
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1f0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x30);
	load(0x2);
	add();
	push_byte(0x3);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L01434);
	call();
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x2c);
	load(0x2);
	add();
	push_byte(0x4);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L01434);
	call();
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x1c8);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x1c8);
	load(0x2);
	add();
	push_offset(L01c68);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x5);
	push_byte(0x0);
	add();
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x227a4);
	push_byte(0x0);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1c8);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x1dc);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d8);
	move_arg(0x2);
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x1dc);
	load(0x2);
	add();
	push_offset(L01c68);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memclr();
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x5);
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1d8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1d4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x13c);
	add();
	push_base_offset(0x1cc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01a47);
	jc(0x1);
	push_base_offset(0x1c0);
	push_word(0x150);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x70);
	memcpy();

L01a47:
	push_dword(0x227a4);
	push_byte(0x0);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1dc);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1dc);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x1d4);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d4);
	load(0x2);
	push_offset(L01c68);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x5);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1cc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1c8);
	load(0x2);
	move(0x2);
	push_dword(0x227a4);
	push_base_offset(0x1d4);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1d4);
	sub();
	store_base();
	ret();

L01b2e:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	push_dword(0x227a4);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01bf0);
	jc(0x1);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x1);
	add();
	eq();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x450);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	push_offset(L01385);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L01bf0);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01bf0);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	push_offset(L01bf0);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	memclr();

L01bf0:
	push_base_offset(0x10);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L01c07:
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01c48);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	geq();
	push_offset(L01c48);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);

L01c48:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x52);
	lt();
	push_offset(L01c07);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L01c68:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	push_dword(0x227a4);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01d2a);
	jc(0x1);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x1);
	add();
	eq();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x450);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	push_offset(L01385);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L01d2a);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01d2a);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	push_offset(L01d2a);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	memclr();

L01d2a:
	push_base_offset(0x10);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L01d46:
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01da7);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	push_offset(L01da7);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_word(0x450);
	memclr();
	push_offset(L01dc1);
	jmp();

L01da7:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	lt();
	push_offset(L01d46);
	jc(0x0);

L01dc1:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x2da64);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L01deb:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);

L01e09:
	push_word(0x504);
	load(0x2);
	push_offset(L01e34);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L01e34);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L01e34);
	jc(0x1);
	sys1(0x5f);
	push_offset(L01e09);
	jmp();

L01e34:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L01e49:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x720);
	sys1(0x18);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);

L01e6c:
	push_word(0x504);
	load(0x2);
	push_offset(L01ea8);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L01ea8);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L01ea8);
	jc(0x1);
	sys1(0x17);
	push_offset(L01ea8);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L01ea8);
	jc(0x0);
	sys1(0x5f);
	push_offset(L01e6c);
	jmp();

L01ea8:
	push_word(0x720);
	sys1(0x19);
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L01eed);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L01deb);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_offset(L01efb);
	jmp();

L01eed:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L01e49);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L01efb:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L01f54);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L01deb);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L01f54:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L01f77:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L01fbb);
	jc(0x1);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L01fbb);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);

L01fbb:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L01f77);
	jc(0x0);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L01fdc:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L01fff);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L01deb);
	call();
	push_base_offset(0xc);
	move_arg(0x2);

L01fff:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L01fdc);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L02030:
	push_dword(0x2da64);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L0205f);
	jc(0x1);
	push_dword(0x2da64);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);

L0205f:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L02030);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L020cd);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L01deb);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L020cd:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L020d8:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L02144);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	load(0x2);
	push_byte(0x40);
	lt();
	push_offset(L0214f);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x1a444);
	add();
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L02144:
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);
	push_offset(L0215a);
	jmp();

L0214f:
	push_string("バストショット制御向けプリロード対象ビットマップ配列に空きがありません");
	cmd_79();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0215a:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x368);
	add();
	store_base();
	push_base_offset(0x2e4);
	move_arg(0x2);
	push_base_offset(0x2e8);
	move_arg(0x2);
	push_base_offset(0x2ec);
	move_arg(0x2);
	push_base_offset(0x2f0);
	move_arg(0x2);
	push_base_offset(0x2f4);
	move_arg(0x2);
	push_base_offset(0x2f8);
	move_arg(0x2);
	push_base_offset(0x2fc);
	move_arg(0x2);
	push_base_offset(0x300);
	move_arg(0x2);
	push_base_offset(0x304);
	move_arg(0x2);
	push_base_offset(0x308);
	move_arg(0x2);
	push_base_offset(0x30c);
	move_arg(0x2);
	push_base_offset(0x310);
	move_arg(0x2);
	push_base_offset(0x314);
	move_arg(0x2);
	push_base_offset(0x318);
	move_arg(0x2);
	push_base_offset(0x31c);
	move_arg(0x2);
	push_base_offset(0x320);
	move_arg(0x2);
	push_base_offset(0x324);
	move_arg(0x2);
	push_base_offset(0x328);
	move_arg(0x2);
	push_base_offset(0x32c);
	move_arg(0x2);
	push_base_offset(0x330);
	move_arg(0x2);
	push_base_offset(0x334);
	move_arg(0x2);
	push_base_offset(0x338);
	move_arg(0x2);
	push_base_offset(0x33c);
	move_arg(0x2);
	push_base_offset(0x340);
	move_arg(0x2);
	push_base_offset(0x344);
	move_arg(0x2);
	push_base_offset(0x348);
	move_arg(0x2);
	push_base_offset(0x34c);
	move_arg(0x2);
	push_base_offset(0x350);
	move_arg(0x2);
	push_base_offset(0x354);
	move_arg(0x2);
	push_base_offset(0x358);
	move_arg(0x2);
	push_base_offset(0x35c);
	move_arg(0x2);
	push_base_offset(0x360);
	move_arg(0x2);
	push_base_offset(0x364);
	move_arg(0x2);
	push_base_offset(0x368);
	move_arg(0x2);
	push_byte(0x0);
	push_offset(L02c52);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x1a434);
	add();
	load(0x2);
	push_offset(L02c52);
	jc(0x0);
	push_base_offset(0x2e0);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f0);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	geq();
	push_base_offset(0x2f0);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x2f0);
	move_arg(0x2);
	push_base_offset(0x2f8);
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L022d4);
	jc(0x0);
	push_base_offset(0x2f8);
	load(0x2);
	push_word(0x80);
	push_byte(0x2);
	mul();
	push_byte(0x10);
	sub();
	lt();
	push_offset(L022be);
	jc(0x0);
	push_base_offset(0x2f8);
	load(0x2);
	push_word(0x80);
	push_byte(0x2);
	mul();
	lt();
	push_offset(L0229e);
	jc(0x0);
	push_base_offset(0x2f8);
	push_word(0x732);
	push_word(0x100);
	sub();
	move(0x2);
	push_base_offset(0x2e0);
	push_byte(0x1);
	move(0x2);
	push_offset(L022d4);
	jmp();

L0229e:
	push_base_offset(0x2f8);
	push_word(0x7b0);
	push_word(0x100);
	sub();
	push_base_offset(0x2f8);
	load(0x2);
	add();
	push_word(0x80);
	push_byte(0x2);
	mul();
	push_byte(0x10);
	sub();
	sub();
	move(0x2);
	push_offset(L022d4);
	jmp();

L022be:
	push_base_offset(0x2f8);
	push_word(0x500);
	push_word(0x100);
	sub();
	push_base_offset(0x2f8);
	load(0x2);
	add();
	push_word(0x80);
	sub();
	move(0x2);

L022d4:
	push_dword(0x9fab8);
	push_dword(0xd0b4);
	add();
	push_base_offset(0x368);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L022fe);
	jc(0x0);
	push_string("バストショット制御コマンド情報配列に空きがありません");
	cmd_79();
	push_offset(L02c52);
	jmp();

L022fe:
	push_base_offset(0x124);
	push_dword(0x9fab8);
	push_dword(0xd0b4);
	add();
	push_base_offset(0x368);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x120);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L02326:
	push_base_offset(0x2d8);
	load(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	lt();
	push_offset(L02382);
	jc(0x1);
	push_base_offset(0x1d4);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_word(0xb0);
	mul();
	add();
	push_word(0xb0);
	memcpy();
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L02371);
	jc(0x0);
	push_base_offset(0x120);
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	load(0x2);
	move(0x2);

L02371:
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L02326);
	jmp();

L02382:
	push_base_offset(0x1d4);
	push_word(0xb0);
	memclr();
	push_base_offset(0x1d4);
	push_byte(0x0);
	add();
	push_base_offset(0x364);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x4);
	add();
	push_base_offset(0x33c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x8);
	add();
	push_base_offset(0x338);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0xc);
	add();
	push_base_offset(0x334);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x10);
	add();
	push_base_offset(0x330);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x14);
	add();
	push_base_offset(0x32c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x18);
	add();
	push_base_offset(0x328);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x1c);
	add();
	push_base_offset(0x324);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x20);
	add();
	push_base_offset(0x320);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x24);
	add();
	push_base_offset(0x31c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x28);
	add();
	push_base_offset(0x318);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x2c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x30);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x34);
	add();
	push_base_offset(0x314);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x38);
	add();
	push_base_offset(0x310);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x4c);
	add();
	push_base_offset(0x308);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x50);
	add();
	push_base_offset(0x304);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x54);
	add();
	push_base_offset(0x300);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x58);
	add();
	push_base_offset(0x2fc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x5c);
	add();
	push_base_offset(0x2f8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x60);
	add();
	push_base_offset(0x2f4);
	load(0x2);
	move(0x2);
	push_base_offset(0x30c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L024af);
	jc(0x1);
	push_base_offset(0x1d4);
	push_byte(0x3c);
	add();
	push_base_offset(0x30c);
	load(0x2);
	push_byte(0x10);
	memcpy();

L024af:
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02507);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x360);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_byte(0x64);
	add();
	move_arg(0x2);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L02515);
	jc(0x1);
	push_base_offset(0x2d4);
	load(0x0);
	push_byte(0x24);
	eq();
	push_offset(L02515);
	jc(0x0);
	push_base_offset(0x1d4);
	push_byte(0x64);
	add();
	load(0x2);
	push_offset(L020d8);
	call();
	push_offset(L02c52);
	jc(0x1);
	push_offset(L02515);
	jmp();

L02507:
	push_base_offset(0x1d4);
	push_byte(0x64);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L02515:
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02560);
	jc(0x1);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L02560);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x35c);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_byte(0x68);
	add();
	move_arg(0x2);
	push_base_offset(0x1d4);
	push_byte(0x68);
	add();
	load(0x2);
	push_offset(L020d8);
	call();
	push_offset(L02c52);
	jc(0x1);
	push_offset(L0256e);
	jmp();

L02560:
	push_base_offset(0x1d4);
	push_byte(0x68);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L0256e:
	push_base_offset(0x1d4);
	push_byte(0x6c);
	add();
	push_base_offset(0x358);
	load(0x2);
	move(0x2);
	push_base_offset(0x344);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L025c6);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x344);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_byte(0x70);
	add();
	move_arg(0x2);
	push_base_offset(0x1d4);
	push_byte(0x70);
	add();
	load(0x2);
	push_offset(L020d8);
	call();
	push_offset(L02c52);
	jc(0x1);
	push_base_offset(0x1d4);
	push_byte(0x74);
	add();
	push_base_offset(0x340);
	load(0x2);
	move(0x2);
	push_offset(L025d4);
	jmp();

L025c6:
	push_base_offset(0x1d4);
	push_byte(0x70);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L025d4:
	push_base_offset(0x350);
	load(0x2);
	push_byte(0x2);
	geq();
	push_offset(L02601);
	jc(0x0);
	push_base_offset(0x1d4);
	push_byte(0x7c);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1d4);
	push_word(0x80);
	add();
	push_base_offset(0x350);
	load(0x2);
	move(0x2);
	push_offset(L02788);
	jmp();

L02601:
	push_base_offset(0x1d4);
	push_byte(0x7c);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_word(0x80);
	add();
	push_base_offset(0x350);
	load(0x2);
	move(0x2);
	push_base_offset(0x11c);
	push_base_offset(0x1d4);
	push_byte(0x7c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x61c);
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_base_offset(0x2dc);
	push_word(0x80);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	sub();
	push_base_offset(0x354);
	load(0x2);
	push_offset(L03869);
	call();
	push_offset(L02780);
	jc(0x1);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x61c);
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_base_offset(0x2dc);
	push_word(0x80);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	sub();
	push_base_offset(0x348);
	load(0x2);
	push_offset(L03869);
	call();
	push_offset(L02780);
	jc(0x1);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x34c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02788);
	jc(0x1);
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L026f9:
	push_base_offset(0x124);
	load(0x2);
	push_word(0x61c);
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_base_offset(0x2dc);
	push_word(0x80);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	sub();
	push_base_offset(0x34c);
	load(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L03869);
	call();
	push_offset(L02780);
	jc(0x1);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_base_offset(0x350);
	load(0x2);
	lt();
	push_offset(L026f9);
	jc(0x0);
	push_offset(L02788);
	jmp();

L02780:
	push_string("バストショット制御向けアニメーション領域に空きがありません");
	cmd_79();
	push_offset(L02c52);
	jmp();

L02788:
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	push_base_offset(0x2f0);
	load(0x2);
	move(0x2);
	push_base_offset(0x2f0);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L02842);
	jc(0x0);
	push_base_offset(0x2f0);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x2f0);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a43c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a43c);
	add();
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	load(0x2);
	push_byte(0x0);
	leq();
	push_offset(L0281f);
	jc(0x1);
	push_base_offset(0x120);
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L0281f:
	push_base_offset(0x2dc);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x2dc);
	load(0x2);
	push_base_offset(0x120);
	load(0x2);
	push_byte(0x1);
	sub();
	ternary();
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	move_arg(0x2);

L02842:
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L02849:
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L02849);
	jc(0x0);
	push_base_offset(0x2ec);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L029d7);
	jc(0x1);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L029d7);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x2ec);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_word(0x84);
	add();
	move_arg(0x2);
	push_base_offset(0x118);
	push_word(0xab4);
	load(0x2);
	push_base_offset(0x2d4);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0292c);
	jc(0x0);
	push_byte(0x1);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x118);
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x118);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x2d8);
	push_byte(0x1);
	move(0x2);

L028fb:
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L028fb);
	jc(0x0);

L0292c:
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L02933:
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L029b9);
	jc(0x1);
	push_base_offset(0x2d4);
	push_byte(0x1);
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	sys1(0xdd);
	push_base_offset(0xd4);
	push_word(0xab0);
	load(0x2);
	push_base_offset(0x2d4);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L029a4);
	jc(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L029a4);
	jc(0x1);
	push_base_offset(0x2d4);
	push_byte(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0xdd);

L029a4:
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);

L029b9:
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L02933);
	jc(0x0);
	push_offset(L029e6);
	jmp();

L029d7:
	push_base_offset(0x1d4);
	push_word(0x84);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L029e6:
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L029ed:
	push_base_offset(0x2e4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02add);
	jc(0x1);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L02add);
	jc(0x1);
	push_base_offset(0x2d8);
	load(0x2);
	push_base_offset(0x2e8);
	load(0x2);
	geq();
	push_offset(L02add);
	jc(0x0);
	push_base_offset(0x2e4);
	load(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02add);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x2e4);
	load(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_word(0x88);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0xd4);
	push_word(0xab0);
	load(0x2);
	push_base_offset(0x2d4);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L02ab9);
	jc(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L02ab9);
	jc(0x1);
	push_base_offset(0x2d4);
	push_byte(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0xdd);
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_offset(L02af5);
	jmp();

L02ab9:
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1d4);
	push_word(0x88);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_offset(L02af5);
	jmp();

L02add:
	push_base_offset(0x1d4);
	push_word(0x88);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L02af5:
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L029ed);
	jc(0x0);
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L02b16:
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L020d8);
	call();
	push_offset(L02c52);
	jc(0x1);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L02b16);
	jc(0x0);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L02bbb);
	jc(0x1);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x59c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x5a0);
	add();
	push_byte(0x0);
	move(0x2);

L02bbb:
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_word(0xb0);
	mul();
	add();
	push_base_offset(0x1d4);
	push_word(0xb0);
	memcpy();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2e0);
	load(0x2);
	push_base_offset(0x364);
	load(0x2);
	push_byte(0x4);
	eq();
	push_base_offset(0x368);
	load(0x2);
	push_dword(0x45f14);
	load(0x2);
	eq();
	bool_and();
	bool_or();
	push_offset(L02c27);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x244c4);
	add();
	push_base_offset(0x368);
	load(0x2);
	move(0x2);
	push_offset(L02c52);
	jmp();

L02c27:
	push_base_offset(0x368);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x244c4);
	add();
	load(0x2);
	eq();
	push_offset(L02c52);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x244c4);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L02c52:
	load_base();
	push_word(0x368);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x128);
	add();
	store_base();
	push_base_offset(0x124);
	move_arg(0x2);
	push_base_offset(0x128);
	move_arg(0x2);
	push_base_offset(0x120);
	push_base_offset(0x128);
	load(0x2);
	push_word(0xb0);
	memcpy();
	push_base_offset(0x70);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x70);
	memcpy();
	push_base_offset(0x120);
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x20);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x24);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0xc);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x28);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0xc);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x10);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x20);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x10);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x14);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x24);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x14);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x18);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x28);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x18);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x1c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x2c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x1c);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x30);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x20);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x24);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x24);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x34);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x24);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x28);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x28);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x38);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x28);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x34);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x44);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x34);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x38);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x38);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x4c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x38);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x4c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x4c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x64);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x4c);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x50);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x50);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x68);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x50);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x5c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x5c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x6c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x5c);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x6c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x6c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x6c);
	add();
	move_arg(0x2);
	push_base_offset(0x128);
	load(0x2);
	push_base_offset(0x120);
	push_word(0xb0);
	memcpy();
	load_base();
	push_word(0x128);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();

L02f08:
	push_word(0x504);
	load(0x2);
	push_offset(L02f27);
	jc(0x0);
	push_dword(0x3ade4);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L02f27);
	jc(0x1);
	sys1(0x5f);
	push_offset(L02f08);
	jmp();

L02f27:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L02f33:
	load_base();
	push_byte(0x0);
	add();
	store_base();

L02f38:
	push_word(0x504);
	load(0x2);
	push_offset(L02f69);
	jc(0x0);
	push_dword(0x3adf4);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02f69);
	jc(0x1);
	push_dword(0x3adf4);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02f69);
	jc(0x0);
	sys1(0x5f);
	push_offset(L02f38);
	jmp();

L02f69:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x158);
	add();
	store_base();
	push_base_offset(0x150);
	move_arg(0x2);
	push_base_offset(0x154);
	move_arg(0x2);
	push_base_offset(0x158);
	move_arg(0x2);
	sys1(0x17);
	push_base_offset(0x148);
	move_arg(0x2);
	push_base_offset(0x148);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	bool_or();
	push_byte(0x20);
	push_byte(0x10);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_byte(0x0);
	push_base_offset(0x154);
	load(0x2);
	ternary();
	push_base_offset(0x154);
	move_arg(0x2);
	push_dword(0x3adf4);
	push_byte(0x4);
	add();
	push_dword(0x3adf4);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_offset(L02f33);
	call();
	push_base_offset(0x44);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x38);
	push_base_offset(0x20);
	push_word(0x400);
	push_byte(0x69);
	add();
	grp1(0x16);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L0301e);
	jc(0x1);
	push_word(0x400);
	push_byte(0x6a);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	grp2(0x1f);

L0301e:
	push_base_offset(0x158);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L030a7);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("bitmap._bp");
	sys1(0x40);
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0xba8);
	load(0x2);
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x400);
	push_byte(0x69);
	add();
	push_base_offset(0x158);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	push_byte(0x70);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	load(0x2);
	push_byte(0x10);
	push_base_offset(0x8);
	load(0x2);
	call();
	push_base_offset(0x148);
	move_arg(0x2);
	sys1(0x41);
	push_byte(0x0);
	push_offset(L030a7);
	jc(0x1);
	push_base_offset(0x148);
	load(0x2);
	push_offset(L030a7);
	jc(0x0);
	push_base_offset(0x158);
	load(0x2);
	push_base_offset(0x144);
	push_string("未定義のキャラクター名 [ %s ] が指定されました");
	cmd_6f();
	push_base_offset(0x144);
	cmd_79();

L030a7:
	push_base_offset(0x158);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L031ee);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L03152);
	jc(0x0);
	push_dword(0x42aac);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	push_byte(0x1);
	push_word(0x100);
	push_word(0x740);
	grp1(0x56);
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	push_word(0x100);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L03287);
	jmp();

L03152:
	push_dword(0x42aac);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	push_word(0x400);
	push_byte(0x6a);
	add();
	push_word(0x100);
	push_byte(0x0);
	push_word(0x740);
	push_byte(0x1);
	grp1(0x58);
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	push_word(0x100);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x20);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	move(0x2);
	push_offset(L03287);
	jmp();

L031ee:
	push_base_offset(0x24);
	load(0x2);
	push_offset(L03317);
	jc(0x1);
	push_dword(0x42aac);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x740);
	grp1(0x56);
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x14);
	add();
	push_word(0x100);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x24);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	move(0x2);

L03287:
	push_dword(0x42aac);
	load(0x2);
	push_byte(0x1);
	grp1(0x30);
	push_dword(0x3adf4);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x14c);
	move_arg(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0x14c);
	load(0x2);
	ternary();
	push_dword(0x3adf4);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_dword(0x3adf4);
	push_byte(0xc);
	add();
	push_dword(0x42aac);
	load(0x2);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14c);
	push_base_offset(0x154);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	move(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x1);
	geq();
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_dword(0x3adf4);
	push_byte(0x1c);
	add();
	move_arg(0x2);

L03317:
	load_base();
	push_word(0x158);
	sub();
	store_base();
	ret();

L0331e:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3ae20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	move(0x2);

L0333b:
	push_word(0x504);
	load(0x2);
	push_offset(L0335a);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L0335a);
	jc(0x1);
	sys1(0x5f);
	push_offset(L0333b);
	jmp();

L0335a:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L03366:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x720);
	sys1(0x18);
	push_base_offset(0x4);
	push_dword(0x3ae20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	move(0x2);

L03388:
	push_word(0x504);
	load(0x2);
	push_offset(L033b8);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L033b8);
	jc(0x1);
	sys1(0x17);
	push_offset(L033b8);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L033b8);
	jc(0x0);
	sys1(0x5f);
	push_offset(L03388);
	jmp();

L033b8:
	push_word(0x720);
	sys1(0x19);
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L033f4);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0331e);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_offset(L03402);
	jmp();

L033f4:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L03366);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L03402:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x94);
	add();
	store_base();
	push_base_offset(0x70);
	move_arg(0x2);
	push_base_offset(0x74);
	move_arg(0x2);
	push_base_offset(0x78);
	move_arg(0x2);
	push_base_offset(0x7c);
	move_arg(0x2);
	push_base_offset(0x80);
	move_arg(0x2);
	push_base_offset(0x84);
	move_arg(0x2);
	push_base_offset(0x88);
	move_arg(0x2);
	push_base_offset(0x8c);
	move_arg(0x2);
	push_base_offset(0x90);
	move_arg(0x2);
	push_base_offset(0x94);
	move_arg(0x2);
	push_base_offset(0x70);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x70);
	load(0x2);
	push_dword(0x7fffffff);
	ternary();
	push_base_offset(0x70);
	move_arg(0x2);
	push_base_offset(0x6c);
	push_byte(0x6c);
	memclr();
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8c);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x88);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x84);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x10);
	add();
	push_base_offset(0x80);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x14);
	add();
	push_base_offset(0x7c);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x18);
	add();
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x1c);
	add();
	push_base_offset(0x74);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x20);
	add();
	push_base_offset(0x70);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x24);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x28);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x2c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x30);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x34);
	add();
	push_base_offset(0x90);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x38);
	add();
	push_base_offset(0x70);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x40);
	add();
	push_word(0x101);
	push_base_offset(0x8c);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x3c);
	add();
	push_base_offset(0x6c);
	push_byte(0x40);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x44);
	add();
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x48);
	add();
	push_base_offset(0x80);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x4c);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x4c);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x4c);
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x5c);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x5c);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x5c);
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3ae20);
	push_base_offset(0x94);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	push_base_offset(0x6c);
	push_byte(0x6c);
	memcpy();
	load_base();
	push_word(0x94);
	sub();
	store_base();
	ret();

L035d9:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3ae20);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L03639);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x30);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	move(0x2);

L03639:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0364b:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L035d9);
	call();
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x52);
	lt();
	push_offset(L0364b);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x58);
	add();
	store_base();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x50);
	move_arg(0x2);
	push_base_offset(0x54);
	move_arg(0x2);
	push_base_offset(0x58);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x44);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x40);
	move_arg(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x2c);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x3c);
	move_arg(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x30);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x34);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x4);
	add();
	push_base_offset(0x54);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x8);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x50);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x3c);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x8);
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x38);
	load(0x2);
	move(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x34);
	push_byte(0x14);
	add();
	move_arg(0x2);
	push_base_offset(0x34);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x1c);
	add();
	push_base_offset(0x40);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x24);
	add();
	push_base_offset(0x4c);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x28);
	add();
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	sub();
	move(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x34);
	push_byte(0x34);
	memcpy();
	load_base();
	push_byte(0x58);
	sub();
	store_base();
	ret();

L0381d:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3d0b8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03863);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x60);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x38);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	memclr();

L03863:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L03869:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L038cf);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0389d:
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x7);
	sar();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0389d);
	jc(0x0);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_offset(L03958);
	jmp();

L038cf:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L038d6:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	geq();
	push_offset(L03971);
	jc(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x7f);
	and();
	move(0x0);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x7);
	sar();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03944);
	jc(0x1);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	load(0x0);
	push_word(0x80);
	or();
	move(0x0);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L038d6);
	jmp();

L03944:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L03958:
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03971);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);

L03971:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L0397c:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3e1a0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03a26);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_offset(L039e8);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	grp2(0xf2);
	push_offset(L03a1a);
	jmp();

L039e8:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_offset(L03a1a);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	grp2(0xf6);

L03a1a:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x3c);
	memclr();
	push_offset(L03a34);
	jmp();

L03a26:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L04091);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L03a34:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03ad3);
	call();
	push_offset(L03ac8);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	push_offset(L03ce8);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L03ac8:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();

L03ad3:
	load_base();
	push_word(0x88);
	add();
	store_base();
	push_base_offset(0x64);
	move_arg(0x2);
	push_base_offset(0x68);
	move_arg(0x2);
	push_base_offset(0x6c);
	move_arg(0x2);
	push_base_offset(0x70);
	move_arg(0x2);
	push_base_offset(0x74);
	move_arg(0x2);
	push_base_offset(0x78);
	move_arg(0x2);
	push_base_offset(0x7c);
	move_arg(0x2);
	push_base_offset(0x80);
	move_arg(0x2);
	push_base_offset(0x84);
	move_arg(0x2);
	push_base_offset(0x88);
	move_arg(0x2);
	push_base_offset(0x5c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x88);
	load(0x2);
	push_offset(L0397c);
	call();
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x1);
	geq();
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x3);
	lt();
	bool_and();
	push_offset(L03b66);
	jc(0x1);
	push_base_offset(0x88);
	load(0x2);
	push_base_offset(0x84);
	load(0x2);
	push_base_offset(0x80);
	load(0x2);
	push_base_offset(0x7c);
	load(0x2);
	push_base_offset(0x74);
	load(0x2);
	push_base_offset(0x70);
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	push_base_offset(0x68);
	load(0x2);
	push_offset(L0417e);
	call();
	push_base_offset(0x5c);
	move_arg(0x2);
	push_offset(L03cdc);
	jmp();

L03b66:
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x3);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_offset(L03cdc);
	jc(0x1);
	push_base_offset(0x84);
	load(0x2);
	push_base_offset(0x74);
	load(0x2);
	push_base_offset(0x70);
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	push_base_offset(0x64);
	load(0x2);
	grp3(0xf2);
	push_base_offset(0x60);
	move_arg(0x2);
	push_base_offset(0x60);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03cdc);
	jc(0x1);
	sys1(0x4);
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x40);
	load(0x2);
	push_word(0x7d0);
	add();
	move(0x2);

L03bc4:
	push_word(0x504);
	load(0x2);
	push_offset(L03cdc);
	jc(0x0);
	push_base_offset(0x58);
	push_base_offset(0x84);
	load(0x2);
	grp1(0x16);
	push_offset(L03c0c);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x60);
	move_arg(0x2);
	push_base_offset(0x60);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	geq();
	push_offset(L03bfa);
	jc(0x0);
	sys1(0x5f);
	push_offset(L03bc4);
	jmp();

L03bfa:
	push_base_offset(0x84);
	load(0x2);
	grp2(0xf2);
	push_base_offset(0x84);
	load(0x2);
	grp1(0x12);
	push_offset(L03cdc);
	jmp();

L03c0c:
	push_base_offset(0x3c);
	push_byte(0x3c);
	memclr();
	push_base_offset(0x3c);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x8);
	add();
	push_base_offset(0x6c);
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0xc);
	add();
	push_base_offset(0x84);
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x10);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x14);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x28);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x2c);
	add();
	push_base_offset(0x80);
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x30);
	add();
	push_base_offset(0x7c);
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x34);
	add();
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3e1a0);
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	push_base_offset(0x3c);
	push_byte(0x3c);
	memcpy();
	push_base_offset(0x5c);
	push_byte(0x1);
	move(0x2);

L03cdc:
	push_base_offset(0x5c);
	load(0x2);
	load_base();
	push_word(0x88);
	sub();
	store_base();
	ret();

L03ce8:
	load_base();
	push_byte(0x34);
	add();
	store_base();
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x24);
	push_dword(0x3e1a0);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03e68);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L03e76);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_offset(L03e76);
	jc(0x1);
	push_base_offset(0x28);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	grp2(0xf1);
	push_offset(L03e5b);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L03da3);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x28);
	load(0x2);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	add();
	move(0x2);

L03da3:
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x28);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_offset(L03e2b);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x7d0);
	add();
	move(0x2);

L03dd3:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L03e76);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03e50);
	jc(0x1);
	push_base_offset(0x1c);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	grp1(0x16);
	push_offset(L03e5b);
	jc(0x1);
	sys1(0x4);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	geq();
	push_offset(L03e2b);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L03dd3);
	jc(0x1);

L03e2b:
	sys1(0x4);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	add();
	push_word(0xc8);
	add();
	move(0x2);

L03e50:
	push_base_offset(0x2c);
	push_byte(0x1);
	move(0x2);
	push_offset(L03e76);
	jmp();

L03e5b:
	push_base_offset(0x34);
	load(0x2);
	push_offset(L0397c);
	call();
	push_offset(L03e76);
	jmp();

L03e68:
	push_base_offset(0x34);
	load(0x2);
	push_offset(L04302);
	call();
	push_base_offset(0x2c);
	move_arg(0x2);

L03e76:
	push_base_offset(0x2c);
	load(0x2);
	load_base();
	push_byte(0x34);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3e1a0);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03f23);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_offset(L03f40);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_offset(L03f40);
	jmp();

L03f23:
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L04585);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L03f40:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3e1a0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03f97);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	grp3(0xf6);

L03f97:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x3e1a0);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04073);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04086);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L03ffb);
	jc(0x1);
	push_word(0x720);
	sys1(0x18);

L03ffb:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L04060);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L04060);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L0402e);
	jc(0x1);
	sys1(0x17);
	push_offset(L04060);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L04060);
	jc(0x0);

L0402e:
	sys1(0x4);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	geq();
	push_offset(L04059);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03ffb);
	jc(0x0);

L04059:
	push_base_offset(0xc);
	push_byte(0x1);
	move(0x2);

L04060:
	push_base_offset(0x10);
	load(0x2);
	push_offset(L0406f);
	jc(0x1);
	push_word(0x720);
	sys1(0x19);

L0406f:
	push_offset(L04086);
	jmp();

L04073:
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L046c4);
	call();
	push_base_offset(0xc);
	move_arg(0x2);

L04086:
	push_base_offset(0xc);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L04091:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_offset(L0469d);
	call();
	push_base_offset(0x8);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L040f5);
	jc(0x1);
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_word(0x13c);
	memclr();
	push_base_offset(0x4);
	load(0x2);
	grp1(0xf5);

L040f5:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x24);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L0417e);
	call();
	push_offset(L04173);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L04302);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L04173:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x24);
	sub();
	store_base();
	ret();

L0417e:
	load_base();
	push_word(0x160);
	add();
	store_base();
	push_base_offset(0x144);
	move_arg(0x2);
	push_base_offset(0x148);
	move_arg(0x2);
	push_base_offset(0x14c);
	move_arg(0x2);
	push_base_offset(0x150);
	move_arg(0x2);
	push_base_offset(0x154);
	move_arg(0x2);
	push_base_offset(0x158);
	move_arg(0x2);
	push_base_offset(0x15c);
	move_arg(0x2);
	push_base_offset(0x160);
	move_arg(0x2);
	push_offset(L0469d);
	call();
	push_base_offset(0x160);
	load(0x2);
	push_offset(L04091);
	call();
	push_base_offset(0x13c);
	push_word(0x13c);
	memclr();
	push_base_offset(0x13c);
	push_byte(0x8);
	add();
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x1);
	grp3(0xf1);
	push_base_offset(0x140);
	move_arg(0x2);
	push_base_offset(0x140);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L041f4);
	jc(0x0);
	push_string("無効な形式のファイルが指定されました");
	cmd_79();
	push_offset(L042f3);
	jmp();

L041f4:
	push_base_offset(0x13c);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x20);
	add();
	push_base_offset(0x148);
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x24);
	add();
	push_base_offset(0x144);
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x28);
	add();
	push_base_offset(0x15c);
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x2c);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x30);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x30);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x38);
	add();
	push_base_offset(0x158);
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x3c);
	add();
	push_base_offset(0x154);
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x40);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x44);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x48);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x4c);
	add();
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L04621);
	call();
	push_base_offset(0x15c);
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	grp1(0x11);
	push_base_offset(0x15c);
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0xf6);
	push_dword(0x3ea10);
	push_base_offset(0x160);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_base_offset(0x13c);
	push_word(0x13c);
	memcpy();

L042f3:
	push_base_offset(0x140);
	load(0x2);
	push_byte(0x0);
	eq();
	load_base();
	push_word(0x160);
	sub();
	store_base();
	ret();

L04302:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04358);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L04358);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L04358:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_offset(L0469d);
	call();
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0445c);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L04091);
	call();
	push_base_offset(0xc);
	load(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x28);
	add();
	load(0x2);
	grp2(0x1f);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_word(0x13c);
	memcpy();
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x28);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x2c);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x30);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x30);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_word(0x13c);
	memclr();

L0445c:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_offset(L0469d);
	call();
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L04520);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x28);
	add();
	load(0x2);
	grp2(0x1f);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_word(0x13c);
	memcpy();
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x8);
	add();
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	grp1(0xf7);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x28);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);

L04520:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_offset(L0469d);
	call();
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0457a);
	jc(0x1);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x3c);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L0457a:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L04585:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_offset(L0469d);
	call();
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L04616);
	jc(0x1);
	push_dword(0x3ea10);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x2c);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x30);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x30);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L04616:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L04621:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L0463e:
	push_base_offset(0x4);
	push_word(0x3e8);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	mul();
	push_base_offset(0x10);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	lt();
	push_offset(L0463e);
	jc(0x0);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L0469d:
	load_base();
	push_byte(0x0);
	add();
	store_base();

L046a2:
	push_word(0x504);
	load(0x2);
	push_offset(L046be);
	jc(0x0);
	push_dword(0x41680);
	load(0x2);
	push_offset(L046be);
	jc(0x1);
	sys1(0x5f);
	push_offset(L046a2);
	jmp();

L046be:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L046c4:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L046e9);
	jc(0x1);
	push_word(0x720);
	sys1(0x18);

L046e9:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L04761);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L04761);
	jc(0x0);
	push_dword(0x41680);
	load(0x2);
	push_offset(L046e9);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L04728);
	jc(0x1);
	sys1(0x17);
	push_offset(L04761);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L04761);
	jc(0x0);

L04728:
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_offset(L04761);
	jc(0x0);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L046e9);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);

L04761:
	push_base_offset(0x8);
	load(0x2);
	push_offset(L04770);
	jc(0x1);
	push_word(0x720);
	sys1(0x19);

L04770:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
