	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_word(0x4f8);
	push_word(0x4f8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L00012:
	push_base_offset(0x8);
	sys1(0x49);
	push_offset(L00022);
	jc(0x0);
	sys1(0x5f);
	push_offset(L00012);
	jmp();

L00022:
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00123);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00123);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x138);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L000ce);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x128);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x12c);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x138);
	add();
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x13c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_word(0x710);
	grp1(0x23);
	push_offset(L00117);
	jmp();

L000ce:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	grp1(0x33);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x12c);
	add();
	load(0x2);
	grp1(0x32);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0x30);
	push_byte(0x0);
	grp1(0x0);

L00117:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	push_byte(0x2);
	move(0x2);

L00123:
	push_word(0x4f8);
	push_word(0x4f8);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
