	load_base();
	push_byte(0x28);
	add();
	store_base();
	push_word(0x4f8);
	push_word(0x4f8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L00012:
	push_base_offset(0x28);
	sys1(0x49);
	push_offset(L00022);
	jc(0x0);
	sys1(0x5f);
	push_offset(L00012);
	jmp();

L00022:
	push_base_offset(0x24);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x20);
	push_dword(0x41684);
	push_base_offset(0x28);
	load(0x2);
	push_word(0x174);
	mul();
	add();
	move(0x2);
	sys1(0x4);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x18);
	push_base_offset(0x1c);
	load(0x2);
	move(0x2);

L0004e:
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);

L00055:
	push_base_offset(0xc);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x2c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x64);
	sub();
	lt();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x64);
	sub();
	ternary();
	push_base_offset(0x1c);
	move_arg(0x2);

L000a8:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L001c4);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L001cd);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L001c4);
	jc(0x0);

L000d2:
	sys1(0x4);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L00115);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	lt();
	push_offset(L00115);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_string("data03xxx.arc");
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	add();
	snd1(0x20);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_offset(L000d2);
	jmp();

L00115:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	lt();
	push_offset(L000a8);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L001c4);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	snd1(0x24);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x1c);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	lt();
	push_offset(L00055);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x170);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0004e);
	jc(0x0);
	push_base_offset(0x24);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	add();
	move(0x2);
	push_offset(L000a8);
	jmp();

L001c4:
	push_base_offset(0x20);
	load(0x2);
	push_word(0x174);
	memclr();

L001cd:
	push_word(0x4f8);
	push_word(0x4f8);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	load_base();
	push_byte(0x28);
	sub();
	store_base();
	ret();
