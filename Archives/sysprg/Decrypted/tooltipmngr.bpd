	load_base();
	push_byte(0x28);
	add();
	store_base();
	push_base_offset(0x18);
	push_offset(L0011d);
	push_offset(L00234);
	push_offset(L002fa);
	cmd_0c(0x2, 0x3);

L00014:
	sys1(0x5f);
	sys1(0x4);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x24);
	push_byte(0x0);
	move(0x2);

L0002b:
	push_base_offset(0x8);
	push_word(0x9c0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L000eb);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L000eb);
	jc(0x1);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	geq();
	push_offset(L000eb);
	jc(0x1);
	push_base_offset(0x20);
	push_byte(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L00079:
	push_base_offset(0x4);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L000d1);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	push_offset(L000eb);
	jc(0x1);
	push_base_offset(0x28);
	push_byte(0x1);
	move(0x2);
	push_offset(L000eb);
	jmp();

L000d1:
	push_base_offset(0x20);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00079);
	jc(0x0);

L000eb:
	push_base_offset(0x24);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L0002b);
	jc(0x0);
	push_base_offset(0x28);
	load(0x2);
	push_offset(L00014);
	jc(0x1);
	push_byte(0x0);
	grp1(0x0);
	push_offset(L00014);
	jmp();
	load_base();
	push_byte(0x28);
	sub();
	store_base();
	ret();

L0011d:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0xc);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x20);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	leq();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x100);
	push_word(0x100);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	mul();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	div();
	sub();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x32);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	geq();
	push_offset(L0022c);
	jc(0x1);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);

L0022c:
	push_byte(0x1);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L00234:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L002f2);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x20);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	geq();
	push_offset(L002f2);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);

L002f2:
	push_byte(0x0);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L002fa:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0xc);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x20);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	leq();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x100);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	mul();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x32);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	geq();
	push_offset(L00483);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	memclr();
	push_base_offset(0x18);
	load(0x2);
	push_offset(L0048b);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00477);
	jc(0x1);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	grp1(0x57);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	grp1(0x38);
	push_offset(L00483);
	jmp();

L00477:
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);

L00483:
	push_byte(0x1);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L0048b:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0050b);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L0050b);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L004c8:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L004f1);
	jc(0x1);
	push_base_offset(0x8);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_offset(L0050b);
	jmp();

L004f1:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L004c8);
	jc(0x0);

L0050b:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
