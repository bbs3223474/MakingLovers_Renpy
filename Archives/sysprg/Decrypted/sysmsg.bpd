	load_base();
	push_word(0xc44);
	add();
	store_base();
	push_word(0x404);
	push_byte(0x0);
	move(0x2);
	push_word(0x408);
	push_byte(0x0);
	move(0x2);

L00014:
	sys1(0x5f);

L00016:
	push_base_offset(0xc44);
	sys1(0xa0);
	push_base_offset(0xc38);
	move_arg(0x2);
	push_word(0x408);
	push_base_offset(0xc38);
	load(0x2);
	bool_zero();
	move(0x2);
	push_base_offset(0xc38);
	load(0x2);
	push_offset(L00014);
	jc(0x1);
	push_base_offset(0xc44);
	push_offset(L000dd);
	call();
	push_offset(L00016);
	jc(0x0);
	push_word(0x404);
	push_byte(0x1);
	move(0x2);
	push_word(0xb94);
	push_byte(0x1);
	move(0x2);
	push_dword(0x15d618);
	push_byte(0x1);
	move(0x2);
	push_word(0xc8);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0xc30);
	push_byte(0x0);
	sys1(0x3d);
	push_base_offset(0xc30);
	sys1(0x39);
	push_base_offset(0xc34);
	push_byte(0x0);
	move(0x2);

L00074:
	sys1(0x81);
	push_offset(L000d4);
	jc(0x0);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0xc34);
	push_base_offset(0xc34);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc34);
	load(0x2);
	push_byte(0x4);
	lt();
	push_offset(L00074);
	jc(0x0);
	push_base_offset(0x924);
	push_byte(0x1);
	sys1(0x3a);
	push_base_offset(0x924);
	sys1(0x39);
	sys1(0x81);
	push_base_offset(0xc30);
	sys1(0x39);
	push_base_offset(0x924);
	push_base_offset(0x618);
	push_string("%s\\BGI.gdb");
	cmd_6f();
	push_base_offset(0xc30);
	push_base_offset(0x30c);
	push_string("%sBGI.gdb");
	cmd_6f();
	push_base_offset(0xc30);
	push_string("BGI.gdb");
	sys1(0x33);
	push_base_offset(0x30c);
	push_base_offset(0x618);
	sys1(0x27);

L000d4:
	sys1(0x6a);
	load_base();
	push_word(0xc44);
	sub();
	store_base();
	ret();

L000dd:
	load_base();
	push_byte(0x4c);
	add();
	store_base();
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x48);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0019d);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L001be);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L001e4);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L001ef);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_word(0x80);
	eq();
	push_offset(L0021d);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000);
	eq();
	push_offset(L0022e);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10100);
	eq();
	push_offset(L0022e);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_word(0x1000);
	eq();
	push_offset(L00263);
	jc(0x0);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_word(0x1001);
	eq();
	push_offset(L00288);
	jc(0x0);
	push_offset(L002a5);
	jmp();

L0019d:
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L0108b);
	call();
	push_base_offset(0x48);
	move_arg(0x2);
	push_offset(L002a5);
	jmp();

L001be:
	push_byte(0x20);
	push_byte(0x0);
	add();
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	move(0x1);
	push_word(0x4ac);
	load(0x2);
	push_offset(L002a5);
	jc(0x1);
	push_word(0x4b0);
	push_byte(0x1);
	move(0x2);
	push_offset(L002a5);
	jmp();

L001e4:
	push_word(0x4000);
	push_byte(0x0);
	sys1(0xa1);
	push_offset(L002a5);
	jmp();

L001ef:
	push_word(0x40c);
	push_word(0x40c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_word(0x414);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L002b0);
	call();
	push_offset(L002a5);
	jmp();

L0021d:
	push_word(0x410);
	push_word(0x410);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L002a5);
	jmp();

L0022e:
	push_dword(0x42768);
	push_byte(0x5);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L002a5);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x5);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x48);
	push_offset(L002a5);
	jmp();

L00263:
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L002a5);
	jc(0x0);
	push_word(0x918);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_offset(L002a5);
	jmp();

L00288:
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L002a5);
	jc(0x0);
	push_word(0x918);
	push_byte(0x0);
	move(0x2);
	push_offset(L002a5);
	jmp();

L002a5:
	push_base_offset(0x48);
	load(0x2);
	load_base();
	push_byte(0x4c);
	sub();
	store_base();
	ret();

L002b0:
	load_base();
	push_byte(0x54);
	add();
	store_base();
	push_base_offset(0x54);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x23);
	eq();
	bool_and();
	push_offset(L006f2);
	jc(0x0);
	push_word(0x4e8);
	load(0x2);
	push_offset(L005b3);
	jc(0x1);
	push_word(0x504);
	load(0x2);
	push_offset(L01085);
	jc(0x0);
	push_word(0xb68);
	load(0x2);
	push_offset(L01085);
	jc(0x0);
	push_word(0x450);
	load(0x2);
	push_offset(L01085);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0xb);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x0);
	push_word(0x45c);
	load(0x2);
	push_word(0x460);
	load(0x2);
	bool_and();
	push_offset(L01085);
	jc(0x0);
	push_word(0x510);
	load(0x2);
	push_offset(L01085);
	jc(0x0);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_byte(0x0);
	push_offset(L00338);
	jc(0x1);

L00338:
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x7b);
	eq();
	push_offset(L00379);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L003d7);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L003d7);
	jc(0x1);
	push_word(0x920);
	load(0x2);
	push_offset(L003d7);
	jc(0x1);
	push_word(0x924);
	push_byte(0x1);
	move(0x2);
	push_offset(L003d7);
	jmp();

L00379:
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x46);
	eq();
	push_offset(L003d7);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L003d7);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L003d7);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x244d0);
	add();
	load(0x2);
	push_offset(L003d7);
	jc(0x1);
	push_word(0xb8c);
	load(0x2);
	push_offset(L003d7);
	jc(0x1);
	push_word(0xb90);
	push_byte(0x1);
	move(0x2);
	push_dword(0x42764);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x4c);

L003d7:
	push_byte(0x10);
	sys1(0x11);
	push_base_offset(0x50);
	move_arg(0x2);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x70);
	eq();
	push_base_offset(0x50);
	load(0x2);
	bool_and();
	push_offset(L00f6f);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x1);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L00c5a);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L00d76);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x3);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L00bf9);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x4);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L00b83);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x5);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L00712);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x6);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L00a57);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x7);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L00cad);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x8);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L007c7);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L0089b);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0xa);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L01004);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0xb);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L006f2);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_offset(L011e6);
	call();
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00712);
	jc(0x0);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L00c5a);
	jc(0x0);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00bf9);
	jc(0x0);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x5);
	eq();
	push_offset(L00b83);
	jc(0x0);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00d76);
	jc(0x0);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x6);
	eq();
	push_offset(L00ea2);
	jc(0x0);
	push_offset(L01085);
	jmp();

L005b3:
	push_word(0x450);
	load(0x2);
	push_offset(L01085);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0xb);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x0);
	push_word(0x45c);
	load(0x2);
	push_word(0x460);
	load(0x2);
	bool_and();
	push_offset(L01085);
	jc(0x0);
	push_byte(0x0);
	push_offset(L01085);
	jc(0x0);
	push_word(0x41c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0063c);
	jc(0x1);
	push_word(0x438);
	load(0x2);
	push_offset(L0063c);
	jc(0x1);
	push_dword(0x46330);
	load(0x2);
	push_word(0x400);
	geq();
	push_offset(L01085);
	jc(0x0);
	push_dword(0x46334);
	push_dword(0x46330);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x54);
	load(0x2);
	move(0x2);
	push_dword(0x46330);
	push_dword(0x46330);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L01085);
	jmp();

L0063c:
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x5);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L00712);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x6);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L00a57);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L0089b);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0xb);
	add();
	load(0x0);
	push_word(0xff);
	and();
	eq();
	push_word(0x418);
	load(0x2);
	bool_and();
	push_offset(L006f2);
	jc(0x0);
	push_offset(L01085);
	jmp();
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x7b);
	eq();
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x2d);
	eq();
	bool_or();
	push_word(0x438);
	load(0x2);
	push_word(0x4ac);
	load(0x2);
	bool_or();
	push_word(0x4d8);
	load(0x2);
	bool_or();
	push_word(0x4dc);
	load(0x2);
	bool_or();
	bool_and();
	push_offset(L00ed9);
	jc(0x0);
	push_offset(L01085);
	jmp();

L006f2:
	push_word(0x4000);
	push_byte(0x0);
	sys1(0xa1);
	push_offset(L01085);
	jmp();
	push_byte(0x20);
	push_byte(0x20);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L01085);
	jc(0x1);
	sys1(0x65);
	push_offset(L01085);
	jmp();

L00712:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L0078d);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L00749);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x1e);
	move(0x2);
	push_offset(L01085);
	jmp();

L00749:
	push_word(0xb84);
	load(0x2);
	push_offset(L00760);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x7);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00760:
	push_word(0x4ac);
	load(0x2);
	push_word(0x4d8);
	load(0x2);
	bool_or();
	push_word(0x4dc);
	load(0x2);
	bool_or();
	push_word(0x4e0);
	load(0x2);
	bool_or();
	push_offset(L01085);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	sys1(0x48);
	push_offset(L01085);
	jmp();

L0078d:
	push_word(0x41c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_word(0x438);
	load(0x2);
	push_offset(L00749);
	jc(0x1);
	push_offset(L01085);
	jmp();
	push_base_offset(0x40);
	push_dword(0x10000000);
	push_byte(0x3);
	push_byte(0x1);
	cmd_0c(0x2, 0x3);
	push_word(0x43c);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x40);
	sys1(0xac);
	push_offset(L01085);
	jmp();

L007c7:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0xe0);
	add();
	load(0x2);
	push_word(0x420);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_word(0x4ec);
	load(0x2);
	push_word(0x420);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	bool_or();
	push_word(0xb04);
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L0082d);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x1);
	move(0x2);
	push_offset(L01085);
	jmp();

L0082d:
	push_word(0x4ac);
	load(0x2);
	push_word(0xb84);
	load(0x2);
	bool_or();
	push_word(0x4dc);
	load(0x2);
	bool_or();
	push_word(0x4e0);
	load(0x2);
	bool_or();
	push_offset(L00856);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x1);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00856:
	push_word(0x4d8);
	load(0x2);
	push_offset(L00886);
	jc(0x1);
	push_word(0x464);
	load(0x2);
	push_byte(0x2);
	eq();
	push_byte(0x1);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x4c);
	move_arg(0x2);
	push_word(0x468);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00886:
	push_word(0xbf4);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xbf8);
	push_byte(0x0);
	move(0x2);
	push_offset(L01085);
	jmp();

L0089b:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00968);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0xdc);
	add();
	load(0x2);
	push_word(0x420);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_word(0x4ec);
	load(0x2);
	push_word(0x420);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	bool_or();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L008fa);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x2);
	move(0x2);
	push_offset(L01085);
	jmp();

L008fa:
	push_word(0x4ac);
	load(0x2);
	push_word(0xb84);
	load(0x2);
	bool_or();
	push_word(0x4dc);
	load(0x2);
	bool_or();
	push_word(0x4e0);
	load(0x2);
	bool_or();
	push_offset(L00923);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x2);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00923:
	push_word(0x4d8);
	load(0x2);
	push_offset(L00953);
	jc(0x1);
	push_word(0x464);
	load(0x2);
	push_byte(0x1);
	eq();
	push_byte(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x4c);
	move_arg(0x2);
	push_word(0x468);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00953:
	push_word(0xbf4);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xbf8);
	push_byte(0x1);
	move(0x2);
	push_offset(L01085);
	jmp();

L00968:
	push_word(0x41c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_word(0x438);
	load(0x2);
	push_offset(L008fa);
	jc(0x1);
	push_offset(L01085);
	jmp();
	push_base_offset(0x40);
	push_dword(0x10000000);
	push_byte(0x1);
	push_byte(0x1);
	cmd_0c(0x2, 0x3);
	push_word(0x43c);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x40);
	sys1(0xac);
	push_offset(L01085);
	jmp();
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00a1d);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L009d9);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x0);
	move(0x2);
	push_offset(L01085);
	jmp();

L009d9:
	push_word(0x4d8);
	load(0x2);
	push_word(0xb84);
	load(0x2);
	bool_or();
	push_word(0x4dc);
	load(0x2);
	bool_or();
	push_word(0x4e0);
	load(0x2);
	bool_or();
	push_offset(L00a02);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x0);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00a02:
	push_word(0x4ac);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00a1d:
	push_word(0x41c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_word(0x438);
	load(0x2);
	push_offset(L009d9);
	jc(0x1);
	push_offset(L01085);
	jmp();
	push_base_offset(0x40);
	push_dword(0x10000000);
	push_byte(0x3);
	push_byte(0x1);
	cmd_0c(0x2, 0x3);
	push_word(0x43c);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x40);
	sys1(0xac);
	push_offset(L01085);
	jmp();

L00a57:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00ace);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L00a8e);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x18);
	move(0x2);
	push_offset(L01085);
	jmp();

L00a8e:
	push_word(0x4d8);
	load(0x2);
	push_word(0xb84);
	load(0x2);
	bool_or();
	push_word(0x4dc);
	load(0x2);
	bool_or();
	push_word(0x4e0);
	load(0x2);
	bool_or();
	push_offset(L00ab7);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x4);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00ab7:
	push_word(0x4ac);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x4);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00ace:
	push_word(0x41c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_word(0x438);
	load(0x2);
	push_offset(L00a8e);
	jc(0x1);
	push_offset(L01085);
	jmp();
	push_base_offset(0x40);
	push_dword(0x10000000);
	push_byte(0xd);
	push_byte(0x1);
	cmd_0c(0x2, 0x3);
	push_word(0x43c);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x40);
	sys1(0xac);
	push_offset(L01085);
	jmp();
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L00b3f);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x1b);
	move(0x2);
	push_offset(L01085);
	jmp();

L00b3f:
	push_word(0x4ac);
	load(0x2);
	push_word(0x4d8);
	load(0x2);
	bool_or();
	push_word(0xb84);
	load(0x2);
	bool_or();
	push_word(0x4dc);
	load(0x2);
	bool_or();
	push_offset(L00b68);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x5);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00b68:
	push_word(0x4e0);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00b83:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xbbc);
	load(0x2);
	push_offset(L00bba);
	jc(0x1);
	push_word(0xbc0);
	push_byte(0x1);
	move(0x2);
	push_offset(L01085);
	jmp();

L00bba:
	push_word(0xbac);
	load(0x2);
	push_offset(L00bcf);
	jc(0x1);
	push_word(0xbb0);
	push_byte(0x1);
	move(0x2);
	push_offset(L00bd9);
	jmp();

L00bcf:
	push_word(0x4ec);
	load(0x2);
	push_offset(L00be4);
	jc(0x1);

L00bd9:
	push_word(0xbec);
	push_byte(0x7);
	move(0x2);
	push_offset(L01085);
	jmp();

L00be4:
	push_word(0xbf4);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xbf8);
	push_byte(0x4);
	move(0x2);
	push_offset(L01085);
	jmp();

L00bf9:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xbac);
	load(0x2);
	push_offset(L00c30);
	jc(0x1);
	push_word(0xbb0);
	push_byte(0x1);
	move(0x2);
	push_offset(L01085);
	jmp();

L00c30:
	push_word(0xbbc);
	load(0x2);
	push_offset(L00c45);
	jc(0x1);
	push_word(0xbc0);
	push_byte(0x1);
	move(0x2);
	push_offset(L00c4f);
	jmp();

L00c45:
	push_word(0x4ec);
	load(0x2);
	push_offset(L01085);
	jc(0x1);

L00c4f:
	push_word(0xbec);
	push_byte(0x6);
	move(0x2);
	push_offset(L01085);
	jmp();

L00c5a:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xba0);
	push_byte(0x0);
	move(0x2);
	push_word(0x4ec);
	load(0x2);
	push_offset(L00c98);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x4);
	move(0x2);
	push_offset(L01085);
	jmp();

L00c98:
	push_word(0xbf4);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xbf8);
	push_byte(0x7);
	move(0x2);
	push_offset(L01085);
	jmp();

L00cad:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xba4);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L01085);
	jc(0x0);
	push_word(0x4ec);
	load(0x2);
	push_offset(L00cfa);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x5);
	move(0x2);
	push_offset(L01085);
	jmp();

L00cfa:
	push_word(0x4ac);
	load(0x2);
	push_word(0x4d8);
	load(0x2);
	bool_or();
	push_word(0xb84);
	load(0x2);
	bool_or();
	push_word(0x4dc);
	load(0x2);
	bool_or();
	push_word(0x4e0);
	load(0x2);
	bool_or();
	push_offset(L01085);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0xb);
	sys1(0x48);
	push_offset(L01085);
	jmp();
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xab8);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L01085);
	jc(0x0);
	push_word(0x4ec);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x1a);
	move(0x2);
	push_offset(L01085);
	jmp();

L00d76:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00df1);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L00dad);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x3);
	move(0x2);
	push_offset(L01085);
	jmp();

L00dad:
	push_word(0x4ac);
	load(0x2);
	push_word(0x4d8);
	load(0x2);
	bool_or();
	push_word(0x4dc);
	load(0x2);
	bool_or();
	push_word(0x4e0);
	load(0x2);
	bool_or();
	push_offset(L00dd6);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x6);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00dd6:
	push_word(0xb84);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00df1:
	push_offset(L01085);
	jmp();
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0xe0);
	add();
	load(0x2);
	push_word(0x420);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_word(0xb04);
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L01085);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x8);
	move(0x2);
	push_offset(L01085);
	jmp();
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0xdc);
	add();
	load(0x2);
	push_word(0x420);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_word(0xbe8);
	load(0x2);
	bool_and();
	push_offset(L01085);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x9);
	move(0x2);
	push_offset(L01085);
	jmp();

L00ea2:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xbec);
	push_byte(0xf);
	move(0x2);
	push_offset(L01085);
	jmp();

L00ed9:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00f54);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L00f10);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x10);
	move(0x2);
	push_offset(L01085);
	jmp();

L00f10:
	push_word(0x4ac);
	load(0x2);
	push_word(0x4d8);
	load(0x2);
	bool_or();
	push_word(0xb84);
	load(0x2);
	bool_or();
	push_word(0x4e0);
	load(0x2);
	bool_or();
	push_offset(L00f39);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x3);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00f39:
	push_word(0x4dc);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	sys1(0x48);
	push_offset(L01085);
	jmp();

L00f54:
	push_word(0x41c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_word(0x438);
	load(0x2);
	push_offset(L00f10);
	jc(0x1);
	push_offset(L01085);
	jmp();

L00f6f:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L00fa6);
	jc(0x1);
	push_word(0xbec);
	push_byte(0xc);
	move(0x2);
	push_offset(L01085);
	jmp();

L00fa6:
	push_word(0xbf4);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xbf8);
	push_byte(0xa);
	move(0x2);
	push_offset(L01085);
	jmp();
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x8540);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0xbec);
	push_byte(0x19);
	move(0x2);
	push_offset(L01085);
	jmp();

L01004:
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L0106a);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01085);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L0103b);
	jc(0x1);
	push_word(0xbec);
	push_byte(0xd);
	move(0x2);
	push_offset(L01085);
	jmp();

L0103b:
	push_word(0x4ac);
	load(0x2);
	push_word(0x4d8);
	load(0x2);
	bool_or();
	push_word(0xb84);
	load(0x2);
	bool_or();
	push_word(0x4dc);
	load(0x2);
	bool_or();
	push_word(0x4e0);
	load(0x2);
	bool_or();
	push_offset(L01085);
	jc(0x1);
	push_word(0x468);
	load(0x2);
	push_byte(0xc);
	sys1(0x48);
	push_offset(L01085);
	jmp();

L0106a:
	push_word(0x41c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01085);
	jc(0x1);
	push_word(0x438);
	load(0x2);
	push_offset(L0103b);
	jc(0x1);
	push_offset(L01085);
	jmp();

L01085:
	load_base();
	push_byte(0x54);
	sub();
	store_base();
	ret();

L0108b:
	load_base();
	push_byte(0x60);
	add();
	store_base();
	push_base_offset(0x5c);
	move_arg(0x2);
	push_base_offset(0x60);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);
	push_word(0x444);
	load(0x2);
	push_offset(L011db);
	jc(0x0);
	push_base_offset(0x60);
	load(0x2);
	push_word(0x4000);
	eq();
	push_offset(L010d9);
	jc(0x0);
	push_base_offset(0x60);
	load(0x2);
	push_word(0x4001);
	eq();
	push_offset(L01133);
	jc(0x0);
	push_base_offset(0x60);
	load(0x2);
	push_word(0x7fff);
	eq();
	push_offset(L011c2);
	jc(0x0);
	push_offset(L011db);
	jmp();

L010d9:
	push_byte(0x23);
	sys1(0x11);
	push_offset(L01131);
	jc(0x0);
	push_base_offset(0x5c);
	load(0x2);
	push_offset(L01126);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0x8);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L011db);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("endsys._bp");
	push_word(0x200);
	push_dword(0x8000);
	push_dword(0x8000);
	sys1(0x44);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	sys1(0x5e);
	push_offset(L011db);
	jmp();

L01126:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_offset(L011db);
	jmp();

L01131:
	sys1(0x6a);

L01133:
	push_word(0x450);
	load(0x2);
	push_offset(L011db);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0x8);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L011db);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0x9);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L011db);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L011db);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0xb);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L011db);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("loadusdt._bp");
	push_word(0x200);
	push_dword(0x8000);
	push_dword(0x8000);
	sys1(0x44);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x5c);
	load(0x2);
	sys1(0x48);
	push_base_offset(0x8);
	load(0x2);
	sys1(0x5e);
	push_offset(L011db);
	jmp();

L011c2:
	push_dword(0x15d624);
	push_byte(0x1);
	move(0x2);
	push_word(0xff0);
	sys1(0x18);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_offset(L011db);
	jmp();

L011db:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x60);
	sub();
	store_base();
	ret();

L011e6:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_word(0x91c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_word(0x91c);
	load(0x2);
	push_byte(0x2);
	eq();
	bool_or();
	push_word(0x91c);
	load(0x2);
	push_byte(0x3);
	eq();
	bool_or();
	push_offset(L01256);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0xe);
	eq();
	push_byte(0x20);
	push_word(0xc6);
	add();
	push_byte(0x1);
	add();
	load(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0xf);
	eq();
	push_byte(0x20);
	push_word(0xc6);
	add();
	push_byte(0x2);
	add();
	load(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);

L01256:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x7);
	add();
	eq();
	push_offset(L015b7);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x6);
	add();
	eq();
	push_offset(L015b7);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x16);
	add();
	eq();
	push_offset(L015b7);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L015b7);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x8);
	add();
	eq();
	push_offset(L01410);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	add();
	eq();
	push_offset(L01383);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x3);
	add();
	eq();
	push_offset(L013e1);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xc);
	add();
	eq();
	push_offset(L013b2);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xf);
	add();
	eq();
	push_offset(L0143f);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x12);
	add();
	eq();
	push_offset(L0146e);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x17);
	add();
	eq();
	push_offset(L0149d);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1b);
	add();
	eq();
	push_offset(L014cc);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1e);
	add();
	eq();
	push_offset(L014fb);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x21);
	add();
	eq();
	push_offset(L0152a);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x24);
	add();
	eq();
	push_offset(L01559);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x27);
	add();
	eq();
	push_offset(L01588);
	jc(0x0);
	push_offset(L01627);
	jmp();
	push_offset(L015b7);
	jmp();

L01383:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x51c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x51c);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L013b2:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	load(0x2);
	add();
	move(0x2);
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x520);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L013e1:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x524);
	load(0x2);
	add();
	move(0x2);
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x524);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L01410:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x528);
	load(0x2);
	add();
	move(0x2);
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x528);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L0143f:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x52c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x52c);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L0146e:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x530);
	load(0x2);
	add();
	move(0x2);
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x530);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L0149d:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x534);
	load(0x2);
	add();
	move(0x2);
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x534);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L014cc:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x538);
	load(0x2);
	add();
	move(0x2);
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x538);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L014fb:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x53c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x53c);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L0152a:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x540);
	load(0x2);
	add();
	move(0x2);
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x540);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L01559:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x544);
	load(0x2);
	add();
	move(0x2);
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x544);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L01588:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x548);
	load(0x2);
	add();
	move(0x2);
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x548);
	move_arg(0x2);
	push_offset(L015b7);
	jmp();

L015b7:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L015f2);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	geq();
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L015f2);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	snd1(0x26);

L015f2:
	push_base_offset(0x8);
	load(0x2);
	push_word(0x80);
	push_byte(0x40);
	snd1(0x24);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x49c);
	load(0x2);
	ternary();
	push_word(0x49c);
	move_arg(0x2);

L01627:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
