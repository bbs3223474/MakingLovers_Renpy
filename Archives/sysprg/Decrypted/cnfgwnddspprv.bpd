	load_base();
	push_byte(0x5c);
	add();
	store_base();

L00005:
	push_word(0x4f4);
	load(0x2);
	push_offset(L00377);
	jc(0x0);
	push_word(0x4b4);
	load(0x2);
	push_offset(L00377);
	jc(0x0);
	push_base_offset(0x5c);
	sys1(0x49);
	push_offset(L00029);
	jc(0x0);
	sys1(0x5f);
	push_offset(L00005);
	jmp();

L00029:
	push_base_offset(0x58);
	push_base_offset(0x5c);
	load(0x2);
	move(0x2);
	push_base_offset(0x54);
	push_word(0x1100);
	push_byte(0x68);
	add();
	grp1(0x16);
	push_base_offset(0x10);
	push_byte(0x0);
	push_word(0x7d0);
	push_word(0xfa0);
	push_byte(0x0);
	cmd_0c(0x2, 0x4);
	push_byte(0x20);
	push_word(0x88);
	add();
	load(0x1);
	push_byte(0x3);
	eq();
	push_byte(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x2c);
	move_arg(0x2);

L00063:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L00377);
	jc(0x0);
	push_word(0x4b4);
	load(0x2);
	push_offset(L00377);
	jc(0x0);
	push_word(0x4bc);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L000f9);
	jc(0x1);
	push_base_offset(0x2c);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);
	push_word(0x12c);
	push_offset(L0037d);
	call();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x20);
	push_base_offset(0x54);
	push_byte(0x8);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c);
	push_base_offset(0x54);
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x18);
	push_word(0x100);
	move(0x2);
	push_base_offset(0x14);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	sys1(0x4);
	push_base_offset(0x38);
	move_arg(0x2);
	push_word(0x4bc);
	push_byte(0x0);
	move(0x2);
	push_offset(L001b0);
	jmp();

L000f9:
	push_word(0x4bc);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L001b0);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L001a9);
	jc(0x0);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L001a9);
	jc(0x0);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	sub();
	push_base_offset(0x28);
	load(0x2);
	ternary();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_byte(0x0);
	push_base_offset(0x28);
	load(0x2);
	ternary();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	push_byte(0x3);
	move(0x2);
	push_word(0x12c);
	push_offset(L0037d);
	call();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x20);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c);
	push_base_offset(0x54);
	push_byte(0x8);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	push_word(0x100);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x38);
	move_arg(0x2);

L001a9:
	push_word(0x4bc);
	push_byte(0x0);
	move(0x2);

L001b0:
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00063);
	jc(0x0);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_byte(0x20);
	push_word(0x88);
	add();
	load(0x1);
	push_byte(0x3);
	eq();
	bool_and();
	push_offset(L00063);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	geq();
	push_offset(L00063);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x3);
	eq();
	bool_or();
	push_offset(L00310);
	jc(0x1);
	push_base_offset(0x5c);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	sub();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x5c);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x28);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x5c);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	leq();
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	ternary();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x34);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	mul();
	push_base_offset(0x24);
	load(0x2);
	div();
	add();
	move(0x2);
	push_base_offset(0x30);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	mul();
	push_base_offset(0x24);
	load(0x2);
	div();
	add();
	move(0x2);
	push_word(0x1100);
	push_byte(0x68);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1100);
	push_byte(0x68);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x0);
	push_word(0x1100);
	push_byte(0x67);
	add();
	push_byte(0x1);
	push_base_offset(0x30);
	load(0x2);
	grp1(0x18);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x54);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x54);
	push_byte(0xc);
	add();
	load(0x2);
	grp1(0x53);
	push_byte(0x0);
	grp1(0x0);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	geq();
	push_offset(L00063);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_byte(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x38);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x10);
	push_byte(0x20);
	push_word(0x88);
	add();
	load(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	move(0x2);
	push_offset(L00063);
	jmp();

L00310:
	push_base_offset(0x2c);
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);
	push_word(0x12c);
	push_offset(L0037d);
	call();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x20);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c);
	push_base_offset(0x54);
	push_byte(0x8);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	push_word(0x100);
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00063);
	jmp();

L00377:
	load_base();
	push_byte(0x5c);
	sub();
	store_base();
	ret();

L0037d:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L003a1);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_offset(L003bd);
	jmp();

L003a1:
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L003bd);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);

L003bd:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
