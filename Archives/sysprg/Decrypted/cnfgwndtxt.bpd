	load_base();
	push_word(0x265c);
	add();
	store_base();
	push_base_offset(0x2658);
	move_arg(0x2);
	push_base_offset(0x265c);
	move_arg(0x2);
	push_base_offset(0x262c);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2628);
	push_byte(0x0);
	move(0x2);
	push_string("sysprg.arc");
	push_string("environ._bp");
	sys1(0x40);
	push_base_offset(0x248c);
	move_arg(0x2);
	push_string("sysprg.arc");
	push_string("overlap._bp");
	sys1(0x40);
	push_base_offset(0x2488);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x72);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_byte(0x20);
	push_byte(0x10);
	add();
	load(0x1);
	ternary();
	push_base_offset(0x2638);
	move_arg(0x2);
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x248c);
	load(0x2);
	call();
	push_word(0x4c0);
	push_byte(0x0);
	move(0x2);
	push_word(0x4c4);
	push_byte(0x0);
	move(0x2);
	push_word(0x4c8);
	push_byte(0x0);
	move(0x2);
	push_word(0x4cc);
	push_byte(0x0);
	move(0x2);
	push_word(0x4d4);
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	move(0x2);
	push_string("sysprg.arc");
	push_string("cnfgwndtxtprv._bp");
	push_word(0x100);
	push_word(0x2000);
	push_word(0x2000);
	sys1(0x44);
	push_word(0x4d0);
	move_arg(0x2);
	push_word(0x1180);
	push_byte(0x61);
	add();
	push_word(0xde);
	push_byte(0x17);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_byte(0x61);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x2654);
	push_word(0x1100);
	push_byte(0x64);
	add();
	grp1(0x16);
	push_word(0x1180);
	push_byte(0x62);
	add();
	push_base_offset(0x2654);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x2654);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_byte(0x62);
	add();
	push_string("あいうえお");
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L0599f);
	call();
	push_word(0x1180);
	push_byte(0x6b);
	add();
	push_word(0x108);
	push_byte(0x10);
	push_byte(0x8);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x2654);
	push_word(0x1180);
	push_byte(0x5b);
	add();
	grp1(0x16);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_base_offset(0x2654);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x2654);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_word(0x1180);
	push_byte(0x5b);
	add();
	grp2(0x1f);
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x5b);
	add();
	push_byte(0x1);
	add();
	grp2(0x1f);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_byte(0x1c);
	push_offset(L056f8);
	call();
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x2654);
	push_word(0x1180);
	push_byte(0x59);
	add();
	grp1(0x16);
	push_word(0x1180);
	push_byte(0x67);
	add();
	push_base_offset(0x2654);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x2654);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_byte(0x67);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_byte(0x67);
	add();
	push_string("サンプルテキスト");
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_offset(L05828);
	call();
	push_base_offset(0x2654);
	push_word(0x1180);
	push_byte(0x59);
	add();
	grp1(0x16);
	push_word(0x1180);
	push_byte(0x69);
	add();
	push_base_offset(0x2654);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x2654);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_byte(0x69);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_byte(0x69);
	add();
	push_string("サンプルテキスト");
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_offset(L05828);
	call();
	push_word(0x910);
	load(0x2);
	push_byte(0xc);
	gt();
	push_byte(0x5);
	push_byte(0x19);
	push_byte(0xc);
	push_byte(0x1);
	sub();
	mul();
	add();
	push_byte(0x5);
	push_byte(0x19);
	push_word(0x910);
	load(0x2);
	push_byte(0x1);
	sub();
	mul();
	add();
	ternary();
	push_base_offset(0x2484);
	move_arg(0x2);
	push_base_offset(0x2484);
	push_base_offset(0x2484);
	load(0x2);
	push_byte(0x20);
	add();
	move(0x2);
	push_word(0x1180);
	push_byte(0x6c);
	add();
	push_word(0x1180);
	push_byte(0x5e);
	add();
	grp2(0x1f);
	push_base_offset(0x2480);
	push_word(0x11b);
	move(0x2);
	push_word(0x1180);
	push_byte(0x6d);
	add();
	push_byte(0x16);
	push_base_offset(0x2480);
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_byte(0x6d);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x910);
	load(0x2);
	push_byte(0xc);
	gt();
	push_word(0x108);
	push_word(0x108);
	ternary();
	push_base_offset(0x2618);
	move_arg(0x2);
	push_base_offset(0x2624);
	push_word(0x1180);
	push_byte(0x70);
	add();
	move(0x2);
	push_base_offset(0x2630);
	push_byte(0x0);
	move(0x2);

L00359:
	push_base_offset(0x2624);
	load(0x2);
	push_base_offset(0x2618);
	load(0x2);
	push_byte(0x10);
	push_byte(0x8);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x2624);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x2618);
	load(0x2);
	push_byte(0x10);
	push_byte(0x8);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x2624);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x2618);
	load(0x2);
	push_byte(0x10);
	push_byte(0x8);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x2624);
	push_base_offset(0x2624);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x2630);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0xc);
	lt();
	push_offset(L00359);
	jc(0x0);
	push_word(0x1180);
	push_byte(0x6e);
	add();
	push_word(0x500);
	push_word(0x2d0);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_byte(0x6e);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_byte(0x6e);
	add();
	push_byte(0x1);
	add();
	push_word(0x500);
	push_word(0x2d0);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_byte(0x6e);
	add();
	push_byte(0x1);
	add();
	push_dword(-0x1000000);
	grp1(0x13);
	push_base_offset(0x2654);
	push_word(0x1180);
	push_byte(0x6c);
	add();
	grp1(0x16);
	push_word(0x1180);
	push_word(0x9f);
	add();
	push_base_offset(0x2654);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x2654);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_word(0x9f);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_byte(0x6e);
	add();
	push_byte(0x1);
	add();
	push_word(0xf6);
	push_word(0x8b);
	push_word(0x1180);
	push_word(0x9f);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_word(0x9f);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_word(0x98);
	add();
	push_word(0x1b0);
	push_byte(0x74);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_word(0x98);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_word(0x99);
	add();
	push_word(0x500);
	push_word(0x2d0);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_word(0x99);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_word(0x99);
	add();
	push_byte(0x1);
	add();
	push_word(0x500);
	push_word(0x2d0);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_word(0x99);
	add();
	push_byte(0x1);
	add();
	push_dword(-0x1000000);
	grp1(0x13);
	push_word(0x1180);
	push_word(0x9f);
	add();
	push_word(0x1b4);
	push_byte(0x14);
	add();
	push_word(0xc2);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_word(0x9f);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_word(0x99);
	add();
	push_byte(0x1);
	add();
	push_word(0x31b);
	push_byte(0xa);
	sub();
	push_word(0x185);
	push_word(0x1180);
	push_word(0x9f);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_word(0x9f);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_word(0x9b);
	add();
	push_byte(0x30);
	push_byte(0x1d);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_word(0x9b);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_word(0x9b);
	add();
	push_byte(0x1);
	add();
	push_byte(0x30);
	push_byte(0x1d);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_word(0x9b);
	add();
	push_byte(0x1);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_word(0x9d);
	add();
	push_byte(0x30);
	push_byte(0x1d);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_word(0x9d);
	add();
	push_byte(0x1);
	add();
	push_byte(0x30);
	push_byte(0x1d);
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0xa74);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x247c);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x1e5c);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x1a88);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x19c4);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x1900);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0x5);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x183c);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0x6);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x15f0);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0x7);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x13a4);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0x9);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x121c);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0x8);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x1094);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0xa);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0xf0c);
	move(0x2);
	push_base_offset(0xa74);
	push_byte(0xb);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0xcc0);
	move(0x2);
	push_base_offset(0x774);
	push_byte(0x0);
	add();
	push_byte(0xc);
	move(0x2);
	push_base_offset(0x774);
	push_byte(0x4);
	add();
	push_base_offset(0xa74);
	move(0x2);
	push_base_offset(0x774);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x774);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x774);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x774);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x774);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x774);
	push_byte(0x1c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x774);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x774);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x774);
	push_base_offset(0x2658);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x1);
	push_word(0x470);
	load(0x2);
	call();
	push_base_offset(0x774);
	push_byte(0x20);
	push_base_offset(0x2658);
	load(0x2);
	push_offset(L023fc);
	call();
	push_base_offset(0x544);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x540);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x53c);
	push_byte(0x0);
	move(0x2);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x80);
	push_base_offset(0x538);
	move_arg(0x2);
	push_base_offset(0x538);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x870);
	grp1(0x85);
	push_base_offset(0x538);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x0);
	add();
	grp1(0x86);
	push_base_offset(0x538);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0x88);
	push_base_offset(0x538);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x88);
	push_base_offset(0x538);
	load(0x2);
	push_byte(0x0);
	grp2(0x89);
	push_base_offset(0x538);
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_base_offset(0x538);
	load(0x2);
	push_byte(0x1);
	grp3(0x88);
	push_base_offset(0x538);
	load(0x2);
	push_word(0x31d);
	push_word(0x86);
	push_word(0x1100);
	push_byte(0x62);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp3(0x89);
	push_base_offset(0x538);
	load(0x2);
	push_byte(0x20);
	push_offset(L05b40);
	call();
	push_base_offset(0x538);
	load(0x2);
	push_base_offset(0x774);
	grp1(0xb7);
	push_base_offset(0x74c);
	push_base_offset(0x544);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x538);
	load(0x2);
	move(0x2);
	push_base_offset(0x544);
	push_base_offset(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2654);
	push_word(0x1100);
	push_byte(0x62);
	add();
	grp1(0x16);
	push_base_offset(0x2634);
	push_base_offset(0x2654);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_word(0x500);
	div();
	move(0x2);
	push_byte(0x1c);
	push_byte(0x9);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x9);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	push_byte(0x2);
	push_byte(0x9);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	add();
	grp1(0x80);
	push_base_offset(0x534);
	move_arg(0x2);
	push_base_offset(0x534);
	load(0x2);
	push_word(0x31d);
	push_word(0x118);
	push_byte(0x0);
	add();
	push_base_offset(0x2634);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_word(0x86);
	push_word(0x252);
	push_byte(0x0);
	add();
	push_base_offset(0x2634);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x877);
	grp1(0x85);
	push_base_offset(0x534);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp1(0x86);
	push_base_offset(0x534);
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x9);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x88);
	push_base_offset(0x534);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1c);
	push_byte(0x9);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x9);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	push_byte(0x2);
	push_byte(0x9);
	push_byte(0x64);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	add();
	grp1(0x88);
	push_base_offset(0x534);
	load(0x2);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	grp2(0x89);
	push_base_offset(0x534);
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_base_offset(0x74c);
	push_base_offset(0x544);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x534);
	load(0x2);
	move(0x2);
	push_base_offset(0x544);
	push_base_offset(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	grp1(0x50);
	push_base_offset(0x530);
	move_arg(0x2);
	push_base_offset(0x530);
	load(0x2);
	push_word(0x31d);
	push_word(0x110);
	push_base_offset(0x2634);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_word(0x86);
	push_word(0x22c);
	push_base_offset(0x2634);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_byte(0x2);
	sub();
	push_word(0x1180);
	push_byte(0x62);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x877);
	grp1(0x56);
	push_base_offset(0x530);
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x62);
	add();
	grp1(0x38);
	push_base_offset(0x644);
	push_base_offset(0x53c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x530);
	load(0x2);
	move(0x2);
	push_base_offset(0x53c);
	push_base_offset(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x260c);
	push_word(0x11d);
	push_word(0x11d);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x25cc);
	push_word(0x122);
	push_word(0x154);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x500);
	push_byte(0xa);
	push_byte(0xa);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4f8);
	push_byte(0x5);
	push_byte(0x6);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4f0);
	push_byte(0x20);
	push_byte(0x10);
	add();
	push_byte(0x20);
	push_byte(0x12);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x52c);
	push_word(0x1180);
	push_byte(0x3f);
	add();
	grp1(0x16);
	push_base_offset(0x2630);
	push_byte(0x0);
	move(0x2);

L009ab:
	grp1(0x50);
	push_base_offset(0x514);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x514);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x3f);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x880);
	grp1(0x56);
	push_base_offset(0x514);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp1(0x3c);
	push_base_offset(0x514);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x3f);
	add();
	grp1(0x38);
	push_base_offset(0x514);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xd0);
	push_base_offset(0x50c);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x50c);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x500);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0xd8);
	push_base_offset(0x50c);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0xde);
	push_base_offset(0x52c);
	push_byte(0xc);
	add();
	load(0x2);
	grp1(0xd9);
	push_base_offset(0x50c);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4f0);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	load(0x1);
	push_byte(0x0);
	grp1(0xd6);
	push_base_offset(0x50c);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x260c);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	push_base_offset(0x25cc);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	grp1(0xd5);
	push_base_offset(0x50c);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0xd4);
	push_base_offset(0x514);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x54);
	push_base_offset(0x744);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x514);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x540);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2630);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x2);
	lt();
	push_offset(L009ab);
	jc(0x0);
	grp1(0x50);
	push_base_offset(0x4e8);
	move_arg(0x2);
	push_base_offset(0x4e8);
	load(0x2);
	push_word(0xf6);
	push_word(0xbd);
	push_word(0x1180);
	push_byte(0x67);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x880);
	grp1(0x56);
	push_base_offset(0x4e8);
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x67);
	add();
	grp1(0x38);
	push_base_offset(0x744);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x4e8);
	load(0x2);
	move(0x2);
	push_base_offset(0x540);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	grp1(0x50);
	push_base_offset(0x4e4);
	move_arg(0x2);
	push_base_offset(0x4e4);
	load(0x2);
	push_word(0xf6);
	push_word(0xef);
	push_word(0x1180);
	push_byte(0x69);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x880);
	grp1(0x56);
	push_base_offset(0x4e4);
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x69);
	add();
	grp1(0x38);
	push_base_offset(0x744);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x4e4);
	load(0x2);
	move(0x2);
	push_base_offset(0x540);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x250c);
	push_word(0x1180);
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x3);
	add();
	push_word(0x1180);
	push_byte(0x5);
	add();
	push_word(0x1180);
	push_byte(0x7);
	add();
	push_word(0x1180);
	push_byte(0x9);
	add();
	push_word(0x1180);
	push_byte(0xb);
	add();
	push_word(0x1180);
	push_byte(0xf);
	add();
	push_word(0x1180);
	push_byte(0xd);
	add();
	push_word(0x1180);
	push_byte(0x11);
	add();
	push_word(0x1180);
	push_byte(0x13);
	add();
	cmd_0c(0x2, 0xa);
	push_base_offset(0x260c);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x25cc);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x2630);
	push_byte(0x0);
	move(0x2);

L00c4a:
	push_base_offset(0x4e0);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x744);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x4e0);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x540);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2630);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L00c4a);
	jc(0x0);
	grp1(0x50);
	push_base_offset(0x4b8);
	move_arg(0x2);
	push_base_offset(0x4b8);
	load(0x2);
	push_word(0x500);
	push_byte(0x0);
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0xd);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x880);
	grp1(0x56);
	push_base_offset(0x4b8);
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0xd);
	add();
	grp1(0x38);
	push_base_offset(0x744);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x4b8);
	load(0x2);
	move(0x2);
	push_base_offset(0x540);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	grp1(0x50);
	push_base_offset(0x4b4);
	move_arg(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	push_byte(0xa);
	push_word(0x2b0);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x880);
	grp1(0x56);
	push_base_offset(0x4b4);
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x49);
	add();
	grp1(0x38);
	push_base_offset(0x744);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x4b4);
	load(0x2);
	move(0x2);
	push_base_offset(0x540);
	push_base_offset(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x4e0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x1);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0x1);
	add();
	cmd_0c(0x2, 0x4);
	push_base_offset(0x774);
	push_byte(0x2);
	push_word(0x498);
	load(0x2);
	call();
	push_base_offset(0x2614);
	move_arg(0x2);
	push_base_offset(0x2618);
	move_arg(0x2);
	push_base_offset(0x261c);
	move_arg(0x2);
	push_base_offset(0x2620);
	move_arg(0x2);
	push_base_offset(0x4b0);
	push_byte(0x0);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x2620);
	load(0x2);
	push_base_offset(0x261c);
	load(0x2);
	push_base_offset(0x2618);
	load(0x2);
	push_base_offset(0x2614);
	load(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x98);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0xa0);
	push_base_offset(0x4e0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x3);
	add();
	push_word(0x1180);
	push_byte(0x3);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0x2);
	add();
	cmd_0c(0x2, 0x4);
	push_base_offset(0x774);
	push_byte(0x3);
	push_word(0x498);
	load(0x2);
	call();
	push_base_offset(0x2614);
	move_arg(0x2);
	push_base_offset(0x2618);
	move_arg(0x2);
	push_base_offset(0x261c);
	move_arg(0x2);
	push_base_offset(0x2620);
	move_arg(0x2);
	push_base_offset(0x4b0);
	push_byte(0x1);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x2620);
	load(0x2);
	push_base_offset(0x261c);
	load(0x2);
	push_base_offset(0x2618);
	load(0x2);
	push_base_offset(0x2614);
	load(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x98);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0xa0);
	push_base_offset(0x4e0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x5);
	add();
	push_word(0x1180);
	push_byte(0x5);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0x3);
	add();
	cmd_0c(0x2, 0x4);
	push_base_offset(0x774);
	push_byte(0x4);
	push_word(0x498);
	load(0x2);
	call();
	push_base_offset(0x2614);
	move_arg(0x2);
	push_base_offset(0x2618);
	move_arg(0x2);
	push_base_offset(0x261c);
	move_arg(0x2);
	push_base_offset(0x2620);
	move_arg(0x2);
	push_base_offset(0x4b0);
	push_byte(0x2);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x2620);
	load(0x2);
	push_base_offset(0x261c);
	load(0x2);
	push_base_offset(0x2618);
	load(0x2);
	push_base_offset(0x2614);
	load(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x98);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0xa0);
	push_base_offset(0x4e0);
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x7);
	add();
	push_word(0x1180);
	push_byte(0x7);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0x4);
	add();
	cmd_0c(0x2, 0x4);
	push_base_offset(0x4b0);
	push_byte(0x3);
	push_byte(0x34);
	mul();
	add();
	push_word(0xf6);
	push_word(0x121);
	push_word(0x12c);
	push_byte(0x19);
	push_base_offset(0xa0);
	push_base_offset(0x98);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0xa0);
	push_base_offset(0x4e0);
	push_byte(0x4);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x9);
	add();
	push_word(0x1180);
	push_byte(0x9);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0x5);
	add();
	cmd_0c(0x2, 0x4);
	push_base_offset(0x4b0);
	push_byte(0x4);
	push_byte(0x34);
	mul();
	add();
	push_word(0xf6);
	push_word(0x153);
	push_word(0x12c);
	push_byte(0x19);
	push_base_offset(0xa0);
	push_base_offset(0x98);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0xa0);
	push_base_offset(0x4e0);
	push_byte(0x5);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0xb);
	add();
	push_word(0x1180);
	push_byte(0xb);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0x6);
	add();
	cmd_0c(0x2, 0x4);
	push_base_offset(0x774);
	push_byte(0x7);
	push_word(0x498);
	load(0x2);
	call();
	push_base_offset(0x2614);
	move_arg(0x2);
	push_base_offset(0x2618);
	move_arg(0x2);
	push_base_offset(0x261c);
	move_arg(0x2);
	push_base_offset(0x2620);
	move_arg(0x2);
	push_base_offset(0x4b0);
	push_byte(0x5);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x2620);
	load(0x2);
	push_base_offset(0x261c);
	load(0x2);
	push_base_offset(0x2618);
	load(0x2);
	push_base_offset(0x2614);
	load(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x98);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0xa0);
	push_base_offset(0x4e0);
	push_byte(0x7);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0xd);
	add();
	push_word(0x1180);
	push_byte(0xd);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0x7);
	add();
	cmd_0c(0x2, 0x4);
	push_base_offset(0x774);
	push_byte(0x9);
	push_word(0x498);
	load(0x2);
	call();
	push_base_offset(0x2614);
	move_arg(0x2);
	push_base_offset(0x2618);
	move_arg(0x2);
	push_base_offset(0x261c);
	move_arg(0x2);
	push_base_offset(0x2620);
	move_arg(0x2);
	push_base_offset(0x4b0);
	push_byte(0x7);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x2620);
	load(0x2);
	push_base_offset(0x261c);
	load(0x2);
	push_base_offset(0x2618);
	load(0x2);
	push_base_offset(0x2614);
	load(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x98);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0xa0);
	push_base_offset(0x4e0);
	push_byte(0x6);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0xf);
	add();
	push_word(0x1180);
	push_byte(0xf);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0x8);
	add();
	cmd_0c(0x2, 0x4);
	push_base_offset(0x774);
	push_byte(0x8);
	push_word(0x498);
	load(0x2);
	call();
	push_base_offset(0x2614);
	move_arg(0x2);
	push_base_offset(0x2618);
	move_arg(0x2);
	push_base_offset(0x261c);
	move_arg(0x2);
	push_base_offset(0x2620);
	move_arg(0x2);
	push_base_offset(0x4b0);
	push_byte(0x6);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x2620);
	load(0x2);
	push_base_offset(0x261c);
	load(0x2);
	push_base_offset(0x2618);
	load(0x2);
	push_base_offset(0x2614);
	load(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x98);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0xa0);
	push_base_offset(0x4e0);
	push_byte(0x8);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x11);
	add();
	push_word(0x1180);
	push_byte(0x11);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0x9);
	add();
	cmd_0c(0x2, 0x4);
	push_base_offset(0x774);
	push_byte(0xa);
	push_word(0x498);
	load(0x2);
	call();
	push_base_offset(0x2614);
	move_arg(0x2);
	push_base_offset(0x2618);
	move_arg(0x2);
	push_base_offset(0x261c);
	move_arg(0x2);
	push_base_offset(0x2620);
	move_arg(0x2);
	push_base_offset(0x4b0);
	push_byte(0x8);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x2620);
	load(0x2);
	push_base_offset(0x261c);
	load(0x2);
	push_base_offset(0x2618);
	load(0x2);
	push_base_offset(0x2614);
	load(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x98);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0xa0);
	push_base_offset(0x4e0);
	push_byte(0x9);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4b4);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x13);
	add();
	push_word(0x1180);
	push_byte(0x13);
	add();
	push_byte(0x1);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_byte(0xa);
	add();
	cmd_0c(0x2, 0x4);
	push_base_offset(0x774);
	push_byte(0xb);
	push_word(0x498);
	load(0x2);
	call();
	push_base_offset(0x2614);
	move_arg(0x2);
	push_base_offset(0x2618);
	move_arg(0x2);
	push_base_offset(0x261c);
	move_arg(0x2);
	push_base_offset(0x2620);
	move_arg(0x2);
	push_base_offset(0x4b0);
	push_byte(0x9);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x2620);
	load(0x2);
	push_base_offset(0x261c);
	load(0x2);
	push_base_offset(0x2618);
	load(0x2);
	push_base_offset(0x2614);
	load(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x98);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0x0);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4b0);
	push_byte(0xa);
	push_byte(0x34);
	mul();
	add();
	push_word(0x25c);
	push_byte(0x18);
	push_byte(0x69);
	push_byte(0x33);
	push_base_offset(0x4b4);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4b0);
	push_byte(0xb);
	push_byte(0x34);
	mul();
	add();
	push_word(0x348);
	push_byte(0x18);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x4b4);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0x3);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4b0);
	push_byte(0xc);
	push_byte(0x34);
	mul();
	add();
	push_word(0x3ca);
	push_byte(0x18);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x4b4);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0x4);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4b0);
	push_byte(0xd);
	push_byte(0x34);
	mul();
	add();
	push_word(0x44c);
	push_byte(0x18);
	push_word(0x97);
	push_byte(0x33);
	push_base_offset(0x4b4);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0x5);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4b0);
	push_byte(0xe);
	push_byte(0x34);
	mul();
	add();
	push_word(0x188);
	push_byte(0x18);
	push_byte(0x69);
	push_byte(0x33);
	push_base_offset(0x4b4);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0x6);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4b0);
	push_byte(0xf);
	push_byte(0x34);
	mul();
	add();
	push_word(0x1f2);
	push_byte(0x18);
	push_byte(0x69);
	push_byte(0x33);
	push_base_offset(0x4b4);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0x8);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4b0);
	push_byte(0x10);
	push_byte(0x34);
	mul();
	add();
	push_word(0x35e);
	push_word(0x293);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x4b4);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0x9);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4b0);
	push_byte(0x11);
	push_byte(0x34);
	mul();
	add();
	push_word(0x3e0);
	push_word(0x293);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x4b4);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0xa);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4b0);
	push_byte(0x12);
	push_byte(0x34);
	mul();
	add();
	push_word(0x462);
	push_word(0x293);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x4b4);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x98);
	push_word(0x1180);
	push_byte(0x49);
	add();
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0xb);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x4b0);
	push_byte(0x13);
	push_byte(0x34);
	mul();
	add();
	push_word(0x35e);
	push_word(0x25d);
	push_word(0x185);
	push_byte(0x33);
	push_base_offset(0x4b4);
	push_base_offset(0x98);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0x88);
	push_base_offset(0x744);
	push_base_offset(0x644);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x80);
	push_base_offset(0x540);
	load(0x2);
	push_base_offset(0x53c);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x74c);
	push_base_offset(0x88);
	push_base_offset(0x80);
	push_base_offset(0x544);
	load(0x2);
	push_word(0x96);
	push_word(0x47c);
	load(0x2);
	call();
	push_base_offset(0x24cc);
	push_base_offset(0x534);
	load(0x2);
	push_base_offset(0x530);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_word(0x4d0);
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x24cc);
	sys1(0x4a);
	push_base_offset(0x538);
	load(0x2);
	grp2(0xb8);
	push_base_offset(0x78);
	move_arg(0x2);
	push_word(0x46c);
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_dword(0x42ae4);
	push_base_offset(0x538);
	load(0x2);
	move(0x2);
	push_byte(0x0);
	push_offset(L014fe);
	jc(0x1);
	push_byte(0x20);
	push_byte(0x78);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L014fe);
	jc(0x0);
	push_byte(0x32);
	push_byte(0x0);
	add();
	push_word(0x4a0);
	load(0x2);
	add();
	push_offset(L06918);
	call();

L014fe:
	push_word(0x4ac);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x50);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x48);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L01530:
	push_base_offset(0x50);
	load(0x2);
	push_offset(L0155c);
	jc(0x1);
	push_base_offset(0x774);
	push_base_offset(0x2658);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x1);
	push_word(0x470);
	load(0x2);
	call();
	push_base_offset(0x774);
	push_byte(0x20);
	push_base_offset(0x2658);
	load(0x2);
	push_offset(L023fc);
	call();

L0155c:
	push_base_offset(0x50);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x774);
	grp2(0xba);
	push_base_offset(0x4c);
	load(0x2);
	push_offset(L01589);
	jc(0x1);
	push_byte(0x1);
	sys2(0x1e);
	push_base_offset(0x48);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4c);
	push_byte(0x0);
	move(0x2);

L01589:
	sys1(0x5f);
	push_word(0x460);
	push_byte(0x0);
	move(0x2);
	push_word(0x4f4);
	load(0x2);
	push_offset(L020e4);
	jc(0x0);
	push_word(0x404);
	load(0x2);
	push_offset(L01589);
	jc(0x0);
	push_word(0x4b0);
	load(0x2);
	push_offset(L015bb);
	jc(0x1);
	push_word(0x4b0);
	push_byte(0x0);
	move(0x2);
	push_offset(L01589);
	jmp();

L015bb:
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2638);
	sys1(0x49);
	push_offset(L01637);
	jc(0x1);
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0xc);
	eq();
	push_offset(L015f2);
	jc(0x1);
	push_base_offset(0x14);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x40);
	push_byte(0x2);
	move(0x2);
	push_offset(L01a9a);
	jmp();

L015f2:
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0xb);
	eq();
	push_offset(L01618);
	jc(0x1);
	push_base_offset(0x14);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x40);
	push_byte(0x0);
	move(0x2);
	push_offset(L01a9a);
	jmp();

L01618:
	push_base_offset(0x262c);
	push_base_offset(0x2638);
	load(0x2);
	move(0x2);
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L020e4);
	jc(0x0);
	push_offset(L020d0);
	jmp();

L01637:
	grp1(0xdb);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01658);
	jc(0x1);
	push_byte(0x0);
	push_byte(0x3);
	add();
	push_offset(L06918);
	call();
	push_offset(L020e4);
	jmp();

L01658:
	push_base_offset(0x2630);
	push_byte(0x0);
	move(0x2);

L0165f:
	push_base_offset(0x50c);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xd7);
	push_base_offset(0x2638);
	move_arg(0x2);
	push_base_offset(0x2634);
	move_arg(0x2);
	push_base_offset(0x2634);
	load(0x2);
	push_base_offset(0x4f0);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	load(0x1);
	eq();
	push_offset(L018c0);
	jc(0x0);
	push_base_offset(0x2638);
	push_base_offset(0x4f0);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	load(0x1);
	move(0x2);
	push_byte(0x20);
	push_base_offset(0x4f8);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x2634);
	load(0x2);
	push_base_offset(0x248c);
	load(0x2);
	push_base_offset(0x2658);
	load(0x2);
	push_offset(L06402);
	call();
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L017c8);
	jc(0x1);
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_or();
	push_offset(L0174a);
	jc(0x1);
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x2624);
	move_arg(0x2);
	push_base_offset(0x34);
	push_dword(0x10000004);
	push_byte(0x5);
	push_byte(0x1);
	push_byte(0x4);
	push_base_offset(0x2624);
	load(0x2);
	cmd_0c(0x2, 0x5);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x5);
	push_base_offset(0x34);
	sys1(0xac);
	push_base_offset(0x34);
	push_dword(0x10000002);
	push_byte(0x5);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	cmd_0c(0x2, 0x3);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x34);
	sys1(0xac);

L0174a:
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	eq();
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	eq();
	bool_or();
	push_offset(L018c0);
	jc(0x1);
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	eq();
	push_byte(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x2624);
	move_arg(0x2);
	push_base_offset(0x34);
	push_dword(0x10000004);
	push_byte(0x5);
	push_byte(0x2);
	push_byte(0x4);
	push_base_offset(0x2624);
	load(0x2);
	cmd_0c(0x2, 0x5);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x5);
	push_base_offset(0x34);
	sys1(0xac);
	push_base_offset(0x34);
	push_dword(0x10000002);
	push_byte(0x5);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	cmd_0c(0x2, 0x3);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x34);
	sys1(0xac);
	push_offset(L018c0);
	jmp();

L017c8:
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L018c0);
	jc(0x1);
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_or();
	push_offset(L01846);
	jc(0x1);
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x2624);
	move_arg(0x2);
	push_base_offset(0x34);
	push_dword(0x10000004);
	push_byte(0x6);
	push_byte(0x1);
	push_byte(0x4);
	push_base_offset(0x2624);
	load(0x2);
	cmd_0c(0x2, 0x5);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x5);
	push_base_offset(0x34);
	sys1(0xac);
	push_base_offset(0x34);
	push_dword(0x10000002);
	push_byte(0x6);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	cmd_0c(0x2, 0x3);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x34);
	sys1(0xac);

L01846:
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	eq();
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	eq();
	bool_or();
	push_offset(L018c0);
	jc(0x1);
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	eq();
	push_byte(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x2624);
	move_arg(0x2);
	push_base_offset(0x34);
	push_dword(0x10000004);
	push_byte(0x6);
	push_byte(0x2);
	push_byte(0x4);
	push_base_offset(0x2624);
	load(0x2);
	cmd_0c(0x2, 0x5);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x5);
	push_base_offset(0x34);
	sys1(0xac);
	push_base_offset(0x34);
	push_dword(0x10000002);
	push_byte(0x6);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	cmd_0c(0x2, 0x3);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x34);
	sys1(0xac);

L018c0:
	push_base_offset(0x2630);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x2);
	lt();
	push_offset(L0165f);
	jc(0x0);
	push_base_offset(0x4b0);
	push_byte(0x14);
	push_byte(0x3);
	push_base_offset(0x2488);
	load(0x2);
	call();
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L018ee:
	push_base_offset(0x74);
	push_base_offset(0x78);
	load(0x2);
	grp1(0xbf);
	push_base_offset(0x74);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000007);
	eq();
	push_offset(L01970);
	jc(0x1);
	push_base_offset(0x44);
	push_base_offset(0x74);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x40);
	push_base_offset(0x74);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x74);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x74);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0xc);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L01a9a);
	jc(0x0);
	push_offset(L018ee);
	jmp();

L01970:
	push_base_offset(0x74);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000006);
	eq();
	push_offset(L019c5);
	jc(0x1);
	push_base_offset(0x44);
	push_base_offset(0x74);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x40);
	push_base_offset(0x74);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0xc);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L01a9a);
	jc(0x0);
	push_offset(L018ee);
	jmp();

L019c5:
	push_base_offset(0x74);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000002);
	eq();
	push_offset(L01a8a);
	jc(0x1);
	push_base_offset(0x2638);
	push_base_offset(0x74);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x2634);
	push_base_offset(0x74);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x2638);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	eq();
	push_base_offset(0x2634);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	eq();
	bool_and();
	push_offset(L01a35);
	jc(0x0);
	push_base_offset(0x3c);
	push_base_offset(0x2638);
	load(0x2);
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x2634);
	load(0x2);
	move(0x2);
	push_base_offset(0x48);
	load(0x2);
	push_offset(L01a40);
	jc(0x1);

L01a35:
	push_base_offset(0x48);
	push_byte(0x0);
	move(0x2);
	push_offset(L018ee);
	jmp();

L01a40:
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L018ee);
	jc(0x0);
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0x5);
	eq();
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_offset(L018ee);
	jc(0x0);
	push_base_offset(0x2638);
	load(0x2);
	push_byte(0x6);
	eq();
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_offset(L018ee);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x8);
	add();
	push_offset(L06918);
	call();
	push_offset(L018ee);
	jmp();

L01a8a:
	push_base_offset(0x74);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L018ee);
	jc(0x1);

L01a9a:
	push_base_offset(0x68);
	push_base_offset(0x78);
	load(0x2);
	grp1(0xbc);
	push_word(0x4ac);
	push_base_offset(0x68);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0x14);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_word(0x4ac);
	load(0x2);
	push_offset(L01589);
	jc(0x0);
	push_word(0x444);
	load(0x2);
	push_base_offset(0x68);
	push_byte(0x0);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L01530);
	jc(0x0);
	push_word(0x444);
	load(0x2);
	push_offset(L01589);
	jc(0x0);
	push_word(0x460);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_offset(L01b3f);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x5);
	eq();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_offset(L01b3f);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x6);
	eq();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_offset(L01b3f);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_byte(0x0);
	push_byte(0x0);
	add();
	push_byte(0x0);
	push_byte(0x3);
	add();
	ternary();
	push_offset(L06918);
	call();

L01b3f:
	push_base_offset(0x14);
	load(0x2);
	push_offset(L01bc6);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L01bc6);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01bc6);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L01bc6);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L01bc6);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x5);
	eq();
	push_offset(L01bc6);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x6);
	eq();
	push_offset(L01bc6);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01bc6);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	eq();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x4);
	neq();
	bool_and();
	push_offset(L01bc6);
	jc(0x0);
	push_byte(0x78);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);

L01bc6:
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L020e4);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01c50);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01ca6);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01d15);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L01dcb);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L01e50);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x5);
	eq();
	push_offset(L01f1d);
	jc(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x6);
	eq();
	push_offset(L01f8b);
	jc(0x0);
	push_byte(0x20);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x248c);
	load(0x2);
	push_base_offset(0x2658);
	load(0x2);
	push_offset(L06402);
	call();
	push_offset(L01589);
	jmp();

L01c50:
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x538);
	load(0x2);
	push_word(0x474);
	load(0x2);
	call();
	push_base_offset(0x2628);
	move_arg(0x2);
	push_base_offset(0x262c);
	move_arg(0x2);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_base_offset(0x262c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L020e4);
	jc(0x0);
	push_base_offset(0x262c);
	load(0x2);
	push_dword(0x7fffffff);
	eq();
	push_offset(L01530);
	jc(0x0);
	push_offset(L020d0);
	jmp();

L01ca6:
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L01c50);
	jc(0x1);
	push_byte(0x20);
	push_base_offset(0x2658);
	load(0x2);
	push_offset(L05e69);
	call();
	push_byte(0x20);
	push_base_offset(0x248c);
	load(0x2);
	push_base_offset(0x2658);
	load(0x2);
	push_offset(L06115);
	call();
	push_base_offset(0x2630);
	push_byte(0x0);
	move(0x2);

L01cd5:
	push_base_offset(0x50c);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4f0);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	load(0x1);
	push_byte(0x0);
	grp1(0xd6);
	push_base_offset(0x2630);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x2);
	lt();
	push_offset(L01cd5);
	jc(0x0);
	push_offset(L01530);
	jmp();

L01d15:
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x2634);
	push_word(0x914);
	load(0x2);
	move(0x2);
	push_base_offset(0x774);
	push_byte(0x20);
	push_base_offset(0x2658);
	load(0x2);
	push_offset(L023fc);
	call();
	push_base_offset(0x538);
	load(0x2);
	push_base_offset(0x774);
	grp1(0xb7);
	push_base_offset(0x2658);
	load(0x2);
	push_base_offset(0x74c);
	push_base_offset(0x88);
	push_base_offset(0x80);
	push_base_offset(0x544);
	load(0x2);
	push_offset(L0372b);
	call();
	push_base_offset(0x2628);
	move_arg(0x2);
	push_base_offset(0x262c);
	move_arg(0x2);
	push_base_offset(0x262c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x262c);
	load(0x2);
	push_dword(0x7fffffff);
	neq();
	bool_and();
	push_offset(L020e4);
	jc(0x0);
	push_word(0x914);
	load(0x2);
	push_base_offset(0x2634);
	load(0x2);
	neq();
	push_offset(L01da8);
	jc(0x1);
	push_byte(0x20);
	push_base_offset(0x44);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_base_offset(0x248c);
	load(0x2);
	push_base_offset(0x2658);
	load(0x2);
	push_offset(L06402);
	call();

L01da8:
	push_word(0x46c);
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_dword(0x42ae4);
	push_base_offset(0x538);
	load(0x2);
	move(0x2);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_offset(L01530);
	jmp();

L01dcb:
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x538);
	load(0x2);
	push_base_offset(0x4e8);
	load(0x2);
	push_byte(0x20);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x248c);
	load(0x2);
	push_base_offset(0x2658);
	load(0x2);
	push_base_offset(0x74c);
	push_base_offset(0x88);
	push_base_offset(0x80);
	push_base_offset(0x544);
	load(0x2);
	push_offset(L0499c);
	call();
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x2628);
	move_arg(0x2);
	push_base_offset(0x262c);
	move_arg(0x2);
	push_base_offset(0x262c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x262c);
	load(0x2);
	push_dword(0x7fffffff);
	neq();
	bool_and();
	push_offset(L020e4);
	jc(0x0);
	push_word(0x46c);
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_dword(0x42ae4);
	push_base_offset(0x538);
	load(0x2);
	move(0x2);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_offset(L01530);
	jmp();

L01e50:
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_word(0x4d4);
	load(0x2);
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	neq();
	push_offset(L01e7d);
	jc(0x1);
	push_word(0x4d4);
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	move(0x2);
	push_offset(L063cf);
	call();

L01e7d:
	push_base_offset(0x538);
	load(0x2);
	push_base_offset(0x4e4);
	load(0x2);
	push_byte(0x20);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x248c);
	load(0x2);
	push_base_offset(0x2658);
	load(0x2);
	push_base_offset(0x74c);
	push_base_offset(0x88);
	push_base_offset(0x80);
	push_base_offset(0x544);
	load(0x2);
	push_offset(L0499c);
	call();
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x2628);
	move_arg(0x2);
	push_base_offset(0x262c);
	move_arg(0x2);
	push_base_offset(0x262c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x262c);
	load(0x2);
	push_dword(0x7fffffff);
	neq();
	bool_and();
	push_offset(L020e4);
	jc(0x0);
	push_word(0x4d4);
	load(0x2);
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	neq();
	push_offset(L01efa);
	jc(0x1);
	push_word(0x4d4);
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	move(0x2);
	push_offset(L063cf);
	call();

L01efa:
	push_word(0x46c);
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_dword(0x42ae4);
	push_base_offset(0x538);
	load(0x2);
	move(0x2);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_offset(L01530);
	jmp();

L01f1d:
	push_base_offset(0x504);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01ff9);
	jc(0x0);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x1);
	eq();
	push_base_offset(0x4f0);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	load(0x1);
	push_byte(0x1);
	sub();
	push_base_offset(0x4f0);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	load(0x1);
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	lt();
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x500);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	geq();
	bool_or();
	push_offset(L01530);
	jc(0x0);
	push_offset(L0209b);
	jmp();

L01f8b:
	push_base_offset(0x504);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01ff9);
	jc(0x0);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x1);
	eq();
	push_base_offset(0x4f0);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	load(0x1);
	push_byte(0x1);
	sub();
	push_base_offset(0x4f0);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	load(0x1);
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	lt();
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x500);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	geq();
	bool_or();
	push_offset(L01530);
	jc(0x0);
	push_offset(L0209b);
	jmp();

L01ff9:
	push_base_offset(0x2634);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x52c);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x1);
	sar();
	sub();
	move(0x2);
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x2634);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x2634);
	move_arg(0x2);
	push_base_offset(0x2634);
	push_base_offset(0x2634);
	load(0x2);
	push_base_offset(0x500);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	mul();
	push_word(0xde);
	push_base_offset(0x52c);
	push_byte(0x8);
	add();
	load(0x2);
	sub();
	div();
	move(0x2);
	push_base_offset(0x2634);
	load(0x2);
	push_base_offset(0x500);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	lt();
	push_base_offset(0x2634);
	load(0x2);
	push_base_offset(0x500);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	ternary();
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x4f0);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	load(0x1);
	eq();
	push_offset(L01530);
	jc(0x0);

L0209b:
	push_base_offset(0x50c);
	push_base_offset(0x504);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	grp1(0xd6);
	push_byte(0x20);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x248c);
	load(0x2);
	push_base_offset(0x2658);
	load(0x2);
	push_offset(L06402);
	call();
	push_offset(L01530);
	jmp();

L020d0:
	push_base_offset(0x74c);
	push_base_offset(0x88);
	push_base_offset(0x80);
	push_base_offset(0x544);
	load(0x2);
	push_word(0x478);
	load(0x2);
	call();

L020e4:
	push_dword(0x42ae4);
	push_byte(0x0);
	move(0x2);
	push_word(0x460);
	push_byte(0x1);
	move(0x2);
	push_word(0x4ac);
	push_byte(0x0);
	move(0x2);
	push_word(0x46c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x78);
	load(0x2);
	grp1(0xb9);

L02109:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L0211f);
	jc(0x0);
	push_word(0x508);
	load(0x2);
	push_offset(L02109);
	jc(0x0);

L0211f:
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02145);
	jc(0x0);
	push_base_offset(0x74c);
	push_base_offset(0x88);
	push_base_offset(0x80);
	push_base_offset(0x544);
	load(0x2);
	push_word(0x96);
	push_word(0x480);
	load(0x2);
	call();

L02145:
	push_word(0x4c0);
	push_byte(0x1);
	move(0x2);
	push_word(0x4c4);
	load(0x2);
	push_offset(L02174);
	jc(0x1);
	push_word(0x4cc);
	push_byte(0x1);
	move(0x2);
	push_word(0x4c8);
	load(0x2);
	push_offset(L02174);
	jc(0x1);
	push_word(0x4d0);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x4c);

L02174:
	sys1(0x5f);
	push_word(0x4d0);
	load(0x2);
	sys1(0x47);
	push_offset(L02174);
	jc(0x0);
	push_word(0x4c0);
	push_byte(0x0);
	move(0x2);
	push_word(0x4c4);
	push_byte(0x0);
	move(0x2);
	push_word(0x4c8);
	push_byte(0x0);
	move(0x2);
	push_word(0x4cc);
	push_byte(0x0);
	move(0x2);
	push_word(0x4d0);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x538);
	load(0x2);
	grp1(0x81);
	push_base_offset(0x534);
	load(0x2);
	grp1(0x81);
	push_base_offset(0x530);
	load(0x2);
	grp1(0x51);
	push_base_offset(0x2630);
	push_byte(0x0);
	move(0x2);

L021c1:
	push_base_offset(0x50c);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xd1);
	push_base_offset(0x514);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x51);
	push_base_offset(0x2630);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x2);
	lt();
	push_offset(L021c1);
	jc(0x0);
	push_word(0x918);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4e8);
	load(0x2);
	grp1(0x51);
	push_base_offset(0x4e4);
	load(0x2);
	grp1(0x51);
	push_base_offset(0x2630);
	push_byte(0x0);
	move(0x2);

L02217:
	push_base_offset(0x2630);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L02217);
	jc(0x0);
	push_base_offset(0x4b8);
	load(0x2);
	grp1(0x51);
	push_base_offset(0x4b4);
	load(0x2);
	grp1(0x51);
	push_word(0x1180);
	push_byte(0x61);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x62);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x63);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x1);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x66);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x67);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x68);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x69);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x6a);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x6b);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x6c);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x6d);
	add();
	grp1(0x12);
	push_base_offset(0x2624);
	push_word(0x1180);
	push_byte(0x70);
	add();
	move(0x2);
	push_base_offset(0x2630);
	push_byte(0x0);
	move(0x2);

L022b4:
	push_base_offset(0x2624);
	load(0x2);
	grp1(0x12);
	push_base_offset(0x2624);
	load(0x2);
	push_byte(0x1);
	add();
	grp1(0x12);
	push_base_offset(0x2624);
	load(0x2);
	push_byte(0x2);
	add();
	grp1(0x12);
	push_base_offset(0x2624);
	push_base_offset(0x2624);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x2630);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2630);
	load(0x2);
	push_byte(0xc);
	lt();
	push_offset(L022b4);
	jc(0x0);
	push_word(0x1180);
	push_byte(0x6e);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_byte(0x6e);
	add();
	push_byte(0x1);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_word(0x98);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_word(0x99);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_word(0x99);
	add();
	push_byte(0x1);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_word(0x9b);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_word(0x9b);
	add();
	push_byte(0x1);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_word(0x9d);
	add();
	grp1(0x12);
	push_word(0x1180);
	push_word(0x9d);
	add();
	push_byte(0x1);
	add();
	grp1(0x12);
	push_base_offset(0x2658);
	load(0x2);
	push_offset(L023e7);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xf8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	bool_or();
	push_offset(L023e7);
	jc(0x1);
	push_byte(0x20);
	push_byte(0x72);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_byte(0x20);
	push_byte(0x10);
	add();
	load(0x1);
	ternary();
	push_base_offset(0x2638);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0xf8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xf8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x2638);
	load(0x2);
	ternary();
	push_base_offset(0x2638);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x2638);
	load(0x2);
	ternary();
	push_byte(0x0);
	push_base_offset(0x248c);
	load(0x2);
	call();

L023e7:
	sys1(0x41);
	sys1(0x41);
	push_base_offset(0x262c);
	load(0x2);
	push_base_offset(0x2628);
	load(0x2);
	load_base();
	push_word(0x265c);
	sub();
	store_base();
	ret();

L023fc:
	load_base();
	push_word(0x1bc);
	add();
	store_base();
	push_base_offset(0x1b4);
	move_arg(0x2);
	push_base_offset(0x1b8);
	move_arg(0x2);
	push_base_offset(0x1bc);
	move_arg(0x2);
	push_base_offset(0x1b0);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b0);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x20);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1b0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x1a4);
	push_byte(0x24);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1b0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x1a4);
	push_byte(0x3c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x34);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x164);
	push_word(0x9c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x164);
	push_word(0xa0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x164);
	push_word(0xa4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x164);
	push_word(0xa8);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1b0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x164);
	push_word(0xa8);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1b0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x164);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x8);
	add();
	push_base_offset(0xa0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1a4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0xf6);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x8b);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x63);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xa0);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x8);
	add();
	push_base_offset(0xa0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1a4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0xf6);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0xbd);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x59);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xa0);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x8);
	add();
	push_base_offset(0xa0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1a4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0xf6);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0xef);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x59);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x1a4);
	push_byte(0x1c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x9c);
	push_base_offset(0x1b8);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x8);
	add();
	push_base_offset(0xa0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1a4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x11d);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x122);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x61);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_base_offset(0x9c);
	load(0x2);
	push_byte(0x0);
	gt();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0xfd);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x125);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x39);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x39);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x39);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_base_offset(0x9c);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	lt();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x20b);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x125);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x3c);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x3c);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x3c);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x1a4);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x1c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x9c);
	push_base_offset(0x1b8);
	load(0x2);
	push_byte(0x12);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x6);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x8);
	add();
	push_base_offset(0xa0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x6);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1a4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x11d);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x154);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x61);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_base_offset(0x9c);
	load(0x2);
	push_byte(0x0);
	gt();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0xfd);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x157);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x39);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x39);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x39);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_base_offset(0x9c);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	lt();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x20b);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x157);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x3c);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x3c);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x3c);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x1a4);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x9c);
	push_base_offset(0x1b8);
	load(0x2);
	push_word(0x84);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x7);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x8);
	add();
	push_base_offset(0xa0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0xc);
	add();
	push_base_offset(0x9c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x7);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1a4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x191);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x185);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x18);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x18);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x18);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0xf6);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x185);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x15);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x15);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x15);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x9c);
	push_base_offset(0x1b8);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x9);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x8);
	add();
	push_base_offset(0xa0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0xc);
	add();
	push_base_offset(0x9c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x9);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1a4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0xf6);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x1b7);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x1b);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x1b);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x1b);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x191);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x1b7);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x1e);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x1e);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x1e);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x9c);
	push_base_offset(0x1b8);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x8);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x8);
	add();
	push_base_offset(0xa0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0xc);
	add();
	push_base_offset(0x9c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x8);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1a4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x191);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x1e9);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x24);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x24);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x24);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0xf6);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x1e9);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x21);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x21);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x21);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x9c);
	push_base_offset(0x1b8);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x1);
	move(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0xa);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x8);
	add();
	push_base_offset(0xa0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0xc);
	add();
	push_base_offset(0x9c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0xa);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1a4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0xf6);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x21b);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x27);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x27);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x27);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x191);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x21b);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x2a);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x2a);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x2a);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x22c);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x21b);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x2d);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x2d);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x2d);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x9c);
	push_word(0x2c0);
	push_byte(0x14);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0xb);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x8);
	add();
	push_base_offset(0xa0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0xc);
	add();
	push_base_offset(0x9c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1bc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0xb);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1a4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0xf6);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x24d);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x30);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x30);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x30);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x191);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x24d);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x33);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x33);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x33);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x164);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x8);
	add();
	push_word(0x22c);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0xc);
	add();
	push_word(0x24d);
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x36);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x36);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x36);
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x164);
	push_byte(0x30);
	add();
	push_base_offset(0x164);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x164);
	push_word(0xc4);
	memcpy();
	load_base();
	push_word(0x1bc);
	sub();
	store_base();
	ret();

L0372b:
	load_base();
	push_word(0x105c);
	add();
	store_base();
	push_base_offset(0x104c);
	move_arg(0x2);
	push_base_offset(0x1050);
	move_arg(0x2);
	push_base_offset(0x1054);
	move_arg(0x2);
	push_base_offset(0x1058);
	move_arg(0x2);
	push_base_offset(0x105c);
	move_arg(0x2);
	push_base_offset(0x1020);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x101c);
	push_byte(0x0);
	move(0x2);
	push_word(0x910);
	load(0x2);
	push_byte(0xc);
	gt();
	push_word(0x910);
	load(0x2);
	push_byte(0xc);
	sub();
	push_byte(0x0);
	ternary();
	push_base_offset(0xf0c);
	move_arg(0x2);
	push_word(0x914);
	load(0x2);
	push_base_offset(0xf0c);
	load(0x2);
	gt();
	push_base_offset(0xf0c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	ternary();
	push_base_offset(0xf08);
	move_arg(0x2);
	push_base_offset(0x1048);
	push_word(0x1180);
	push_byte(0x6c);
	add();
	grp1(0x16);
	push_base_offset(0xf04);
	push_base_offset(0x1048);
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1048);
	push_word(0x1180);
	push_byte(0x6d);
	add();
	grp1(0x16);
	push_base_offset(0xf00);
	push_base_offset(0x1048);
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xefc);
	push_word(0x914);
	load(0x2);
	move(0x2);
	push_word(0x1180);
	push_byte(0x70);
	add();
	push_base_offset(0xf08);
	load(0x2);
	push_offset(L05875);
	call();
	push_base_offset(0x2b8);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0xef8);
	move(0x2);
	push_base_offset(0x2b8);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x5c8);
	move(0x2);
	push_base_offset(0x2b8);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x37c);
	move(0x2);
	push_base_offset(0x1f8);
	push_byte(0x0);
	add();
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x1f8);
	push_byte(0x4);
	add();
	push_base_offset(0x2b8);
	move(0x2);
	push_base_offset(0x1f8);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1f8);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1f8);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1f8);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1f8);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1f8);
	push_byte(0x1c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1f8);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1f8);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1f8);
	push_base_offset(0xf08);
	load(0x2);
	push_base_offset(0xf0c);
	load(0x2);
	push_base_offset(0xefc);
	load(0x2);
	push_offset(L04331);
	call();
	push_base_offset(0xcc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc8);
	push_byte(0x0);
	move(0x2);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x80);
	push_base_offset(0xc4);
	move_arg(0x2);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x885);
	grp1(0x85);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp1(0x86);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0x88);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x88);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x0);
	grp2(0x89);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x1);
	grp3(0x88);
	push_base_offset(0xc4);
	load(0x2);
	push_word(0xf6);
	push_byte(0x0);
	sub();
	push_word(0x8b);
	push_byte(0x0);
	sub();
	push_word(0x1180);
	push_byte(0x6c);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp3(0x89);
	push_base_offset(0x1d0);
	push_base_offset(0xcc);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xc4);
	load(0x2);
	move(0x2);
	push_base_offset(0xcc);
	push_base_offset(0xcc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc0);
	push_word(0x1180);
	push_byte(0x60);
	add();
	grp1(0x16);
	grp1(0x50);
	push_base_offset(0xa8);
	move_arg(0x2);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x60);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x886);
	grp1(0x56);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp1(0x3c);
	push_base_offset(0xa8);
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x3f);
	add();
	grp1(0x38);
	push_base_offset(0xa8);
	load(0x2);
	grp1(0xd0);
	push_base_offset(0xa4);
	move_arg(0x2);
	push_base_offset(0xa4);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0xf0c);
	load(0x2);
	push_byte(0x1);
	add();
	grp1(0xd8);
	push_base_offset(0xa4);
	load(0x2);
	push_base_offset(0xc0);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0xf00);
	load(0x2);
	grp1(0xd9);
	push_base_offset(0xa4);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0xf08);
	load(0x2);
	grp1(0xd6);
	push_base_offset(0xa4);
	load(0x2);
	push_byte(0x0);
	push_word(0x208);
	add();
	push_byte(0x0);
	push_word(0xa0);
	add();
	grp1(0xd5);
	push_base_offset(0xa4);
	load(0x2);
	push_byte(0x1);
	grp1(0xd4);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x0);
	grp1(0x54);
	push_base_offset(0x1cc);
	push_base_offset(0xc8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xa8);
	load(0x2);
	move(0x2);
	push_base_offset(0xc8);
	push_base_offset(0xc8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc4);
	load(0x2);
	push_base_offset(0x1f8);
	grp1(0xb7);
	push_base_offset(0xa0);
	push_base_offset(0x1cc);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x9c);
	push_base_offset(0xc8);
	load(0x2);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x1d0);
	push_base_offset(0xa0);
	push_base_offset(0x9c);
	push_base_offset(0xcc);
	load(0x2);
	push_word(0x96);
	push_word(0x47c);
	load(0x2);
	call();
	push_byte(0x1);
	grp1(0xdd);
	push_base_offset(0x98);
	move_arg(0x2);
	push_base_offset(0xa4);
	load(0x2);
	grp1(0xde);
	push_base_offset(0xc4);
	load(0x2);
	grp2(0xb8);
	push_base_offset(0x94);
	move_arg(0x2);
	push_word(0x46c);
	push_base_offset(0x94);
	load(0x2);
	move(0x2);
	push_dword(0x42ae4);
	push_base_offset(0xc4);
	load(0x2);
	move(0x2);
	push_word(0x4ac);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x60);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5c);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L03aa9:
	push_base_offset(0x6c);
	load(0x2);
	push_offset(L03ac9);
	jc(0x1);
	push_base_offset(0x1f8);
	push_base_offset(0xf08);
	load(0x2);
	push_base_offset(0xf0c);
	load(0x2);
	push_base_offset(0xefc);
	load(0x2);
	push_offset(L04331);
	call();

L03ac9:
	push_base_offset(0x6c);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x94);
	load(0x2);
	push_base_offset(0x1f8);
	grp2(0xba);

L03ada:
	sys1(0x5f);
	push_word(0x460);
	push_byte(0x0);
	move(0x2);
	push_word(0x4f4);
	load(0x2);
	push_offset(L04295);
	jc(0x0);
	push_word(0x404);
	load(0x2);
	push_offset(L03ada);
	jc(0x0);
	push_word(0x4b0);
	load(0x2);
	push_offset(L03b0c);
	jc(0x1);
	push_word(0x4b0);
	push_byte(0x0);
	move(0x2);
	push_offset(L03ada);
	jmp();

L03b0c:
	push_base_offset(0x38);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x102c);
	sys1(0x49);
	push_offset(L03b88);
	jc(0x1);
	push_base_offset(0x102c);
	load(0x2);
	push_byte(0xc);
	eq();
	push_offset(L03b43);
	jc(0x1);
	push_base_offset(0x38);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x68);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x64);
	push_byte(0x2);
	move(0x2);
	push_offset(L03dd3);
	jmp();

L03b43:
	push_base_offset(0x102c);
	load(0x2);
	push_byte(0xb);
	eq();
	push_offset(L03b69);
	jc(0x1);
	push_base_offset(0x38);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x68);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x64);
	push_byte(0x0);
	move(0x2);
	push_offset(L03dd3);
	jmp();

L03b69:
	push_base_offset(0x1020);
	push_base_offset(0x102c);
	load(0x2);
	move(0x2);
	push_base_offset(0x102c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L04295);
	jc(0x0);
	push_offset(L04200);
	jmp();

L03b88:
	grp1(0xdb);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03ba9);
	jc(0x1);
	push_byte(0x0);
	push_byte(0x3);
	add();
	push_offset(L06918);
	call();
	push_offset(L04295);
	jmp();

L03ba9:
	push_base_offset(0xa4);
	load(0x2);
	grp1(0xd7);
	push_base_offset(0x102c);
	move_arg(0x2);
	push_base_offset(0x1028);
	move_arg(0x2);
	push_base_offset(0x102c);
	load(0x2);
	push_base_offset(0xf08);
	load(0x2);
	eq();
	push_offset(L03be7);
	jc(0x0);
	push_base_offset(0xf08);
	push_base_offset(0x102c);
	load(0x2);
	move(0x2);
	push_word(0x1180);
	push_byte(0x70);
	add();
	push_base_offset(0xf08);
	load(0x2);
	push_offset(L05875);
	call();
	push_offset(L03aa9);
	jmp();

L03be7:
	push_base_offset(0x30);
	push_byte(0x0);
	move(0x2);

L03bee:
	push_base_offset(0x90);
	push_base_offset(0x94);
	load(0x2);
	grp1(0xbf);
	push_base_offset(0x90);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000007);
	eq();
	push_offset(L03c70);
	jc(0x1);
	push_base_offset(0x68);
	push_base_offset(0x90);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x64);
	push_base_offset(0x90);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x90);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x28);
	push_base_offset(0x90);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x30);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_offset(L03dd3);
	jc(0x0);
	push_offset(L03bee);
	jmp();

L03c70:
	push_base_offset(0x90);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000006);
	eq();
	push_offset(L03cc5);
	jc(0x1);
	push_base_offset(0x68);
	push_base_offset(0x90);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x64);
	push_base_offset(0x90);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x30);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_offset(L03dd3);
	jc(0x0);
	push_offset(L03bee);
	jmp();

L03cc5:
	push_base_offset(0x90);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000002);
	eq();
	push_offset(L03d6c);
	jc(0x1);
	push_base_offset(0x102c);
	push_base_offset(0x90);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x1028);
	push_base_offset(0x90);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x102c);
	load(0x2);
	push_base_offset(0x60);
	load(0x2);
	eq();
	push_base_offset(0x1028);
	load(0x2);
	push_base_offset(0x5c);
	load(0x2);
	eq();
	bool_and();
	push_offset(L03bee);
	jc(0x0);
	push_base_offset(0x60);
	push_base_offset(0x102c);
	load(0x2);
	move(0x2);
	push_base_offset(0x5c);
	push_base_offset(0x1028);
	load(0x2);
	move(0x2);
	push_base_offset(0x102c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L03bee);
	jc(0x0);
	push_base_offset(0x102c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_base_offset(0x1028);
	load(0x2);
	push_byte(0x2);
	eq();
	bool_and();
	push_offset(L03bee);
	jc(0x0);
	push_base_offset(0x102c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L03bee);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x8);
	add();
	push_offset(L06918);
	call();
	push_offset(L03bee);
	jmp();

L03d6c:
	push_base_offset(0x90);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000004);
	eq();
	push_offset(L03dc3);
	jc(0x1);
	push_base_offset(0x102c);
	push_base_offset(0x90);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x1028);
	push_base_offset(0x90);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x102c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03bee);
	jc(0x1);
	push_base_offset(0xefc);
	push_base_offset(0xf08);
	load(0x2);
	push_base_offset(0x1028);
	load(0x2);
	add();
	move(0x2);
	push_offset(L03bee);
	jmp();

L03dc3:
	push_base_offset(0x90);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03bee);
	jc(0x1);

L03dd3:
	push_base_offset(0x84);
	push_base_offset(0x94);
	load(0x2);
	grp1(0xbc);
	push_word(0x4ac);
	push_base_offset(0x84);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x30);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0x38);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_word(0x4ac);
	load(0x2);
	push_offset(L03ada);
	jc(0x0);
	push_word(0x444);
	load(0x2);
	push_base_offset(0x84);
	push_byte(0x0);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L03aa9);
	jc(0x0);
	push_word(0x444);
	load(0x2);
	push_offset(L03ada);
	jc(0x0);
	push_word(0x460);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_offset(L03e6f);
	jc(0x0);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x1);
	eq();
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x2);
	eq();
	bool_and();
	push_offset(L03e8a);
	jc(0x0);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L03e8a);
	jc(0x0);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_byte(0x0);
	push_byte(0x0);
	add();
	push_byte(0x0);
	push_byte(0x3);
	add();
	ternary();
	push_offset(L06918);
	call();

L03e6f:
	push_base_offset(0x38);
	load(0x2);
	push_offset(L03e8a);
	jc(0x0);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L03e8a);
	jc(0x0);

L03e8a:
	push_base_offset(0x38);
	load(0x2);
	push_offset(L03ec3);
	jc(0x0);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L04295);
	jc(0x0);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03f19);
	jc(0x0);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L040f4);
	jc(0x0);
	push_offset(L04295);
	jmp();

L03ec3:
	push_base_offset(0x94);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x68);
	load(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	push_word(0x474);
	load(0x2);
	call();
	push_base_offset(0x101c);
	move_arg(0x2);
	push_base_offset(0x1020);
	move_arg(0x2);
	push_base_offset(0x94);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_base_offset(0x1020);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L04295);
	jc(0x0);
	push_base_offset(0x1020);
	load(0x2);
	push_dword(0x7fffffff);
	eq();
	push_offset(L03aa9);
	jc(0x0);
	push_offset(L04200);
	jmp();

L03f19:
	push_base_offset(0x1028);
	push_word(0x914);
	load(0x2);
	move(0x2);
	push_word(0x914);
	push_base_offset(0xf08);
	load(0x2);
	push_base_offset(0x64);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x105c);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_byte(0x1a);
	ternary();
	push_base_offset(0x102c);
	move_arg(0x2);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x1028);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x102c);
	load(0x2);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x2);
	grp1(0xe);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x102c);
	load(0x2);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x400);
	grp1(0xe);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x1028);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x2);
	grp1(0xe);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x400);
	grp1(0xe);
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x5b);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x5b);
	add();
	push_byte(0x1);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_byte(0x1c);
	push_offset(L056f8);
	call();
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_byte(0x67);
	add();
	push_string("サンプルテキスト");
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_offset(L05828);
	call();
	push_word(0x1180);
	push_byte(0x69);
	add();
	push_string("サンプルテキスト");
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_offset(L05828);
	call();
	push_offset(L04295);
	jmp();

L040f4:
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0411f);
	jc(0x1);
	push_base_offset(0xf08);
	load(0x2);
	push_byte(0x0);
	leq();
	push_offset(L03aa9);
	jc(0x0);
	push_base_offset(0xf08);
	push_base_offset(0xf08);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_offset(L041df);
	jmp();

L0411f:
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0414d);
	jc(0x1);
	push_base_offset(0xf08);
	load(0x2);
	push_base_offset(0xf0c);
	load(0x2);
	geq();
	push_offset(L03aa9);
	jc(0x0);
	push_base_offset(0xf08);
	push_base_offset(0xf08);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L041df);
	jmp();

L0414d:
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L03aa9);
	jc(0x1);
	push_base_offset(0x1028);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0xc0);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x1);
	sar();
	sub();
	move(0x2);
	push_base_offset(0x1028);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x1028);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x1028);
	move_arg(0x2);
	push_base_offset(0x1028);
	push_base_offset(0x1028);
	load(0x2);
	push_base_offset(0xf0c);
	load(0x2);
	push_byte(0x1);
	add();
	mul();
	push_base_offset(0xf00);
	load(0x2);
	push_base_offset(0xc0);
	push_byte(0xc);
	add();
	load(0x2);
	sub();
	div();
	move(0x2);
	push_base_offset(0x1028);
	load(0x2);
	push_base_offset(0xf0c);
	load(0x2);
	lt();
	push_base_offset(0x1028);
	load(0x2);
	push_base_offset(0xf0c);
	load(0x2);
	ternary();
	push_base_offset(0x1028);
	move_arg(0x2);
	push_base_offset(0x1028);
	load(0x2);
	push_base_offset(0xf08);
	load(0x2);
	eq();
	push_offset(L03aa9);
	jc(0x0);
	push_base_offset(0xf08);
	push_base_offset(0x1028);
	load(0x2);
	move(0x2);

L041df:
	push_word(0x1180);
	push_byte(0x70);
	add();
	push_base_offset(0xf08);
	load(0x2);
	push_offset(L05875);
	call();
	push_base_offset(0xa4);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0xf08);
	load(0x2);
	grp1(0xd6);
	push_offset(L03aa9);
	jmp();

L04200:
	push_base_offset(0x24);
	push_base_offset(0x1058);
	load(0x2);
	push_base_offset(0x104c);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0x24);
	push_base_offset(0x104c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1d0);
	push_base_offset(0xcc);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0x18);
	push_base_offset(0x1054);
	load(0x2);
	push_base_offset(0x104c);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0x18);
	push_base_offset(0x104c);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	push_base_offset(0xa0);
	push_base_offset(0xcc);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0xc);
	push_base_offset(0x1050);
	load(0x2);
	push_base_offset(0x104c);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0xc);
	push_base_offset(0x104c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x9c);
	push_base_offset(0xcc);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0x24);
	push_base_offset(0x18);
	push_base_offset(0xc);
	push_base_offset(0x104c);
	load(0x2);
	push_base_offset(0xcc);
	load(0x2);
	add();
	push_word(0x478);
	load(0x2);
	call();

L04295:
	push_dword(0x42ae4);
	push_byte(0x0);
	move(0x2);
	push_word(0x460);
	push_byte(0x1);
	move(0x2);
	push_word(0x4ac);
	push_byte(0x0);
	move(0x2);
	push_word(0x46c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x94);
	load(0x2);
	grp1(0xb9);
	push_base_offset(0xa4);
	load(0x2);
	grp1(0xdf);
	push_base_offset(0x98);
	load(0x2);
	grp1(0xdd);

L042c8:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L042de);
	jc(0x0);
	push_word(0x508);
	load(0x2);
	push_offset(L042c8);
	jc(0x0);

L042de:
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04304);
	jc(0x0);
	push_base_offset(0x1d0);
	push_base_offset(0xa0);
	push_base_offset(0x9c);
	push_base_offset(0xcc);
	load(0x2);
	push_word(0x96);
	push_word(0x480);
	load(0x2);
	call();

L04304:
	push_base_offset(0xc4);
	load(0x2);
	grp1(0x81);
	push_base_offset(0xa4);
	load(0x2);
	grp1(0xd1);
	push_base_offset(0xa8);
	load(0x2);
	grp1(0x51);
	push_word(0x918);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1020);
	load(0x2);
	push_base_offset(0x101c);
	load(0x2);
	load_base();
	push_word(0x105c);
	sub();
	store_base();
	ret();

L04331:
	load_base();
	push_word(0x1e8);
	add();
	store_base();
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_base_offset(0x1e0);
	move_arg(0x2);
	push_base_offset(0x1e4);
	move_arg(0x2);
	push_base_offset(0x1e8);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x20);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1c0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x1b4);
	push_byte(0x24);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1c0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x1b4);
	push_byte(0x3c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x34);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_word(0x9c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_word(0xa0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_word(0xa4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_word(0xa8);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1c0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x174);
	push_word(0xa8);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1c0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x174);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x34);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x910);
	load(0x2);
	push_byte(0xc);
	gt();
	push_byte(0xc);
	push_word(0x910);
	load(0x2);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0x1dc);
	load(0x2);
	push_base_offset(0x1e4);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	lt();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	geq();
	bool_or();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x4);
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0xb0);
	push_base_offset(0x1e8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x0);
	add();
	push_byte(0xc);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x8);
	add();
	push_base_offset(0xb0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0xc);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1e8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1b4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0xa8);
	push_word(0x1180);
	push_byte(0x70);
	add();
	move(0x2);
	push_base_offset(0x90);
	push_word(0x94);
	move(0x2);
	push_base_offset(0xa4);
	push_byte(0x0);
	move(0x2);

L04532:
	push_base_offset(0x174);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x4);
	add();
	push_base_offset(0xa4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	lt();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x8);
	add();
	push_word(0xf6);
	push_byte(0xa);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0xc);
	add();
	push_base_offset(0x90);
	load(0x2);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xa8);
	load(0x2);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_base_offset(0xa4);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x174);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x90);
	push_base_offset(0x90);
	load(0x2);
	push_byte(0x1a);
	add();
	move(0x2);
	push_base_offset(0xa8);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0xa4);
	push_base_offset(0xa4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa4);
	load(0x2);
	push_byte(0xc);
	lt();
	push_offset(L04532);
	jc(0x0);
	push_base_offset(0x1b4);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x34);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x1c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xb0);
	push_base_offset(0x1e8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x0);
	add();
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x8);
	add();
	push_base_offset(0xb0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1e8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1b4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x174);
	push_byte(0x0);
	add();
	push_base_offset(0x1e4);
	load(0x2);
	push_byte(0x0);
	gt();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x4);
	add();
	push_base_offset(0x1e0);
	load(0x2);
	push_byte(0x0);
	gt();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x8);
	add();
	push_word(0x20b);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0xc);
	add();
	push_word(0x8f);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x40);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x40);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x40);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x174);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x174);
	push_byte(0x0);
	add();
	push_base_offset(0x1e4);
	load(0x2);
	push_base_offset(0x1e0);
	load(0x2);
	lt();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x4);
	add();
	push_base_offset(0x1e0);
	load(0x2);
	push_byte(0x0);
	gt();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x8);
	add();
	push_word(0x20b);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0xc);
	add();
	push_word(0x1bb);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x43);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x43);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x43);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x174);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x174);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x4);
	add();
	push_base_offset(0x1e0);
	load(0x2);
	push_byte(0x0);
	gt();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x8);
	add();
	push_word(0x208);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0xc);
	add();
	push_word(0xa0);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x6d);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x174);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x1b4);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xb0);
	push_base_offset(0x1e8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x8);
	add();
	push_base_offset(0xb0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1b4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1e8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1b4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x174);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_byte(0x6e);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x174);
	push_byte(0x30);
	add();
	push_word(0x1180);
	push_byte(0x6e);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x174);
	push_word(0xc4);
	memcpy();
	load_base();
	push_word(0x1e8);
	sub();
	store_base();
	ret();

L0499c:
	load_base();
	push_word(0xa30);
	add();
	store_base();
	push_base_offset(0xa0c);
	move_arg(0x2);
	push_base_offset(0xa10);
	move_arg(0x2);
	push_base_offset(0xa14);
	move_arg(0x2);
	push_base_offset(0xa18);
	move_arg(0x2);
	push_base_offset(0xa1c);
	move_arg(0x2);
	push_base_offset(0xa20);
	move_arg(0x2);
	push_base_offset(0xa24);
	move_arg(0x2);
	push_base_offset(0xa28);
	move_arg(0x2);
	push_base_offset(0xa2c);
	move_arg(0x2);
	push_base_offset(0xa30);
	move_arg(0x2);
	push_base_offset(0x9dc);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x9d8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x9f0);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2a4);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x8c4);
	move(0x2);
	push_base_offset(0x2a4);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x800);
	move(0x2);
	push_base_offset(0x2a4);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x368);
	move(0x2);
	push_base_offset(0x1e4);
	push_byte(0x0);
	add();
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x1e4);
	push_byte(0x4);
	add();
	push_base_offset(0x2a4);
	move(0x2);
	push_base_offset(0x1e4);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1e4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1e4);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1e4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1e4);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1e4);
	push_byte(0x1c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1e4);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1e4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1e4);
	push_offset(L05271);
	call();
	push_base_offset(0xb8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xb4);
	push_byte(0x0);
	move(0x2);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x80);
	push_base_offset(0xb0);
	move_arg(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x885);
	grp1(0x85);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp1(0x86);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0x88);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x88);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x0);
	grp2(0x89);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x1);
	grp1(0x84);
	push_base_offset(0x1bc);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xb0);
	load(0x2);
	move(0x2);
	push_base_offset(0xb8);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_base_offset(0x1e4);
	grp1(0xb7);
	sys1(0xf);
	push_base_offset(0xac);
	move_arg(0x2);
	push_base_offset(0xa8);
	push_base_offset(0xa28);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x1);
	move(0x2);
	sys1(0x8);
	push_base_offset(0xa0);
	move_arg(0x2);
	push_base_offset(0xa4);
	move_arg(0x2);
	push_word(0x450);
	load(0x2);
	push_offset(L04bc9);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0xb);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04bc9);
	jc(0x0);
	push_base_offset(0xac);
	load(0x2);
	push_offset(L04bc9);
	jc(0x1);
	push_byte(0x32);
	push_offset(L06875);
	call();
	push_base_offset(0x9c);
	move_arg(0x2);
	push_base_offset(0x8c4);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0xa);
	add();
	push_base_offset(0x8c4);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0xa);
	add();
	push_byte(0x1);
	push_base_offset(0x9c);
	load(0x2);
	push_word(0xfa);
	push_byte(0x1);
	sys1(0x1f);

L04bc9:
	push_base_offset(0x98);
	push_base_offset(0x1b8);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x94);
	push_base_offset(0xb4);
	load(0x2);
	cmd_0c(0x2, 0x1);
	push_base_offset(0xb0);
	load(0x2);
	grp2(0xb8);
	push_base_offset(0x90);
	move_arg(0x2);
	push_word(0x46c);
	push_base_offset(0x90);
	load(0x2);
	move(0x2);
	push_dword(0x42ae4);
	push_base_offset(0xb0);
	load(0x2);
	move(0x2);
	push_word(0x4ac);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x68);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5c);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L04c23:
	push_base_offset(0x68);
	load(0x2);
	push_offset(L04c34);
	jc(0x1);
	push_base_offset(0x1e4);
	push_offset(L05271);
	call();

L04c34:
	push_base_offset(0x68);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x90);
	load(0x2);
	push_base_offset(0x1e4);
	grp2(0xba);

L04c45:
	sys1(0x5f);
	push_word(0x460);
	push_byte(0x0);
	move(0x2);
	push_word(0x4f4);
	load(0x2);
	push_offset(L05190);
	jc(0x0);
	push_word(0x404);
	load(0x2);
	push_offset(L04c45);
	jc(0x0);
	push_word(0x4b0);
	load(0x2);
	push_offset(L04c77);
	jc(0x1);
	push_word(0x4b0);
	push_byte(0x0);
	move(0x2);
	push_offset(L04c45);
	jmp();

L04c77:
	push_base_offset(0x34);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x9e8);
	sys1(0x49);
	push_offset(L04cf3);
	jc(0x1);
	push_base_offset(0x9e8);
	load(0x2);
	push_byte(0xc);
	eq();
	push_offset(L04cae);
	jc(0x1);
	push_base_offset(0x34);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x64);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x60);
	push_byte(0x2);
	move(0x2);
	push_offset(L04e7f);
	jmp();

L04cae:
	push_base_offset(0x9e8);
	load(0x2);
	push_byte(0xb);
	eq();
	push_offset(L04cd4);
	jc(0x1);
	push_base_offset(0x34);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x64);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x60);
	push_byte(0x0);
	move(0x2);
	push_offset(L04e7f);
	jmp();

L04cd4:
	push_base_offset(0x9dc);
	push_base_offset(0x9e8);
	load(0x2);
	move(0x2);
	push_base_offset(0x9e8);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L05190);
	jc(0x0);
	push_offset(L050fb);
	jmp();

L04cf3:
	push_base_offset(0x30);
	push_byte(0x0);
	move(0x2);

L04cfa:
	push_base_offset(0x8c);
	push_base_offset(0x90);
	load(0x2);
	grp1(0xbf);
	push_base_offset(0x8c);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000007);
	eq();
	push_offset(L04d7c);
	jc(0x1);
	push_base_offset(0x64);
	push_base_offset(0x8c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x60);
	push_base_offset(0x8c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x8c);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x28);
	push_base_offset(0x8c);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x30);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_offset(L04e7f);
	jc(0x0);
	push_offset(L04cfa);
	jmp();

L04d7c:
	push_base_offset(0x8c);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000006);
	eq();
	push_offset(L04dd1);
	jc(0x1);
	push_base_offset(0x64);
	push_base_offset(0x8c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x60);
	push_base_offset(0x8c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x30);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_offset(L04e7f);
	jc(0x0);
	push_offset(L04cfa);
	jmp();

L04dd1:
	push_base_offset(0x8c);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000002);
	eq();
	push_offset(L04e6f);
	jc(0x1);
	push_base_offset(0x9e8);
	push_base_offset(0x8c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x9e4);
	push_base_offset(0x8c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x9e8);
	load(0x2);
	push_base_offset(0x5c);
	load(0x2);
	eq();
	push_base_offset(0x9e4);
	load(0x2);
	push_base_offset(0x58);
	load(0x2);
	eq();
	bool_and();
	push_offset(L04cfa);
	jc(0x0);
	push_base_offset(0x5c);
	push_base_offset(0x9e8);
	load(0x2);
	move(0x2);
	push_base_offset(0x58);
	push_base_offset(0x9e4);
	load(0x2);
	move(0x2);
	push_base_offset(0x9e8);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L04cfa);
	jc(0x0);
	push_base_offset(0x9e8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04cfa);
	jc(0x0);
	push_base_offset(0x9e8);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L04cfa);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x8);
	add();
	push_offset(L06918);
	call();
	push_offset(L04cfa);
	jmp();

L04e6f:
	push_base_offset(0x8c);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04cfa);
	jc(0x1);

L04e7f:
	push_base_offset(0x80);
	push_base_offset(0x90);
	load(0x2);
	grp1(0xbc);
	push_word(0x4ac);
	push_base_offset(0x80);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x30);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0x34);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_word(0x4ac);
	load(0x2);
	push_offset(L04c45);
	jc(0x0);
	push_word(0x444);
	load(0x2);
	push_base_offset(0x80);
	push_byte(0x0);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L04c23);
	jc(0x0);
	push_word(0x444);
	load(0x2);
	push_offset(L04c45);
	jc(0x0);
	push_word(0x460);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_offset(L04f05);
	jc(0x0);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L04f20);
	jc(0x0);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_byte(0x0);
	push_byte(0x0);
	add();
	push_byte(0x0);
	push_byte(0x3);
	add();
	ternary();
	push_offset(L06918);
	call();

L04f05:
	push_base_offset(0x34);
	load(0x2);
	push_offset(L04f20);
	jc(0x0);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L04f20);
	jc(0x0);

L04f20:
	push_base_offset(0x34);
	load(0x2);
	push_offset(L04f60);
	jc(0x0);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L05190);
	jc(0x0);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04fb6);
	jc(0x0);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L05008);
	jc(0x0);
	push_base_offset(0x9f0);
	push_byte(0x1);
	move(0x2);
	push_offset(L05190);
	jmp();

L04f60:
	push_base_offset(0x90);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x64);
	load(0x2);
	push_base_offset(0x60);
	load(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_word(0x474);
	load(0x2);
	call();
	push_base_offset(0x9d8);
	move_arg(0x2);
	push_base_offset(0x9dc);
	move_arg(0x2);
	push_base_offset(0x90);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_base_offset(0x9dc);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L05190);
	jc(0x0);
	push_base_offset(0x9dc);
	load(0x2);
	push_dword(0x7fffffff);
	eq();
	push_offset(L04c23);
	jc(0x0);
	push_offset(L050fb);
	jmp();

L04fb6:
	push_base_offset(0xa30);
	load(0x2);
	push_base_offset(0xa2c);
	load(0x2);
	push_base_offset(0xa28);
	load(0x2);
	push_base_offset(0xa24);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x8c4);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x2c);
	load(0x2);
	add();
	push_base_offset(0x8c4);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	add();
	push_base_offset(0xa20);
	load(0x2);
	push_base_offset(0xa1c);
	load(0x2);
	push_offset(L05d04);
	call();
	push_offset(L04c23);
	jmp();

L05008:
	push_base_offset(0xa28);
	load(0x2);
	push_base_offset(0x60);
	load(0x2);
	push_base_offset(0xa20);
	load(0x2);
	push_base_offset(0xa1c);
	load(0x2);
	push_offset(L06802);
	call();
	push_base_offset(0xa24);
	load(0x2);
	push_byte(0x3);
	eq();
	push_word(0x1180);
	push_byte(0x67);
	add();
	push_word(0x1180);
	push_byte(0x69);
	add();
	ternary();
	push_base_offset(0x9cc);
	move_arg(0x2);
	push_base_offset(0x9cc);
	load(0x2);
	push_string("サンプルテキスト");
	push_base_offset(0xa28);
	load(0x2);
	push_word(0xfc);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_offset(L05828);
	call();
	push_base_offset(0xa2c);
	load(0x2);
	push_base_offset(0x9cc);
	load(0x2);
	grp1(0x57);
	push_base_offset(0xa30);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0xa28);
	load(0x2);
	push_word(0xfc);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L05a18);
	call();
	push_base_offset(0xa30);
	load(0x2);
	push_base_offset(0x60);
	load(0x2);
	push_base_offset(0xa28);
	load(0x2);
	push_word(0xfc);
	add();
	push_base_offset(0x60);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L05a18);
	call();
	push_base_offset(0xa28);
	load(0x2);
	push_base_offset(0xa24);
	load(0x2);
	push_base_offset(0xa28);
	load(0x2);
	push_word(0xfc);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0xa20);
	load(0x2);
	push_base_offset(0xa1c);
	load(0x2);
	push_offset(L06402);
	call();
	push_byte(0x0);
	grp1(0x0);
	push_offset(L04c23);
	jmp();

L050fb:
	push_base_offset(0x24);
	push_base_offset(0xa18);
	load(0x2);
	push_base_offset(0xa0c);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0x24);
	push_base_offset(0xa0c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1bc);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0x18);
	push_base_offset(0xa14);
	load(0x2);
	push_base_offset(0xa0c);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0x18);
	push_base_offset(0xa0c);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	push_base_offset(0x98);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0xc);
	push_base_offset(0xa10);
	load(0x2);
	push_base_offset(0xa0c);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0xc);
	push_base_offset(0xa0c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x94);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0x24);
	push_base_offset(0x18);
	push_base_offset(0xc);
	push_base_offset(0xa0c);
	load(0x2);
	push_base_offset(0xb8);
	load(0x2);
	add();
	push_word(0x478);
	load(0x2);
	call();

L05190:
	push_dword(0x42ae4);
	push_byte(0x0);
	move(0x2);
	push_word(0x460);
	push_byte(0x1);
	move(0x2);
	push_word(0x4ac);
	push_byte(0x0);
	move(0x2);
	push_word(0x46c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x90);
	load(0x2);
	grp1(0xb9);

L051b5:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L051cb);
	jc(0x0);
	push_word(0x508);
	load(0x2);
	push_offset(L051b5);
	jc(0x0);

L051cb:
	push_base_offset(0x9f0);
	load(0x2);
	push_offset(L05254);
	jc(0x0);
	push_base_offset(0x9dc);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L05254);
	jc(0x1);
	push_word(0x450);
	load(0x2);
	push_offset(L05254);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0xb);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L05254);
	jc(0x0);
	push_base_offset(0xac);
	load(0x2);
	push_offset(L05254);
	jc(0x1);
	push_base_offset(0xa8);
	load(0x2);
	push_base_offset(0xa28);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x1);
	eq();
	push_offset(L05254);
	jc(0x1);
	push_byte(0x32);
	push_offset(L06875);
	call();
	push_base_offset(0x9c);
	move_arg(0x2);
	push_base_offset(0xa4);
	load(0x2);
	push_base_offset(0xa0);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x9c);
	load(0x2);
	push_word(0xfa);
	push_byte(0x1);
	sys1(0x1f);
	push_base_offset(0x9c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	sys1(0x5f);

L05254:
	push_base_offset(0xb0);
	load(0x2);
	grp1(0x81);
	push_base_offset(0x9dc);
	load(0x2);
	push_base_offset(0x9d8);
	load(0x2);
	push_base_offset(0x9f0);
	load(0x2);
	load_base();
	push_word(0xa30);
	sub();
	store_base();
	ret();

L05271:
	load_base();
	push_word(0x1ec);
	add();
	store_base();
	push_base_offset(0x1ec);
	move_arg(0x2);
	push_base_offset(0x1d0);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1d0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1d0);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x20);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1d0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x1c4);
	push_byte(0x24);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1d0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x1c4);
	push_byte(0x3c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x34);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x184);
	push_word(0x9c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x184);
	push_word(0xa0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x184);
	push_word(0xa4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x184);
	push_word(0xa8);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1d0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x184);
	push_word(0xa8);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x1d0);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x184);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc0);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x8);
	add();
	push_base_offset(0xc0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1c4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x184);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x8);
	add();
	push_word(0x31d);
	push_byte(0x0);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0xc);
	add();
	push_word(0x1a4);
	push_byte(0x0);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_word(0x98);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x184);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xc0);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x0);
	add();
	push_byte(0x6);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x8);
	add();
	push_base_offset(0xc0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1c4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x9c);
	push_word(0x3a3);
	push_word(0x3d5);
	push_word(0x407);
	push_word(0x439);
	push_word(0x46b);
	push_word(0x49d);
	cmd_0c(0x2, 0x6);
	push_base_offset(0x18);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	cmd_0c(0x2, 0x6);
	push_base_offset(0xb4);
	push_byte(0x0);
	move(0x2);

L05521:
	push_base_offset(0x184);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x8);
	add();
	push_base_offset(0x9c);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0xc);
	add();
	push_word(0x21a);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_word(0x9b);
	add();
	push_base_offset(0x18);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc0);
	load(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x184);
	push_word(0xc4);
	memcpy();
	push_base_offset(0xb4);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x6);
	lt();
	push_offset(L05521);
	jc(0x0);
	push_base_offset(0xc0);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x8);
	add();
	push_base_offset(0xc0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1ec);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x1c4);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x184);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1180);
	push_word(0x99);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x184);
	push_byte(0x30);
	add();
	push_word(0x1180);
	push_word(0x99);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc0);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x184);
	push_word(0xc4);
	memcpy();
	load_base();
	push_word(0x1ec);
	sub();
	store_base();
	ret();

L056f8:
	load_base();
	push_byte(0x40);
	add();
	store_base();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_dword(0xffffff);
	and();
	move(0x2);
	push_word(0x1180);
	push_byte(0x6b);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_byte(0x6b);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x3c);
	load(0x2);
	push_dword(0xffffff);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0xffffff);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x30);
	load(0x2);
	push_byte(0x0);
	push_byte(0x32);
	push_byte(0x2);
	push_byte(0xd);
	push_byte(0xd);
	push_base_offset(0x38);
	load(0x2);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	push_base_offset(0x1c);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x30);
	load(0x2);
	grp2(0x9b);
	push_base_offset(0x1c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x18);
	push_word(0x1180);
	push_byte(0x5b);
	add();
	grp1(0x16);
	push_base_offset(0x24);
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	sub();
	push_byte(0x1);
	sar();
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	add();
	sub();
	push_base_offset(0x28);
	load(0x2);
	gt();
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	add();
	sub();
	ternary();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x2);
	push_word(0x1180);
	push_byte(0x6b);
	add();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x0);
	grp1(0x18);
	load_base();
	push_byte(0x40);
	sub();
	store_base();
	ret();

L05828:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L056f8);
	call();
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L05875:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_word(0x910);
	load(0x2);
	push_byte(0xc);
	gt();
	push_byte(0xc);
	push_word(0x910);
	load(0x2);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L058a0:
	push_base_offset(0xc);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	push_dword(0xffffff);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0xffffff);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x32);
	push_byte(0x2);
	push_byte(0xd);
	push_byte(0xd);
	push_byte(0x0);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	push_dword(0xffffff);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0xffffff);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x32);
	push_byte(0x2);
	push_byte(0xd);
	push_byte(0xd);
	push_dword(0xae4200);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	lt();
	push_offset(L058a0);
	jc(0x0);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L0599f:
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x1c);
	push_base_offset(0x30);
	load(0x2);
	grp1(0x16);
	push_base_offset(0x30);
	load(0x2);
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x30);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x2c);
	load(0x2);
	push_dword(0xffffff);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0xffffff);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x9);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x2);
	push_byte(0xa);
	push_byte(0xa);
	push_base_offset(0x28);
	load(0x2);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();

L05a18:
	load_base();
	push_byte(0x3c);
	add();
	store_base();
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x30);
	push_word(0x3a3);
	push_word(0x3d5);
	push_word(0x407);
	push_word(0x439);
	push_word(0x46b);
	push_word(0x49d);
	cmd_0c(0x2, 0x6);
	push_base_offset(0x18);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	cmd_0c(0x2, 0x6);
	push_word(0x1180);
	push_word(0x9d);
	add();
	push_base_offset(0x18);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_base_offset(0x34);
	load(0x2);
	grp1(0x13);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x30);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x21a);
	push_word(0x1180);
	push_word(0x9d);
	add();
	push_base_offset(0x18);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp3(0x89);
	load_base();
	push_byte(0x3c);
	sub();
	store_base();
	ret();

L05aac:
	load_base();
	push_byte(0x3c);
	add();
	store_base();
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x30);
	push_word(0x3a3);
	push_word(0x3d5);
	push_word(0x407);
	push_word(0x439);
	push_word(0x46b);
	push_word(0x49d);
	cmd_0c(0x2, 0x6);
	push_base_offset(0x18);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x1);
	cmd_0c(0x2, 0x6);
	push_word(0x1180);
	push_word(0x9d);
	add();
	push_base_offset(0x18);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_base_offset(0x34);
	load(0x2);
	grp1(0x13);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x30);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x21a);
	push_word(0x1180);
	push_word(0x9d);
	add();
	push_base_offset(0x18);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	load_base();
	push_byte(0x3c);
	sub();
	store_base();
	ret();

L05b40:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x1180);
	push_word(0x9f);
	add();
	push_word(0x500);
	push_word(0x2d0);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1180);
	push_word(0x9f);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1180);
	push_word(0x9f);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L05ba0);
	call();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_word(0x9f);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp3(0x89);
	push_word(0x1180);
	push_word(0x9f);
	add();
	grp1(0x12);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L05ba0:
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x24);
	push_word(0x1100);
	push_byte(0x62);
	add();
	grp1(0x16);
	push_base_offset(0x8);
	push_base_offset(0x24);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_word(0x500);
	div();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x70);
	add();
	load(0x1);
	push_offset(L06ce9);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x31d);
	push_byte(0x0);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_word(0x86);
	push_word(0x223);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_word(0x1100);
	push_byte(0x63);
	add();
	push_byte(0x1);
	push_base_offset(0xc);
	load(0x2);
	grp1(0x18);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x31d);
	push_word(0x110);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_word(0x86);
	push_word(0x22c);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_word(0x1100);
	push_byte(0x64);
	add();
	push_byte(0x1);
	push_base_offset(0xc);
	load(0x2);
	grp1(0x18);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x31d);
	push_word(0x125);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_word(0x86);
	push_word(0x2b8);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_word(0x1100);
	push_byte(0x66);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x28);
	load(0x2);
	push_word(0x88);
	add();
	load(0x1);
	push_byte(0x3);
	eq();
	push_offset(L05cbb);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x31d);
	push_byte(0x9);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_word(0x86);
	push_byte(0xb);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	add();
	push_word(0x1100);
	push_byte(0x67);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);

L05cbb:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L05cc2:
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_word(0xfc);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L05aac);
	call();
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x6);
	lt();
	push_offset(L05cc2);
	jc(0x0);
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();

L05d04:
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_word(0x31d);
	push_byte(0x0);
	add();
	geq();
	push_base_offset(0x18);
	load(0x2);
	push_word(0x31d);
	push_byte(0x0);
	add();
	push_word(0x1b0);
	add();
	lt();
	bool_and();
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1a4);
	push_byte(0x0);
	add();
	geq();
	bool_and();
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1a4);
	push_byte(0x0);
	add();
	push_byte(0x74);
	add();
	lt();
	bool_and();
	push_offset(L05e63);
	jc(0x1);
	push_base_offset(0x8);
	push_word(0x1180);
	push_byte(0x58);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_word(0x31d);
	sub();
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1a4);
	sub();
	grp3(0x17);
	push_offset(L05e63);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_word(0xfc);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	neq();
	push_offset(L05e63);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_word(0xfc);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x3);
	eq();
	push_word(0x1180);
	push_byte(0x67);
	add();
	push_word(0x1180);
	push_byte(0x69);
	add();
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_string("サンプルテキスト");
	push_base_offset(0x8);
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_offset(L05828);
	call();
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x57);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L05a18);
	call();
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L06402);
	call();
	push_byte(0x0);
	grp1(0x0);

L05e63:
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();

L05e69:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_word(0xd4);
	add();
	push_byte(0x20);
	memclr();
	push_base_offset(0x20);
	load(0x2);
	push_word(0xd4);
	add();
	push_string("ＭＳ ゴシック");
	cmd_6a();
	push_base_offset(0x20);
	load(0x2);
	push_word(0xf4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_word(0xf8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x10);
	add();
	push_dword(0x483d8);
	load(0x2);
	move(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x12);
	add();
	push_byte(0x6);
	move(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x84);
	add();
	push_byte(0x0);
	move(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x1);
	push_word(0x2c0);
	push_byte(0x14);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x4d4);
	push_base_offset(0x20);
	load(0x2);
	push_word(0xf4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_word(0xd4);
	add();
	push_offset(L06d0c);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x914);
	load(0x2);
	neq();
	push_offset(L05fe2);
	jc(0x1);
	push_base_offset(0x1c);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_byte(0x1a);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x2);
	grp1(0xe);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x400);
	grp1(0xe);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x2);
	grp1(0xe);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x400);
	grp1(0xe);
	push_word(0x914);
	push_base_offset(0xc);
	load(0x2);
	move(0x2);

L05fe2:
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x5b);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x5b);
	add();
	push_byte(0x1);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_byte(0x1c);
	push_offset(L056f8);
	call();
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_byte(0x63);
	add();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1180);
	push_byte(0x66);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_word(0x1180);
	push_byte(0x67);
	add();
	push_string("サンプルテキスト");
	push_base_offset(0x20);
	load(0x2);
	push_word(0xf4);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_offset(L05828);
	call();
	push_word(0x1180);
	push_byte(0x69);
	add();
	push_string("サンプルテキスト");
	push_base_offset(0x20);
	load(0x2);
	push_word(0xf8);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_word(0x80);
	push_offset(L05828);
	call();
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L06115:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x72);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x1);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	call();
	push_base_offset(0x8);
	load(0x2);
	push_offset(L0615f);
	jc(0x1);

L0615f:
	push_offset(L061e6);
	call();
	push_offset(L063cf);
	call();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xa);
	add();
	load(0x1);
	push_offset(L061b0);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x84);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L061e0);
	jc(0x1);
	push_word(0xbb4);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xa);
	add();
	push_byte(0x0);
	move(0x1);
	push_offset(L061e0);
	jmp();

L061b0:
	push_word(0xbb4);
	load(0x2);
	push_offset(L061e0);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x84);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L061e0);
	jc(0x1);
	push_word(0xbb4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xa);
	add();
	push_byte(0x1);
	move(0x1);

L061e0:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L061e6:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_offset(L061fd);
	call();
	push_offset(L06339);
	call();
	push_offset(L0636e);
	call();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L061fd:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L06333);
	jc(0x1);
	push_word(0x7e8);
	push_byte(0x1);
	move(0x2);
	push_word(0xb3c);
	load(0x2);
	push_offset(L06250);
	jc(0x1);
	push_word(0x7e4);
	push_byte(0x1);
	move(0x2);
	push_dword(0x42764);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x4c);

L06236:
	push_word(0x4f4);
	load(0x2);
	push_offset(L0632c);
	jc(0x0);
	push_word(0xb40);
	load(0x2);
	push_offset(L06250);
	jc(0x1);
	sys1(0x5f);
	push_offset(L06236);
	jmp();

L06250:
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L06257:
	push_dword(0x42a94);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp3(0x8e);
	push_dword(0x42a94);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	load(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x88);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L06257);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("msgwndctrl._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	sys1(0x41);

L0632c:
	push_word(0x7e8);
	push_byte(0x0);
	move(0x2);

L06333:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L06339:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L06368);
	jc(0x1);
	push_word(0xb64);
	load(0x2);
	push_offset(L06368);
	jc(0x1);
	push_word(0xb6c);
	push_byte(0x1);
	move(0x2);

L0635c:
	sys1(0x5f);
	push_word(0xb6c);
	load(0x2);
	push_offset(L0635c);
	jc(0x0);

L06368:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L0636e:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_word(0x41c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L063c9);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("bbs._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x24690);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e04);
	add();
	load(0x2);
	push_dword(0x9fa50);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	sys1(0x41);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L063c9);
	jc(0x1);
	push_byte(0x0);
	grp1(0x0);

L063c9:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L063cf:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x4c4);
	load(0x2);
	push_offset(L063fc);
	jc(0x1);
	push_word(0x4cc);
	push_byte(0x1);
	move(0x2);
	push_word(0x4c8);
	load(0x2);
	push_offset(L063fc);
	jc(0x1);
	push_word(0x4d0);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x4c);

L063fc:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L06402:
	load_base();
	push_byte(0x44);
	add();
	store_base();
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x30);
	push_byte(0x4);
	push_byte(0xc);
	mul();
	memclr();
	push_base_offset(0x30);
	push_byte(0x0);
	push_byte(0x2);
	shl();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x1);
	push_byte(0x2);
	shl();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x2);
	push_byte(0x2);
	shl();
	add();
	push_offset(L064f8);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x3);
	push_byte(0x2);
	shl();
	add();
	push_offset(L06546);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x4);
	push_byte(0x2);
	shl();
	add();
	push_offset(L06593);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x5);
	push_byte(0x2);
	shl();
	add();
	push_offset(L065e0);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x6);
	push_byte(0x2);
	shl();
	add();
	push_offset(L06639);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x7);
	push_byte(0x2);
	shl();
	add();
	push_offset(L0679a);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x8);
	push_byte(0x2);
	shl();
	add();
	push_offset(L066fe);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x9);
	push_byte(0x2);
	shl();
	add();
	push_offset(L0672c);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0xa);
	push_byte(0x2);
	shl();
	add();
	push_offset(L0675a);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0xb);
	push_byte(0x2);
	shl();
	add();
	push_offset(L067d3);
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_base_offset(0x30);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	load_base();
	push_byte(0x44);
	sub();
	store_base();
	ret();

L064f8:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_word(0xd4);
	add();
	push_byte(0x20);
	memclr();
	push_base_offset(0x10);
	load(0x2);
	push_word(0xd4);
	add();
	push_word(0x90c);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	cmd_6a();
	push_offset(L061e6);
	call();
	push_offset(L063cf);
	call();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L06546:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_word(0xf4);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_dword(0xffffff);
	and();
	move(0x2);
	push_word(0x4d4);
	push_base_offset(0x10);
	load(0x2);
	push_word(0xf4);
	add();
	load(0x2);
	move(0x2);
	push_offset(L061e6);
	call();
	push_offset(L063cf);
	call();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L06593:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_word(0xf8);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_dword(0xffffff);
	and();
	move(0x2);
	push_word(0x4d4);
	push_base_offset(0x10);
	load(0x2);
	push_word(0xf8);
	add();
	load(0x2);
	move(0x2);
	push_offset(L061e6);
	call();
	push_offset(L063cf);
	call();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L065e0:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x72);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_base_offset(0x10);
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	call();
	push_offset(L063cf);
	call();
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L06639:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x12);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L066f8);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L066f8);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x74);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_base_offset(0x10);
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0xb48);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_base_offset(0x4);
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0xc);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0xa);
	add();
	load(0x1);
	push_word(0xbac);
	load(0x2);
	bool_or();
	push_dword(0x9fab8);
	push_word(0xf4);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	bool_or();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	push_base_offset(0xc);
	load(0x2);
	call();

L066f8:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L066fe:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x14);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x1);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L0672c:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x1);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L0675a:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1a);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	eq();
	move(0x1);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L0679a:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x84);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L067cd);
	jc(0x1);

L067cd:
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L067d3:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_word(0x2c0);
	push_byte(0x14);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L06802:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0x14);
	load(0x2);
	push_word(0xfc);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_word(0xfc);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x14);
	load(0x2);
	push_word(0xfc);
	add();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_word(0xfc);
	add();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L06875:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L06899);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_offset(L068b5);
	jmp();

L06899:
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L068b5);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);

L068b5:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	sys1(0x4);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1f4);
	add();
	move(0x2);

L068df:
	sys1(0x4);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	geq();
	push_offset(L06906);
	jc(0x0);
	push_word(0x450);
	load(0x2);
	push_offset(L06906);
	jc(0x0);
	sys1(0x5f);
	push_offset(L068df);
	jmp();

L06906:
	sys1(0x5f);
	push_word(0x450);
	load(0x2);
	push_offset(L06906);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L06918:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x7);
	add();
	eq();
	push_offset(L06c6e);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x6);
	add();
	eq();
	push_offset(L06c6e);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x16);
	add();
	eq();
	push_offset(L06c6e);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L06c6e);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x8);
	add();
	eq();
	push_offset(L06ac7);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	add();
	eq();
	push_offset(L06a3a);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x3);
	add();
	eq();
	push_offset(L06a98);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xc);
	add();
	eq();
	push_offset(L06a69);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xf);
	add();
	eq();
	push_offset(L06af6);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x12);
	add();
	eq();
	push_offset(L06b25);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x17);
	add();
	eq();
	push_offset(L06b54);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1b);
	add();
	eq();
	push_offset(L06b83);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1e);
	add();
	eq();
	push_offset(L06bb2);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x21);
	add();
	eq();
	push_offset(L06be1);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x24);
	add();
	eq();
	push_offset(L06c10);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x27);
	add();
	eq();
	push_offset(L06c3f);
	jc(0x0);
	push_offset(L06cde);
	jmp();
	push_offset(L06c6e);
	jmp();

L06a3a:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x51c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x51c);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06a69:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	load(0x2);
	add();
	move(0x2);
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x520);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06a98:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x524);
	load(0x2);
	add();
	move(0x2);
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x524);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06ac7:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x528);
	load(0x2);
	add();
	move(0x2);
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x528);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06af6:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x52c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x52c);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06b25:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x530);
	load(0x2);
	add();
	move(0x2);
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x530);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06b54:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x534);
	load(0x2);
	add();
	move(0x2);
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x534);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06b83:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x538);
	load(0x2);
	add();
	move(0x2);
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x538);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06bb2:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x53c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x53c);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06be1:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x540);
	load(0x2);
	add();
	move(0x2);
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x540);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06c10:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x544);
	load(0x2);
	add();
	move(0x2);
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x544);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06c3f:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x548);
	load(0x2);
	add();
	move(0x2);
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x548);
	move_arg(0x2);
	push_offset(L06c6e);
	jmp();

L06c6e:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L06ca9);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	geq();
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L06ca9);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	snd1(0x26);

L06ca9:
	push_base_offset(0x8);
	load(0x2);
	push_word(0x80);
	push_byte(0x40);
	snd1(0x24);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x49c);
	load(0x2);
	ternary();
	push_word(0x49c);
	move_arg(0x2);

L06cde:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L06ce9:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x100);
	push_word(0x100);
	push_base_offset(0x4);
	load(0x2);
	mul();
	push_byte(0xb);
	push_byte(0x1);
	sub();
	div();
	sub();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L06d0c:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L06d1d:
	push_base_offset(0x4);
	load(0x2);
	push_word(0x910);
	load(0x2);
	lt();
	push_offset(L06d98);
	jc(0x1);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x14);
	load(0x2);
	cmd_69();
	push_offset(L06d87);
	jc(0x1);
	push_base_offset(0x10);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	move(0x2);
	push_offset(L06db1);
	jmp();

L06d87:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L06d1d);
	jmp();

L06d98:
	push_base_offset(0x10);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L06db1:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
