	load_base();
	push_byte(0x0);
	add();
	store_base();

L00005:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L00026);
	jc(0x0);
	push_word(0x167c);
	load(0x2);
	push_offset(L00026);
	jc(0x0);
	push_word(0xc04);
	push_offset(L0002c);
	call();
	push_offset(L00005);
	jmp();

L00026:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L0002c:
	load_base();
	push_byte(0x1c);
	add();
	store_base();
	push_base_offset(0x1c);
	move_arg(0x2);
	sys1(0x4);
	push_base_offset(0x10);
	move_arg(0x2);
	push_offset(L001d0);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_word(0x96);
	push_offset(L00407);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	ternary();
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_word(0x1668);
	push_byte(0x0);
	add();
	load(0x2);
	eq();
	push_offset(L000ea);
	jc(0x0);
	push_word(0x1668);
	push_byte(0x0);
	add();
	push_base_offset(0x18);
	load(0x2);
	move(0x2);
	push_word(0x1668);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L000a2);
	jc(0x0);
	push_word(0x1668);
	push_byte(0x4);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_offset(L000ea);
	jmp();

L000a2:
	push_base_offset(0x18);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x1668);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	sub();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x18);
	move_arg(0x2);
	push_word(0x1668);
	push_byte(0x4);
	add();
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	sub();
	move(0x2);

L000ea:
	push_word(0x1668);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L001ca);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x1668);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	lt();
	push_offset(L00131);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_word(0x1668);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);

L00131:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L0014c);
	jc(0x0);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);

L0014c:
	push_base_offset(0x18);
	push_byte(0x5a);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	cmd_42();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	sub();
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	sin();
	push_base_offset(0x18);
	move_arg(0x2);
	push_word(0x1668);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x1668);
	push_byte(0xc);
	add();
	push_word(0x2b8);
	push_byte(0x18);
	add();
	push_word(0x2b8);
	sub();
	push_base_offset(0x18);
	load(0x2);
	push_word(0x2b8);
	push_byte(0x18);
	add();
	push_word(0x2b8);
	sub();
	mul();
	push_byte(0x10);
	sar();
	sub();
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L00316);
	call();

L001ca:
	load_base();
	push_byte(0x1c);
	sub();
	store_base();
	ret();

L001d0:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	push_byte(0x20);
	push_word(0x8c);
	add();
	load(0x1);
	bool_zero();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_offset(L0030b);
	jc(0x0);
	push_word(0x1684);
	load(0x2);
	push_offset(L00243);
	jc(0x1);
	push_word(0x1688);
	load(0x2);
	push_offset(L00213);
	jc(0x1);
	push_word(0x1688);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	push_byte(0x1);
	move(0x2);
	push_offset(L0030b);
	jmp();

L00213:
	push_word(0x168c);
	load(0x2);
	push_offset(L0022f);
	jc(0x1);
	push_word(0x168c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_offset(L0030b);
	jmp();

L0022f:
	push_base_offset(0x14);
	push_word(0x1668);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	move(0x2);
	push_offset(L0030b);
	jmp();

L00243:
	usr1(0x6);
	push_offset(L0030b);
	jc(0x1);
	sys1(0xf);
	push_offset(L0030b);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xd4);
	add();
	load(0x2);
	bool_and();
	push_word(0x1680);
	load(0x2);
	bool_zero();
	bool_and();
	push_word(0x450);
	load(0x2);
	bool_zero();
	bool_and();
	push_word(0xbac);
	load(0x2);
	bool_zero();
	bool_and();
	push_word(0xbbc);
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L0030b);
	jc(0x1);
	sys1(0x8);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_offset(L00457);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x125);
	push_byte(0xa);
	sub();
	push_base_offset(0x8);
	load(0x2);
	add();
	geq();
	push_base_offset(0x10);
	load(0x2);
	push_word(0x125);
	push_byte(0xa);
	sub();
	push_base_offset(0x8);
	load(0x2);
	add();
	push_word(0x2cb);
	push_byte(0x14);
	add();
	add();
	lt();
	bool_and();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x2b8);
	push_byte(0xa);
	sub();
	push_base_offset(0x4);
	load(0x2);
	add();
	geq();
	bool_and();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x2b8);
	push_byte(0xa);
	sub();
	push_base_offset(0x4);
	load(0x2);
	add();
	push_byte(0x18);
	push_byte(0x14);
	add();
	add();
	lt();
	bool_and();
	push_offset(L00304);
	jc(0x0);
	push_offset(L0030b);
	jmp();

L00304:
	push_base_offset(0x14);
	push_byte(0x1);
	move(0x2);

L0030b:
	push_base_offset(0x14);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L00316:
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x24);
	push_byte(0x0);
	move(0x2);

L00327:
	push_base_offset(0x28);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x8);
	add();
	push_word(0x1414);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x1668);
	push_byte(0x8);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0xc);
	add();
	push_word(0x143c);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x1668);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	move(0x2);
	push_word(0xc00);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L003c8);
	jc(0x1);
	push_base_offset(0x20);
	push_dword(0x10000007);
	push_byte(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	cmd_0c(0x2, 0x6);
	push_word(0xc00);
	load(0x2);
	push_byte(0x6);
	push_base_offset(0x20);
	sys1(0xac);

L003c8:
	push_base_offset(0x24);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L00327);
	jc(0x0);
	push_word(0xc00);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00401);
	jc(0x0);
	push_dword(0x42aa0);
	load(0x2);
	push_base_offset(0x2c);
	load(0x2);
	grp1(0xb7);
	push_byte(0x0);
	grp1(0x0);

L00401:
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();

L00407:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L0042b);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_offset(L00447);
	jmp();

L0042b:
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L00447);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);

L00447:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L00457:
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L00591);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00591);
	jc(0x1);
	push_base_offset(0x30);
	push_word(0x400);
	push_byte(0x57);
	add();
	grp1(0x16);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	lt();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0xc);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x30);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	gt();
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x14);
	push_word(0x3c0);
	push_word(0x2d0);
	sub();
	push_base_offset(0x8);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	lt();
	push_word(0x2d0);
	push_base_offset(0x14);
	load(0x2);
	add();
	push_word(0x2d0);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	sar();
	add();
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);

L00591:
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L005cf);
	jc(0x1);
	push_base_offset(0x4);
	push_word(0x3c0);
	push_word(0x2d0);
	sub();
	move(0x2);

L005cf:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L00631);
	jc(0x1);
	push_byte(0x20);
	push_word(0x12e);
	add();
	load(0x1);
	push_byte(0x2);
	eq();
	push_offset(L00631);
	jc(0x1);
	push_base_offset(0x20);
	push_word(0x400);
	push_byte(0x5a);
	add();
	grp1(0x16);
	push_base_offset(0x4);
	push_word(0x2d0);
	push_base_offset(0x20);
	push_byte(0xc);
	add();
	load(0x2);
	sub();
	push_word(0x1c7);
	sub();
	move(0x2);

L00631:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();
