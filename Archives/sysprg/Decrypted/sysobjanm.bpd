	load_base();
	push_byte(0x14);
	add();
	store_base();

L00005:
	push_base_offset(0x14);
	sys1(0x49);
	push_offset(L00015);
	jc(0x0);
	sys1(0x5f);
	push_offset(L00005);
	jmp();

L00015:
	push_base_offset(0x10);
	push_dword(0x42324);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x44);
	mul();
	add();
	move(0x2);
	sys1(0x4);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x3c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);

L0004b:
	sys1(0x5f);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L000ce);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	geq();
	push_offset(L0004b);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	grp1(0x57);
	push_byte(0x0);
	grp1(0x0);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x3c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	lt();
	push_offset(L0004b);
	jc(0x0);
	push_offset(L000f6);
	jmp();

L000ce:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	add();
	grp1(0x57);
	push_byte(0x0);
	grp1(0x0);

L000f6:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
