	load_base();
	push_byte(0x44);
	add();
	store_base();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x40);
	push_offset(L0005b);
	push_offset(L0007d);
	push_offset(L002ac);
	push_offset(L002e3);
	push_offset(L0031d);
	push_offset(L00351);
	push_offset(L00385);
	push_offset(L003b9);
	push_offset(L003f6);
	push_offset(L0043a);
	push_offset(L005a2);
	push_offset(L00956);
	push_offset(L00afd);
	push_offset(L00c14);
	push_offset(L00d2b);
	push_offset(L00dee);
	push_offset(L00e9a);
	push_offset(L00ee4);
	cmd_0c(0x2, 0x12);
	push_base_offset(0x40);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	load_base();
	push_byte(0x44);
	sub();
	store_base();
	ret();

L0005b:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	sys1(0x3d);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L012cb);
	call();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L0007d:
	load_base();
	push_word(0xa54);
	add();
	store_base();
	push_base_offset(0xa44);
	move_arg(0x2);
	push_base_offset(0xa48);
	move_arg(0x2);
	push_base_offset(0xa4c);
	move_arg(0x2);
	push_base_offset(0xa50);
	move_arg(0x2);
	push_base_offset(0xa54);
	move_arg(0x2);
	push_base_offset(0xa40);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x628);
	push_offset(L0005b);
	call();
	push_base_offset(0xa50);
	load(0x2);
	push_base_offset(0x628);
	push_base_offset(0x318);
	push_string("%s\\%s\\*.*");
	cmd_6f();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x318);
	push_byte(0x0);
	sys1(0x26);
	push_base_offset(0x31c);
	move_arg(0x2);
	push_base_offset(0x31c);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L002a0);
	jc(0x1);
	push_base_offset(0x31c);
	load(0x2);
	sys1(0x20);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x31c);
	load(0x2);
	push_base_offset(0x318);
	push_byte(0x0);
	sys1(0x26);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L0011c);
	jc(0x0);
	push_base_offset(0xa50);
	load(0x2);
	push_base_offset(0x628);
	push_base_offset(0xa2c);
	push_string("実行時ビルド中に [ %s\\%s ] 内のフォルダの取得に失敗しました");
	cmd_6f();
	push_base_offset(0xa2c);
	cmd_79();
	push_offset(L00299);
	jmp();

L0011c:
	push_base_offset(0x62c);
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x7fffffff);
	move(0x2);
	push_base_offset(0xa3c);
	push_byte(0x0);
	move(0x2);

L00137:
	push_base_offset(0xa3c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	geq();
	push_offset(L00299);
	jc(0x0);
	push_base_offset(0x62c);
	load(0x2);
	cmd_68();
	push_base_offset(0xa34);
	move_arg(0x2);
	push_base_offset(0xa34);
	load(0x2);
	push_byte(0x3);
	geq();
	push_offset(L00275);
	jc(0x1);
	push_base_offset(0x62c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x0);
	push_byte(0x30);
	geq();
	push_base_offset(0x62c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x0);
	push_byte(0x39);
	leq();
	bool_and();
	push_base_offset(0x62c);
	load(0x2);
	push_byte(0x1);
	add();
	load(0x0);
	push_byte(0x30);
	geq();
	bool_and();
	push_base_offset(0x62c);
	load(0x2);
	push_byte(0x1);
	add();
	load(0x0);
	push_byte(0x39);
	leq();
	bool_and();
	push_base_offset(0x62c);
	load(0x2);
	push_byte(0x2);
	add();
	load(0x0);
	push_byte(0x30);
	geq();
	bool_and();
	push_base_offset(0x62c);
	load(0x2);
	push_byte(0x2);
	add();
	load(0x0);
	push_byte(0x39);
	leq();
	bool_and();
	push_offset(L00275);
	jc(0x1);
	push_base_offset(0xa30);
	push_base_offset(0x62c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x0);
	push_byte(0x30);
	sub();
	push_byte(0x64);
	mul();
	push_base_offset(0x62c);
	load(0x2);
	push_byte(0x1);
	add();
	load(0x0);
	push_byte(0x30);
	sub();
	push_byte(0xa);
	mul();
	add();
	push_base_offset(0x62c);
	load(0x2);
	push_byte(0x2);
	add();
	load(0x0);
	push_byte(0x30);
	sub();
	add();
	move(0x2);
	push_base_offset(0xa30);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	lt();
	push_offset(L00275);
	jc(0x1);
	push_base_offset(0xa38);
	push_byte(0x0);
	move(0x2);

L00202:
	push_base_offset(0xa38);
	load(0x2);
	push_base_offset(0xa44);
	load(0x2);
	geq();
	push_offset(L00275);
	jc(0x0);
	push_base_offset(0xa48);
	load(0x2);
	push_base_offset(0xa38);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	push_base_offset(0xa4c);
	load(0x2);
	push_base_offset(0x62c);
	load(0x2);
	push_base_offset(0xa50);
	load(0x2);
	push_base_offset(0xa2c);
	push_string("%s\\%s\\%s%s");
	cmd_6f();
	push_byte(0x0);
	push_base_offset(0xa2c);
	sys1(0x34);
	push_offset(L00255);
	jc(0x0);
	push_base_offset(0xa38);
	push_base_offset(0xa38);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00202);
	jmp();

L00255:
	push_base_offset(0xa2c);
	push_base_offset(0x628);
	push_base_offset(0xa54);
	load(0x2);
	push_string("%s\\%s");
	cmd_6f();
	push_base_offset(0x4);
	push_base_offset(0xa30);
	load(0x2);
	move(0x2);
	push_base_offset(0xa40);
	push_byte(0x1);
	move(0x2);

L00275:
	push_base_offset(0x62c);
	push_base_offset(0x62c);
	load(0x2);
	push_base_offset(0xa34);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xa3c);
	push_base_offset(0xa3c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00137);
	jmp();

L00299:
	push_base_offset(0xc);
	load(0x2);
	sys1(0x21);

L002a0:
	push_base_offset(0xa40);
	load(0x2);
	load_base();
	push_word(0xa54);
	sub();
	store_base();
	ret();

L002ac:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_string(".bs5");
	push_string(".bsc");
	cmd_0c(0x2, 0x2);
	push_base_offset(0x10);
	load(0x2);
	push_string("Script");
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	push_byte(0x2);
	push_offset(L0007d);
	call();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L002e3:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	push_string(".png");
	push_string(".bmp");
	push_string("");
	cmd_0c(0x2, 0x3);
	push_base_offset(0x14);
	load(0x2);
	push_string("Graphic");
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	push_byte(0x3);
	push_offset(L0007d);
	call();
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L0031d:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_string(".ogg");
	cmd_0c(0x2, 0x1);
	push_base_offset(0xc);
	load(0x2);
	push_string("Sound");
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	push_offset(L0007d);
	call();
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L00351:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_string(".ogg");
	cmd_0c(0x2, 0x1);
	push_base_offset(0xc);
	load(0x2);
	push_string("Voice");
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	push_offset(L0007d);
	call();
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L00385:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_string(".bw");
	cmd_0c(0x2, 0x1);
	push_base_offset(0xc);
	load(0x2);
	push_string("Stream");
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	push_offset(L0007d);
	call();
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L003b9:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x10);
	push_string(".bad");
	push_string(".bas");
	push_string(".bad.csv");
	push_string(".bas.csv");
	cmd_0c(0x2, 0x4);
	push_base_offset(0x18);
	load(0x2);
	push_string("Definition");
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	push_byte(0x4);
	push_offset(L0007d);
	call();
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L003f6:
	load_base();
	push_word(0x624);
	add();
	store_base();
	push_base_offset(0x61c);
	move_arg(0x2);
	push_base_offset(0x620);
	move_arg(0x2);
	push_base_offset(0x624);
	move_arg(0x2);
	push_base_offset(0x30c);
	push_offset(L0005b);
	call();
	push_base_offset(0x618);
	push_base_offset(0x61c);
	load(0x2);
	cmd_6a();
	push_base_offset(0x618);
	cmd_6d();
	push_base_offset(0x618);
	push_base_offset(0x620);
	load(0x2);
	push_base_offset(0x30c);
	push_base_offset(0x624);
	load(0x2);
	push_string("%s\\%s\\CVTD\\%s");
	cmd_6f();
	load_base();
	push_word(0x624);
	sub();
	store_base();
	ret();

L0043a:
	load_base();
	push_byte(0x6c);
	add();
	store_base();
	push_base_offset(0x68);
	move_arg(0x2);
	push_base_offset(0x6c);
	move_arg(0x2);
	push_base_offset(0x64);
	push_byte(0x1);
	move(0x2);
	push_byte(0x0);
	push_base_offset(0x68);
	load(0x2);
	sys1(0x34);
	push_offset(L00597);
	jc(0x1);
	push_base_offset(0x60);
	push_base_offset(0x50);
	push_base_offset(0x40);
	push_base_offset(0x6c);
	load(0x2);
	sys2(0x2c);
	push_offset(L00597);
	jc(0x1);
	push_base_offset(0x30);
	push_base_offset(0x20);
	push_base_offset(0x10);
	push_base_offset(0x68);
	load(0x2);
	sys2(0x2c);
	push_offset(L00597);
	jc(0x1);
	push_base_offset(0x40);
	push_byte(0x0);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x0);
	add();
	load(0x1);
	gt();
	push_offset(L00597);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0x0);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x0);
	add();
	load(0x1);
	lt();
	push_offset(L00590);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0x2);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x2);
	add();
	load(0x1);
	gt();
	push_offset(L00597);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0x2);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x2);
	add();
	load(0x1);
	lt();
	push_offset(L00590);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0x6);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x6);
	add();
	load(0x1);
	gt();
	push_offset(L00597);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0x6);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x6);
	add();
	load(0x1);
	lt();
	push_offset(L00590);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x8);
	add();
	load(0x1);
	gt();
	push_offset(L00597);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x8);
	add();
	load(0x1);
	lt();
	push_offset(L00590);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0xa);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0xa);
	add();
	load(0x1);
	gt();
	push_offset(L00597);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0xa);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0xa);
	add();
	load(0x1);
	lt();
	push_offset(L00590);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0xc);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0xc);
	add();
	load(0x1);
	gt();
	push_offset(L00597);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0xc);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0xc);
	add();
	load(0x1);
	lt();
	push_offset(L00590);
	jc(0x0);

L00590:
	push_base_offset(0x64);
	push_byte(0x0);
	move(0x2);

L00597:
	push_base_offset(0x64);
	load(0x2);
	load_base();
	push_byte(0x6c);
	sub();
	store_base();
	ret();

L005a2:
	load_base();
	push_word(0x3194);
	add();
	store_base();
	push_base_offset(0x3190);
	move_arg(0x2);
	push_base_offset(0x3194);
	move_arg(0x2);
	push_base_offset(0x318c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1554);
	push_base_offset(0x3194);
	load(0x2);
	push_offset(L002ac);
	call();
	push_offset(L0094a);
	jc(0x1);
	push_base_offset(0x1248);
	push_string("Script");
	push_base_offset(0x3194);
	load(0x2);
	push_offset(L003f6);
	call();
	push_base_offset(0x3190);
	load(0x2);
	push_offset(L005f2);
	jc(0x0);
	push_base_offset(0x1554);
	push_base_offset(0x1248);
	push_offset(L0043a);
	call();
	push_offset(L0094a);
	jc(0x1);

L005f2:
	push_base_offset(0xf3c);
	push_offset(L0005b);
	call();
	push_string("Script");
	push_base_offset(0xf3c);
	push_base_offset(0xc30);
	push_string("%s\\%s");
	cmd_6f();
	push_string("Script");
	push_base_offset(0xf3c);
	push_base_offset(0x924);
	push_string("%s\\%s\\BBTemporaryA");
	cmd_6f();
	push_string("Script");
	push_base_offset(0xf3c);
	push_base_offset(0x618);
	push_string("%s\\%s\\BBTemporaryB");
	cmd_6f();
	push_base_offset(0x3184);
	push_base_offset(0x2e78);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xf3c);
	sys1(0x2b);
	push_base_offset(0x2e78);
	push_base_offset(0x3184);
	push_base_offset(0x1d54);
	push_string("%s%s");
	cmd_6f();
	push_base_offset(0x1d54);
	push_offset(L012cb);
	call();
	push_base_offset(0x1d54);
	push_base_offset(0x30c);
	push_string("%s\\Bin");
	cmd_6f();
	push_base_offset(0x1248);
	push_offset(L011f1);
	call();
	push_offset(L0094a);
	jc(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x2860);
	push_base_offset(0x1554);
	sys1(0x2b);
	push_base_offset(0x2860);
	push_string(".bs5");
	cmd_69();
	push_offset(L007b9);
	jc(0x1);
	push_base_offset(0xf3c);
	push_base_offset(0x1554);
	push_base_offset(0x924);
	push_base_offset(0x2554);
	push_string("BurikoScriptCompiler5G.exe %s %s /d /r=%s");
	cmd_6f();
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x2554);
	push_base_offset(0xc30);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L006dd);
	jc(0x0);
	push_base_offset(0x2554);
	push_base_offset(0x1d54);
	push_string("%s /e");
	cmd_6f();
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x1d54);
	push_base_offset(0xc30);
	push_byte(0x1);
	push_byte(0x1);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L006dd);
	jc(0x0);
	push_offset(L008fe);
	jmp();

L006dd:
	push_base_offset(0x924);
	push_base_offset(0x618);
	push_base_offset(0x2554);
	push_string("BurikoScriptCompilerBasicStyle.exe -o %s %s -c [第五世代スクリプトのエラー情報]");
	cmd_6f();
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x2554);
	push_base_offset(0xc30);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00747);
	jc(0x0);
	push_base_offset(0x924);
	push_base_offset(0x618);
	push_base_offset(0x1d54);
	push_string("BurikoScriptCompilerBasicStyle.exe -p -o %s %s -c [第五世代スクリプトのエラー情報]");
	cmd_6f();
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x1d54);
	push_base_offset(0xc30);
	push_byte(0x1);
	push_byte(0x1);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00747);
	jc(0x0);
	push_offset(L008fe);
	jmp();

L00747:
	push_base_offset(0x1248);
	push_base_offset(0x618);
	push_base_offset(0x2554);
	push_string("DSC.exe %s %s");
	cmd_6f();
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x2554);
	push_base_offset(0xc30);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L007a4);
	jc(0x0);
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x2554);
	push_base_offset(0xc30);
	push_byte(0x1);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L007a4);
	jc(0x0);
	push_offset(L008fe);
	jmp();

L007a4:
	push_base_offset(0x1248);
	push_base_offset(0x1554);
	push_offset(L0125a);
	call();
	push_base_offset(0x318c);
	push_byte(0x1);
	move(0x2);
	push_offset(L008fe);
	jmp();

L007b9:
	push_base_offset(0x2860);
	push_string(".bsc");
	cmd_69();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x1554);
	push_base_offset(0x924);
	push_base_offset(0x2554);
	push_string("BurikoScriptCompiler.exe /d %s %s");
	cmd_6f();
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x2554);
	push_base_offset(0xc30);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0082f);
	jc(0x0);
	push_base_offset(0x1554);
	push_base_offset(0x924);
	push_base_offset(0x1d54);
	push_string("BurikoScriptCompiler.exe /de %s %s");
	cmd_6f();
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x1d54);
	push_base_offset(0xc30);
	push_byte(0x1);
	push_byte(0x1);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0082f);
	jc(0x0);
	push_offset(L008fe);
	jmp();

L0082f:
	push_base_offset(0x924);
	push_base_offset(0x618);
	push_base_offset(0x2554);
	push_string("blink.exe %s %s /m");
	cmd_6f();
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x2554);
	push_base_offset(0xc30);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0088c);
	jc(0x0);
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x2554);
	push_base_offset(0xc30);
	push_byte(0x1);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0088c);
	jc(0x0);
	push_offset(L008fe);
	jmp();

L0088c:
	push_base_offset(0x1248);
	push_base_offset(0x618);
	push_base_offset(0x2554);
	push_string("DSC.exe %s %s");
	cmd_6f();
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x2554);
	push_base_offset(0xc30);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L008e9);
	jc(0x0);
	push_base_offset(0x3188);
	push_base_offset(0x30c);
	push_base_offset(0x2554);
	push_base_offset(0xc30);
	push_byte(0x1);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L008fe);
	jc(0x1);
	push_base_offset(0x3188);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L008e9);
	jc(0x0);
	push_offset(L008fe);
	jmp();

L008e9:
	push_base_offset(0x1248);
	push_base_offset(0x1554);
	push_offset(L0125a);
	call();
	push_base_offset(0x318c);
	push_byte(0x1);
	move(0x2);
	push_offset(L008fe);
	jmp();

L008fe:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x2b6c);
	push_base_offset(0x2860);
	push_base_offset(0x924);
	sys1(0x2b);
	push_base_offset(0x2860);
	push_base_offset(0x2b6c);
	push_string("Script");
	push_base_offset(0x1d54);
	push_string("%s\\%s%s");
	cmd_6f();
	push_byte(0x0);
	push_base_offset(0x1d54);
	sys1(0x33);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x2b6c);
	push_base_offset(0x2860);
	push_base_offset(0x618);
	sys1(0x2b);
	push_base_offset(0x2860);
	push_base_offset(0x2b6c);
	push_string("Script");
	push_base_offset(0x1d54);
	push_string("%s\\%s%s");
	cmd_6f();
	push_byte(0x0);
	push_base_offset(0x1d54);
	sys1(0x33);

L0094a:
	push_base_offset(0x318c);
	load(0x2);
	load_base();
	push_word(0x3194);
	sub();
	store_base();
	ret();

L00956:
	load_base();
	push_word(0x2e88);
	add();
	store_base();
	push_base_offset(0x2e84);
	move_arg(0x2);
	push_base_offset(0x2e88);
	move_arg(0x2);
	push_base_offset(0x2e80);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1248);
	push_base_offset(0x2e88);
	load(0x2);
	push_offset(L002e3);
	call();
	push_offset(L00af1);
	jc(0x1);
	push_base_offset(0xf3c);
	push_string("Graphic");
	push_base_offset(0x2e88);
	load(0x2);
	push_offset(L003f6);
	call();
	push_base_offset(0x2e84);
	load(0x2);
	push_offset(L009a6);
	jc(0x0);
	push_base_offset(0x1248);
	push_base_offset(0xf3c);
	push_offset(L0043a);
	call();
	push_offset(L00af1);
	jc(0x1);

L009a6:
	push_base_offset(0xc30);
	push_offset(L0005b);
	call();
	push_string("Graphic");
	push_base_offset(0xc30);
	push_base_offset(0x924);
	push_string("%s\\%s");
	cmd_6f();
	push_string("Graphic");
	push_base_offset(0xc30);
	push_base_offset(0x618);
	push_string("%s\\%s\\BBTemporaryA");
	cmd_6f();
	push_base_offset(0x2e78);
	push_base_offset(0x2b6c);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xc30);
	sys1(0x2b);
	push_base_offset(0x2b6c);
	push_base_offset(0x2e78);
	push_base_offset(0x1a48);
	push_string("%s%s");
	cmd_6f();
	push_base_offset(0x1a48);
	push_offset(L012cb);
	call();
	push_base_offset(0x1a48);
	push_base_offset(0x30c);
	push_string("%s\\Bin");
	cmd_6f();
	push_base_offset(0xf3c);
	push_offset(L011f1);
	call();
	push_offset(L00af1);
	jc(0x1);
	push_base_offset(0x618);
	push_base_offset(0x1248);
	push_base_offset(0x2248);
	push_string("BGCnv.exe %s %s");
	cmd_6f();
	push_base_offset(0x2e7c);
	push_base_offset(0x30c);
	push_base_offset(0x2248);
	push_base_offset(0x924);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L00acb);
	jc(0x1);
	push_base_offset(0x2e7c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00a5d);
	jc(0x0);
	push_base_offset(0x2e7c);
	push_base_offset(0x30c);
	push_base_offset(0x2248);
	push_base_offset(0x924);
	push_byte(0x1);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L00acb);
	jc(0x1);
	push_base_offset(0x2e7c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00a5d);
	jc(0x0);
	push_offset(L00acb);
	jmp();

L00a5d:
	push_base_offset(0xf3c);
	push_base_offset(0x618);
	push_base_offset(0x2248);
	push_string("BGToCBG.exe %s %s");
	cmd_6f();
	push_base_offset(0x2e7c);
	push_base_offset(0x30c);
	push_base_offset(0x2248);
	push_base_offset(0x924);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L00acb);
	jc(0x1);
	push_base_offset(0x2e7c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00aba);
	jc(0x0);
	push_base_offset(0x2e7c);
	push_base_offset(0x30c);
	push_base_offset(0x2248);
	push_base_offset(0x924);
	push_byte(0x1);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L00acb);
	jc(0x1);
	push_base_offset(0x2e7c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00aba);
	jc(0x0);
	push_offset(L00acb);
	jmp();

L00aba:
	push_base_offset(0xf3c);
	push_base_offset(0x1248);
	push_offset(L0125a);
	call();
	push_base_offset(0x2e80);
	push_byte(0x1);
	move(0x2);

L00acb:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x2860);
	push_base_offset(0x2554);
	push_base_offset(0x618);
	sys1(0x2b);
	push_base_offset(0x2554);
	push_base_offset(0x2860);
	push_string("Graphic");
	push_base_offset(0x1a48);
	push_string("%s\\%s%s");
	cmd_6f();
	push_byte(0x0);
	push_base_offset(0x1a48);
	sys1(0x33);

L00af1:
	push_base_offset(0x2e80);
	load(0x2);
	load_base();
	push_word(0x2e88);
	sub();
	store_base();
	ret();

L00afd:
	load_base();
	push_word(0x2b7c);
	add();
	store_base();
	push_base_offset(0x2b78);
	move_arg(0x2);
	push_base_offset(0x2b7c);
	move_arg(0x2);
	push_base_offset(0x2b74);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xf3c);
	push_base_offset(0x2b7c);
	load(0x2);
	push_offset(L0031d);
	call();
	push_offset(L00c08);
	jc(0x1);
	push_base_offset(0xc30);
	push_string("Sound");
	push_base_offset(0x2b7c);
	load(0x2);
	push_offset(L003f6);
	call();
	push_base_offset(0x2b78);
	load(0x2);
	push_offset(L00b4d);
	jc(0x0);
	push_base_offset(0xf3c);
	push_base_offset(0xc30);
	push_offset(L0043a);
	call();
	push_offset(L00c08);
	jc(0x1);

L00b4d:
	push_base_offset(0x924);
	push_offset(L0005b);
	call();
	push_string("Sound");
	push_base_offset(0x924);
	push_base_offset(0x618);
	push_string("%s\\%s");
	cmd_6f();
	push_base_offset(0x2b6c);
	push_base_offset(0x2860);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x924);
	sys1(0x2b);
	push_base_offset(0x2860);
	push_base_offset(0x2b6c);
	push_base_offset(0x173c);
	push_string("%s%s");
	cmd_6f();
	push_base_offset(0x173c);
	push_offset(L012cb);
	call();
	push_base_offset(0x173c);
	push_base_offset(0x30c);
	push_string("%s\\Bin");
	cmd_6f();
	push_base_offset(0xc30);
	push_offset(L011f1);
	call();
	push_offset(L00c08);
	jc(0x1);
	push_base_offset(0xc30);
	push_base_offset(0xf3c);
	push_base_offset(0x1f3c);
	push_string("BWCnvType2.exe %s %s");
	cmd_6f();
	push_base_offset(0x2b70);
	push_base_offset(0x30c);
	push_base_offset(0x1f3c);
	push_base_offset(0x618);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L00c08);
	jc(0x1);
	push_base_offset(0x2b70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00bf7);
	jc(0x0);
	push_base_offset(0x2b70);
	push_base_offset(0x30c);
	push_base_offset(0x1f3c);
	push_base_offset(0x618);
	push_byte(0x1);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L00c08);
	jc(0x1);
	push_base_offset(0x2b70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00bf7);
	jc(0x0);
	push_offset(L00c08);
	jmp();

L00bf7:
	push_base_offset(0xc30);
	push_base_offset(0xf3c);
	push_offset(L0125a);
	call();
	push_base_offset(0x2b74);
	push_byte(0x1);
	move(0x2);

L00c08:
	push_base_offset(0x2b74);
	load(0x2);
	load_base();
	push_word(0x2b7c);
	sub();
	store_base();
	ret();

L00c14:
	load_base();
	push_word(0x2b7c);
	add();
	store_base();
	push_base_offset(0x2b78);
	move_arg(0x2);
	push_base_offset(0x2b7c);
	move_arg(0x2);
	push_base_offset(0x2b74);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xf3c);
	push_base_offset(0x2b7c);
	load(0x2);
	push_offset(L00351);
	call();
	push_offset(L00d1f);
	jc(0x1);
	push_base_offset(0xc30);
	push_string("Voice");
	push_base_offset(0x2b7c);
	load(0x2);
	push_offset(L003f6);
	call();
	push_base_offset(0x2b78);
	load(0x2);
	push_offset(L00c64);
	jc(0x0);
	push_base_offset(0xf3c);
	push_base_offset(0xc30);
	push_offset(L0043a);
	call();
	push_offset(L00d1f);
	jc(0x1);

L00c64:
	push_base_offset(0x924);
	push_offset(L0005b);
	call();
	push_string("Voice");
	push_base_offset(0x924);
	push_base_offset(0x618);
	push_string("%s\\%s");
	cmd_6f();
	push_base_offset(0x2b6c);
	push_base_offset(0x2860);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x924);
	sys1(0x2b);
	push_base_offset(0x2860);
	push_base_offset(0x2b6c);
	push_base_offset(0x173c);
	push_string("%s%s");
	cmd_6f();
	push_base_offset(0x173c);
	push_offset(L012cb);
	call();
	push_base_offset(0x173c);
	push_base_offset(0x30c);
	push_string("%s\\Bin");
	cmd_6f();
	push_base_offset(0xc30);
	push_offset(L011f1);
	call();
	push_offset(L00d1f);
	jc(0x1);
	push_base_offset(0xc30);
	push_base_offset(0xf3c);
	push_base_offset(0x1f3c);
	push_string("BWCnvType2.exe %s %s");
	cmd_6f();
	push_base_offset(0x2b70);
	push_base_offset(0x30c);
	push_base_offset(0x1f3c);
	push_base_offset(0x618);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L00d1f);
	jc(0x1);
	push_base_offset(0x2b70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00d0e);
	jc(0x0);
	push_base_offset(0x2b70);
	push_base_offset(0x30c);
	push_base_offset(0x1f3c);
	push_base_offset(0x618);
	push_byte(0x1);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L00d1f);
	jc(0x1);
	push_base_offset(0x2b70);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00d0e);
	jc(0x0);
	push_offset(L00d1f);
	jmp();

L00d0e:
	push_base_offset(0xc30);
	push_base_offset(0xf3c);
	push_offset(L0125a);
	call();
	push_base_offset(0x2b74);
	push_byte(0x1);
	move(0x2);

L00d1f:
	push_base_offset(0x2b74);
	load(0x2);
	load_base();
	push_word(0x2b7c);
	sub();
	store_base();
	ret();

L00d2b:
	load_base();
	push_word(0x628);
	add();
	store_base();
	push_base_offset(0x624);
	move_arg(0x2);
	push_base_offset(0x628);
	move_arg(0x2);
	push_base_offset(0x620);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x61c);
	push_base_offset(0x628);
	load(0x2);
	push_offset(L00385);
	call();
	push_offset(L00dcf);
	jc(0x1);
	push_base_offset(0x310);
	push_string("Stream");
	push_base_offset(0x628);
	load(0x2);
	push_offset(L003f6);
	call();
	push_base_offset(0x624);
	load(0x2);
	push_offset(L00d7b);
	jc(0x0);
	push_base_offset(0x61c);
	push_base_offset(0x310);
	push_offset(L0043a);
	call();
	push_offset(L00de2);
	jc(0x1);

L00d7b:
	push_base_offset(0x310);
	push_offset(L011f1);
	call();
	push_offset(L00de2);
	jc(0x1);
	push_base_offset(0x310);
	push_base_offset(0x61c);
	sys1(0x2f);
	push_offset(L00de2);
	jc(0x1);
	push_base_offset(0x310);
	sys1(0x2c);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	not();
	and();
	push_byte(0x2);
	not();
	and();
	move(0x2);
	push_base_offset(0x310);
	push_base_offset(0x4);
	load(0x2);
	sys1(0x2d);
	push_base_offset(0x310);
	push_base_offset(0x61c);
	push_offset(L0125a);
	call();
	push_base_offset(0x620);
	push_byte(0x1);
	move(0x2);
	push_offset(L00de2);
	jmp();

L00dcf:
	push_base_offset(0x628);
	load(0x2);
	push_base_offset(0x624);
	load(0x2);
	push_offset(L00afd);
	call();
	push_base_offset(0x620);
	move_arg(0x2);

L00de2:
	push_base_offset(0x620);
	load(0x2);
	load_base();
	push_word(0x628);
	sub();
	store_base();
	ret();

L00dee:
	load_base();
	push_word(0x628);
	add();
	store_base();
	push_base_offset(0x624);
	move_arg(0x2);
	push_base_offset(0x628);
	move_arg(0x2);
	push_base_offset(0x620);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x61c);
	push_base_offset(0x628);
	load(0x2);
	push_offset(L002e3);
	call();
	push_offset(L00e8e);
	jc(0x1);
	push_base_offset(0x310);
	push_string("Graphic");
	push_base_offset(0x628);
	load(0x2);
	push_offset(L003f6);
	call();
	push_base_offset(0x624);
	load(0x2);
	push_offset(L00e3e);
	jc(0x0);
	push_base_offset(0x61c);
	push_base_offset(0x310);
	push_offset(L0043a);
	call();
	push_offset(L00e8e);
	jc(0x1);

L00e3e:
	push_base_offset(0x310);
	push_offset(L011f1);
	call();
	push_offset(L00e8e);
	jc(0x1);
	push_base_offset(0x310);
	push_base_offset(0x61c);
	sys1(0x2f);
	push_offset(L00e8e);
	jc(0x1);
	push_base_offset(0x310);
	sys1(0x2c);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	not();
	and();
	push_byte(0x2);
	not();
	and();
	move(0x2);
	push_base_offset(0x310);
	push_base_offset(0x4);
	load(0x2);
	sys1(0x2d);
	push_base_offset(0x310);
	push_base_offset(0x61c);
	push_offset(L0125a);
	call();
	push_base_offset(0x620);
	push_byte(0x1);
	move(0x2);

L00e8e:
	push_base_offset(0x620);
	load(0x2);
	load_base();
	push_word(0x628);
	sub();
	store_base();
	ret();

L00e9a:
	load_base();
	push_word(0x318);
	add();
	store_base();
	push_base_offset(0x314);
	move_arg(0x2);
	push_base_offset(0x318);
	move_arg(0x2);
	push_base_offset(0x310);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x30c);
	push_base_offset(0x318);
	load(0x2);
	push_offset(L003b9);
	call();
	push_offset(L00ed8);
	jc(0x1);
	push_base_offset(0x30c);
	push_base_offset(0x318);
	load(0x2);
	push_base_offset(0x314);
	load(0x2);
	push_offset(L00ee4);
	call();
	push_base_offset(0x310);
	move_arg(0x2);

L00ed8:
	push_base_offset(0x310);
	load(0x2);
	load_base();
	push_word(0x318);
	sub();
	store_base();
	ret();

L00ee4:
	load_base();
	push_word(0x2e8c);
	add();
	store_base();
	push_base_offset(0x2e84);
	move_arg(0x2);
	push_base_offset(0x2e88);
	move_arg(0x2);
	push_base_offset(0x2e8c);
	move_arg(0x2);
	push_base_offset(0x2e80);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2e88);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00f4b);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x2248);
	push_byte(0x0);
	push_base_offset(0x2e8c);
	load(0x2);
	sys1(0x2b);
	push_base_offset(0x2248);
	push_string(".");
	cmd_66();
	push_base_offset(0x2e7c);
	move_arg(0x2);
	push_base_offset(0x2e7c);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00f43);
	jc(0x1);
	push_base_offset(0x2248);
	push_base_offset(0x2e7c);
	load(0x2);
	add();
	push_byte(0x0);
	move(0x0);

L00f43:
	push_base_offset(0x2e88);
	push_base_offset(0x2248);
	move(0x2);

L00f4b:
	push_base_offset(0xf3c);
	push_string("Definition");
	push_base_offset(0x2e88);
	load(0x2);
	push_offset(L003f6);
	call();
	push_base_offset(0x2e84);
	load(0x2);
	push_offset(L00f75);
	jc(0x0);
	push_base_offset(0x2e8c);
	load(0x2);
	push_base_offset(0xf3c);
	push_offset(L0043a);
	call();
	push_offset(L010d3);
	jc(0x1);

L00f75:
	push_base_offset(0xc30);
	push_offset(L0005b);
	call();
	push_string("Definition");
	push_base_offset(0xc30);
	push_base_offset(0x924);
	push_string("%s\\%s");
	cmd_6f();
	push_string("Definition");
	push_base_offset(0xc30);
	push_base_offset(0x618);
	push_string("%s\\%s\\BBTemporaryA");
	cmd_6f();
	push_base_offset(0x2e78);
	push_base_offset(0x2b6c);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xc30);
	sys1(0x2b);
	push_base_offset(0x2b6c);
	push_base_offset(0x2e78);
	push_base_offset(0x173c);
	push_string("%s%s");
	cmd_6f();
	push_base_offset(0x173c);
	push_offset(L012cb);
	call();
	push_base_offset(0x173c);
	push_base_offset(0x30c);
	push_string("%s\\Bin");
	cmd_6f();
	push_base_offset(0xf3c);
	push_offset(L011f1);
	call();
	push_offset(L010d3);
	jc(0x1);
	push_base_offset(0x618);
	push_base_offset(0x2e8c);
	load(0x2);
	push_base_offset(0x1f3c);
	push_string("BurikoAnimationDefinitionCompiler.exe %s %s");
	cmd_6f();
	push_base_offset(0x2e7c);
	push_base_offset(0x30c);
	push_base_offset(0x1f3c);
	push_base_offset(0x924);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L010ad);
	jc(0x1);
	push_base_offset(0x2e7c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0103d);
	jc(0x0);
	push_base_offset(0x618);
	push_base_offset(0x2e8c);
	load(0x2);
	push_base_offset(0x1f3c);
	push_string("BurikoAnimationDefinitionCompiler.exe %s %s /e");
	cmd_6f();
	push_base_offset(0x2e7c);
	push_base_offset(0x30c);
	push_base_offset(0x1f3c);
	push_base_offset(0x924);
	push_byte(0x1);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L010ad);
	jc(0x1);
	push_base_offset(0x2e7c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0103d);
	jc(0x0);
	push_offset(L010ad);
	jmp();

L0103d:
	push_base_offset(0xf3c);
	push_base_offset(0x618);
	push_base_offset(0x1f3c);
	push_string("DSC.exe %s %s");
	cmd_6f();
	push_base_offset(0x2e7c);
	push_base_offset(0x30c);
	push_base_offset(0x1f3c);
	push_base_offset(0x924);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L010ad);
	jc(0x1);
	push_base_offset(0x2e7c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0109a);
	jc(0x0);
	push_base_offset(0x2e7c);
	push_base_offset(0x30c);
	push_base_offset(0x1f3c);
	push_base_offset(0x924);
	push_byte(0x1);
	push_byte(0x0);
	push_offset(L0111e);
	call();
	push_offset(L010ad);
	jc(0x1);
	push_base_offset(0x2e7c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0109a);
	jc(0x0);
	push_offset(L010ad);
	jmp();

L0109a:
	push_base_offset(0xf3c);
	push_base_offset(0x2e8c);
	load(0x2);
	push_offset(L0125a);
	call();
	push_base_offset(0x2e80);
	push_byte(0x1);
	move(0x2);

L010ad:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x2860);
	push_base_offset(0x2554);
	push_base_offset(0x618);
	sys1(0x2b);
	push_base_offset(0x2554);
	push_base_offset(0x2860);
	push_string("Definition");
	push_base_offset(0x173c);
	push_string("%s\\%s%s");
	cmd_6f();
	push_byte(0x0);
	push_base_offset(0x173c);
	sys1(0x33);

L010d3:
	push_base_offset(0x2e80);
	load(0x2);
	load_base();
	push_word(0x2e8c);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x408);
	add();
	store_base();
	push_base_offset(0x408);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x408);
	load(0x2);
	sys1(0x34);
	push_base_offset(0x404);
	move_arg(0x2);
	push_base_offset(0x404);
	load(0x2);
	push_offset(L01112);
	jc(0x0);
	push_base_offset(0x408);
	load(0x2);
	push_base_offset(0x400);
	push_string("外部プログラムが存在しません\n\n%s");
	cmd_6f();
	push_base_offset(0x400);
	cmd_79();

L01112:
	push_base_offset(0x404);
	load(0x2);
	load_base();
	push_word(0x408);
	sub();
	store_base();
	ret();

L0111e:
	load_base();
	push_word(0x420);
	add();
	store_base();
	push_base_offset(0x40c);
	move_arg(0x2);
	push_base_offset(0x410);
	move_arg(0x2);
	push_base_offset(0x414);
	move_arg(0x2);
	push_base_offset(0x418);
	move_arg(0x2);
	push_base_offset(0x41c);
	move_arg(0x2);
	push_base_offset(0x420);
	move_arg(0x2);

L01142:
	push_base_offset(0x404);
	push_base_offset(0x41c);
	load(0x2);
	push_base_offset(0x418);
	load(0x2);
	push_base_offset(0x414);
	load(0x2);
	push_base_offset(0x410);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x410);
	load(0x2);
	sys2(0xe0);
	push_base_offset(0x408);
	move_arg(0x2);
	push_base_offset(0x408);
	load(0x2);
	push_offset(L01192);
	jc(0x0);
	push_base_offset(0x418);
	load(0x2);
	push_base_offset(0x41c);
	load(0x2);
	push_base_offset(0x400);
	push_string("外部プログラムが起動できませんでした\n外部プログラムが存在しているかご確認ください\n\n再試行しますか？\n\n%s\\%s");
	cmd_6f();
	push_base_offset(0x400);
	push_byte(0x1);
	usr1(0x81);
	push_offset(L01142);
	jc(0x0);
	push_offset(L011e5);
	jmp();

L01192:
	push_base_offset(0x410);
	load(0x2);
	push_offset(L011cc);
	jc(0x1);
	push_base_offset(0x404);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L011cc);
	jc(0x0);
	push_base_offset(0x40c);
	load(0x2);
	push_offset(L011c0);
	jc(0x1);
	push_word(0x7fff);
	push_byte(0x0);
	sys1(0xa1);

L011ba:
	sys1(0x5f);
	push_offset(L011ba);
	jmp();

L011c0:
	push_string("外部プログラムでエラーが発生しました\n\n再試行しますか？");
	push_byte(0x1);
	usr1(0x81);
	push_offset(L01142);
	jc(0x0);

L011cc:
	push_base_offset(0x420);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L011e5);
	jc(0x1);
	push_base_offset(0x420);
	load(0x2);
	push_base_offset(0x404);
	load(0x2);
	move(0x2);

L011e5:
	push_base_offset(0x408);
	load(0x2);
	load_base();
	push_word(0x420);
	sub();
	store_base();
	ret();

L011f1:
	load_base();
	push_word(0xd2c);
	add();
	store_base();
	push_base_offset(0xd2c);
	move_arg(0x2);
	push_base_offset(0xd28);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xd24);
	push_base_offset(0xa18);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xd2c);
	load(0x2);
	sys1(0x2b);
	push_base_offset(0xa18);
	push_base_offset(0xd24);
	push_base_offset(0x30c);
	push_string("%s%s");
	cmd_6f();
	push_base_offset(0x30c);
	sys1(0x2a);
	push_offset(L0124e);
	jc(0x0);
	push_base_offset(0x30c);
	sys1(0x28);
	push_offset(L0124e);
	jc(0x0);
	push_base_offset(0x30c);
	push_base_offset(0x70c);
	push_string("ビルド先フォルダの作成に失敗しました\n\n%s");
	cmd_6f();
	push_base_offset(0x70c);
	cmd_79();
	push_base_offset(0xd28);
	push_byte(0x0);
	move(0x2);
	push_offset(L0124e);
	jmp();

L0124e:
	push_base_offset(0xd28);
	load(0x2);
	load_base();
	push_word(0xd2c);
	sub();
	store_base();
	ret();

L0125a:
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x30);
	push_base_offset(0x20);
	push_base_offset(0x10);
	push_base_offset(0x34);
	load(0x2);
	sys2(0x2c);
	push_offset(L0128e);
	jc(0x1);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x30);
	push_base_offset(0x20);
	push_base_offset(0x10);
	sys2(0x2d);

L0128e:
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x620);
	add();
	store_base();
	push_base_offset(0x61c);
	move_arg(0x2);
	push_base_offset(0x620);
	move_arg(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x618);
	push_base_offset(0x30c);
	push_base_offset(0x61c);
	load(0x2);
	sys1(0x2b);
	push_base_offset(0x30c);
	push_base_offset(0x618);
	push_base_offset(0x620);
	load(0x2);
	push_string("%s%s");
	cmd_6f();
	load_base();
	push_word(0x620);
	sub();
	store_base();
	ret();

L012cb:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	cmd_68();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L01323);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	load(0x0);
	push_byte(0x5c);
	eq();
	push_byte(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	load(0x0);
	ternary();
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move_arg(0x0);

L01323:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
