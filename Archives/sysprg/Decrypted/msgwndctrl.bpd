	load_base();
	push_byte(0x44);
	add();
	store_base();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x40);
	push_offset(L00046);
	push_offset(L00dbe);
	push_offset(L012d0);
	push_offset(L01794);
	push_offset(L0190b);
	push_offset(L019c6);
	push_offset(L01a70);
	push_offset(L01bc4);
	push_offset(L01c33);
	push_offset(L01c74);
	push_offset(L01cb6);
	cmd_0c(0x2, 0xb);
	push_base_offset(0x40);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	load_base();
	push_byte(0x44);
	sub();
	store_base();
	ret();

L00046:
	load_base();
	push_word(0x164);
	add();
	store_base();
	push_base_offset(0x154);
	move_arg(0x2);
	push_base_offset(0x158);
	move_arg(0x2);
	push_base_offset(0x15c);
	move_arg(0x2);
	push_base_offset(0x160);
	move_arg(0x2);
	push_base_offset(0x164);
	move_arg(0x2);
	push_base_offset(0x154);
	load(0x2);
	push_offset(L00073);
	jc(0x1);
	push_offset(L00dbe);
	call();

L00073:
	push_offset(L01cf2);
	call();
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_offset(L01e3c);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_offset(L01e7a);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x124);
	push_byte(0x0);
	move(0x2);

L000a4:
	grp1(0xe0);
	push_dword(0x42abc);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x124);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L000a4);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22110);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22108);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2210c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22188);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L01a70);
	call();
	push_base_offset(0x130);
	move_arg(0x2);
	push_base_offset(0x134);
	move_arg(0x2);
	push_base_offset(0x134);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	grp1(0x80);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22110);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22108);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2210c);
	add();
	load(0x2);
	push_offset(L01bc4);
	call();
	push_base_offset(0x130);
	move_arg(0x2);
	push_base_offset(0x134);
	move_arg(0x2);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	grp1(0x88);
	push_dword(0x9fab8);
	push_dword(0x22104);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22100);
	add();
	load(0x2);
	push_offset(L01cb6);
	call();
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_word(0x100);
	push_byte(0x0);
	push_word(0x750);
	grp1(0x85);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	load(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x88);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x158);
	load(0x2);
	grp2(0x8b);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	grp1(0xe8);
	push_base_offset(0x160);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00372);
	jc(0x1);
	push_base_offset(0x12c);
	push_word(0x125);
	move(0x2);
	push_base_offset(0x128);
	push_word(0x2b8);
	move(0x2);
	push_base_offset(0x134);
	push_word(0x2cb);
	move(0x2);
	push_base_offset(0x130);
	push_byte(0x18);
	move(0x2);
	push_offset(L00391);
	jmp();

L00372:
	push_base_offset(0x12c);
	push_word(0x125);
	move(0x2);
	push_base_offset(0x128);
	push_word(0x2b8);
	move(0x2);
	push_base_offset(0x134);
	push_word(0x2cb);
	move(0x2);
	push_base_offset(0x130);
	push_byte(0x18);
	move(0x2);

L00391:
	push_base_offset(0x134);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	grp1(0x80);
	push_dword(0x42aa0);
	move_arg(0x2);
	push_dword(0x42aa0);
	load(0x2);
	push_base_offset(0x164);
	load(0x2);
	push_byte(0x0);
	eq();
	grp1(0x31);
	push_dword(0x42aa0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_word(0x100);
	push_byte(0x0);
	push_word(0x790);
	grp1(0x85);
	push_dword(0x42aa0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0x88);
	push_dword(0x42aa0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x134);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	grp1(0x88);
	push_dword(0x42aa0);
	load(0x2);
	push_byte(0x0);
	grp2(0x89);
	push_dword(0x42aa0);
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42aa0);
	load(0x2);
	push_base_offset(0x12c);
	load(0x2);
	push_base_offset(0x128);
	load(0x2);
	grp1(0xe8);
	push_word(0x140);
	push_byte(0x7f);
	grp1(0x80);
	push_dword(0x42aa8);
	move_arg(0x2);
	push_byte(0x20);
	push_word(0x12e);
	add();
	load(0x1);
	push_byte(0x2);
	eq();
	push_word(0x3c0);
	push_word(0x3c0);
	ternary();
	push_base_offset(0x12c);
	move_arg(0x2);
	push_byte(0x20);
	push_word(0x12e);
	add();
	load(0x1);
	push_byte(0x2);
	eq();
	push_word(0x1c7);
	push_byte(0x0);
	ternary();
	push_base_offset(0x128);
	move_arg(0x2);
	push_dword(0x42aa8);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_word(0x400);
	push_byte(0x5a);
	add();
	grp1(0x86);
	push_dword(0x42aa8);
	load(0x2);
	push_base_offset(0x12c);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_base_offset(0x128);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x7a0);
	grp1(0x85);
	push_dword(0x42aa8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0x88);
	push_dword(0x42aa8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x140);
	push_byte(0x7f);
	grp1(0x88);
	push_dword(0x42aa8);
	load(0x2);
	push_byte(0x0);
	grp2(0x89);
	push_dword(0x42aa8);
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_dword(0x42aa8);
	load(0x2);
	push_byte(0x1);
	grp1(0x84);
	push_dword(0x42aa8);
	load(0x2);
	push_byte(0x1);
	grp3(0x88);
	push_string("sysprg.arc");
	push_string("bbs._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x24690);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e04);
	add();
	load(0x2);
	push_dword(0x9fa50);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	call();
	sys1(0x41);
	push_dword(0x42aa8);
	load(0x2);
	push_base_offset(0x164);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x20);
	push_word(0x12e);
	add();
	load(0x1);
	push_byte(0x0);
	neq();
	bool_and();
	push_dword(0x9fab8);
	push_dword(0x25e0c);
	add();
	load(0x2);
	bool_and();
	grp1(0x31);
	grp1(0x50);
	push_dword(0x42aac);
	move_arg(0x2);
	push_dword(0x42aac);
	load(0x2);
	push_base_offset(0x164);
	load(0x2);
	push_byte(0x0);
	eq();
	grp1(0x31);
	push_base_offset(0x164);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L005b5);
	jc(0x1);
	push_base_offset(0x12c);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x128);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_offset(L005c5);
	jmp();

L005b5:
	push_base_offset(0x12c);
	push_word(0x500);
	move(0x2);
	push_base_offset(0x128);
	push_word(0x2d0);
	move(0x2);

L005c5:
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42aac);
	load(0x2);
	push_base_offset(0x12c);
	load(0x2);
	push_base_offset(0x128);
	load(0x2);
	grp1(0xe8);
	grp1(0x50);
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x400);
	push_byte(0x57);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x730);
	grp1(0x56);
	push_base_offset(0x164);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00668);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	grp1(0xe8);
	push_word(0x4fc);
	push_byte(0x1);
	move(0x2);
	push_offset(L006af);
	jmp();

L00668:
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	grp1(0x33);
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0x54);
	push_word(0x4fc);
	push_byte(0x0);
	move(0x2);

L006af:
	push_word(0x179);
	push_byte(0x7a);
	grp1(0x80);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x164);
	load(0x2);
	push_byte(0x0);
	eq();
	grp1(0x31);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x2c);
	push_byte(0xf);
	push_byte(0xb);
	push_byte(0x1a);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	push_byte(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x20);
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x8);
	add();
	grp1(0x88);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x20);
	grp2(0x89);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_word(0x100);
	push_byte(0x0);
	push_word(0x750);
	grp1(0x85);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	load(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x88);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x158);
	load(0x2);
	grp2(0x8b);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1c);
	push_word(0x11b);
	grp1(0xe8);
	grp1(0x50);
	push_dword(0x42ab0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x42ab0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x400);
	push_byte(0x62);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x730);
	grp1(0x56);
	push_dword(0x42ab0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x164);
	load(0x2);
	push_byte(0x0);
	eq();
	grp1(0x31);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42ab0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1c);
	push_word(0x11b);
	grp1(0xe8);
	push_word(0x179);
	push_byte(0x7a);
	grp1(0x80);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x164);
	load(0x2);
	push_byte(0x0);
	eq();
	grp1(0x31);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1a);
	push_byte(0xf);
	push_byte(0xb);
	push_byte(0x1a);
	mul();
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	push_byte(0x2);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x20);
	add();
	mul();
	push_byte(0x64);
	div();
	mul();
	push_byte(0x8);
	add();
	grp1(0x88);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x20);
	grp2(0x89);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_word(0x100);
	push_byte(0x0);
	push_word(0x750);
	grp1(0x85);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	load(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x88);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x158);
	load(0x2);
	grp2(0x8b);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x362);
	push_word(0x149);
	grp1(0xe8);
	grp1(0x50);
	push_dword(0x42ab0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x42ab0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x400);
	push_byte(0x63);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x730);
	grp1(0x56);
	push_dword(0x42ab0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x164);
	load(0x2);
	push_byte(0x0);
	eq();
	grp1(0x31);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42ab0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x362);
	push_word(0x149);
	grp1(0xe8);
	push_base_offset(0x164);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00a38);
	jc(0x1);
	push_base_offset(0x12c);
	push_byte(0x0);
	push_base_offset(0x1c);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x128);
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	add();
	move(0x2);
	push_offset(L00a46);
	jmp();

L00a38:
	push_base_offset(0x12c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x128);
	push_byte(0x0);
	move(0x2);

L00a46:
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x12c);
	load(0x2);
	push_base_offset(0x128);
	load(0x2);
	push_byte(0x0);
	grp1(0xe5);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0xe4);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0xc1);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x38);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	grp2(0x31);
	push_dword(0x42aa8);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	grp2(0x31);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0xe5);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0xe4);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0xc1);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x38);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	grp2(0x31);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x100);
	grp1(0x34);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0xe5);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0xe4);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0xc1);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x38);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	grp2(0x31);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x100);
	grp1(0x34);
	push_dword(0x9fab8);
	push_word(0xd4);
	add();
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	ternary();
	push_base_offset(0x138);
	move_arg(0x2);
	push_dword(0x42aa0);
	load(0x2);
	push_base_offset(0x138);
	load(0x2);
	grp1(0x32);
	push_byte(0x1f);
	push_offset(L02e9a);
	call();
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00bf7);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x0);
	grp2(0x36);
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x34);

L00bf7:
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00c88);
	jc(0x1);
	push_dword(0x45f14);
	load(0x2);
	push_offset(L02e9a);
	call();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00c88);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00c88);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x0);
	grp2(0x36);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x34);

L00c88:
	push_word(0xb70);
	load(0x2);
	push_offset(L00cb4);
	jc(0x1);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00cb4);
	jc(0x1);
	push_dword(0x42a80);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	grp1(0x36);

L00cb4:
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_word(0x42e);
	push_word(0x2b9);
	push_offset(L049f8);
	call();
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_offset(L04a55);
	call();
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x0);
	push_offset(L04a94);
	call();
	push_word(0x9b4);
	push_byte(0x0);
	move(0x2);
	push_word(0x900);
	push_byte(0x1);
	move(0x2);
	push_word(0x904);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	load(0x2);
	move(0x2);
	push_word(0x908);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	ternary();
	push_offset(L01edc);
	call();
	push_word(0x900);
	push_byte(0x0);
	move(0x2);
	push_word(0x904);
	push_byte(0x0);
	move(0x2);
	push_word(0x908);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x164);
	load(0x2);
	push_base_offset(0x160);
	load(0x2);
	push_base_offset(0x15c);
	load(0x2);
	push_offset(L01794);
	call();
	push_dword(0x9fab8);
	push_dword(0x22194);
	add();
	load(0x2);
	push_base_offset(0x164);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2217c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22180);
	add();
	load(0x2);
	push_byte(0x0);
	push_offset(L0190b);
	call();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_dword(0x9fab8);
	push_dword(0x22110);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0x483cc);
	load(0x2);
	push_dword(0x483d0);
	load(0x2);
	grp3(0x97);
	load_base();
	push_word(0x164);
	sub();
	store_base();
	ret();

L00dbe:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xe9);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x81);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42aa0);
	load(0x2);
	grp1(0xe9);
	push_dword(0x42aa0);
	load(0x2);
	grp1(0x81);
	push_dword(0x42aa0);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42aa8);
	load(0x2);
	grp1(0x81);
	push_dword(0x42aa8);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42aac);
	load(0x2);
	grp1(0xe9);
	push_dword(0x42aac);
	load(0x2);
	grp1(0x51);
	push_dword(0x42aac);
	push_byte(0x0);
	move(0x2);
	push_word(0x4fc);
	load(0x2);
	push_offset(L00e85);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xe9);

L00e85:
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x51);
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xe1);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xe9);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x81);
	push_dword(0x42a94);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42ab0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xe9);
	push_dword(0x42ab0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x51);
	push_dword(0x42ab0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xe1);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xe9);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x81);
	push_dword(0x42a94);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42ab0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xe9);
	push_dword(0x42ab0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x51);
	push_dword(0x42ab0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0xe1);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L00feb:
	load_base();
	push_word(0x468);
	add();
	store_base();
	push_base_offset(0x458);
	move_arg(0x2);
	push_base_offset(0x45c);
	move_arg(0x2);
	push_base_offset(0x460);
	move_arg(0x2);
	push_base_offset(0x464);
	move_arg(0x2);
	push_base_offset(0x468);
	move_arg(0x2);
	push_base_offset(0x18);
	push_base_offset(0x458);
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_dword(0x42a94);
	push_base_offset(0x468);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x460);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L012c4);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x3);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L010a4);
	jc(0x0);
	push_base_offset(0x464);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L010a4);
	jc(0x1);
	push_base_offset(0x468);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L010a4);
	jc(0x1);
	push_base_offset(0x460);
	load(0x2);
	push_word(0x710);
	add();
	push_base_offset(0x460);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	add();
	cmd_68();
	push_offset(L010a4);
	jc(0x1);
	push_base_offset(0x460);
	load(0x2);
	push_word(0x710);
	add();
	push_base_offset(0x460);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	add();
	push_dword(0x4404c);
	load(0x2);
	call();
	push_offset(L010a4);
	jmp();

L010a4:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x460);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	grp2(0x8b);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L010bc:
	push_base_offset(0x454);
	push_base_offset(0x460);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x38);
	memcpy();
	push_word(0xba8);
	load(0x2);
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x464);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x454);
	push_byte(0x14);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x464);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01179);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	grp2(0x8d);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x454);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x454);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x458);
	load(0x2);
	add();
	push_base_offset(0x10);
	load(0x2);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	grp2(0x8c);

L01179:
	push_base_offset(0x8);
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x454);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x454);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x454);
	push_byte(0x18);
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x88);
	push_base_offset(0x460);
	load(0x2);
	push_word(0x710);
	add();
	push_base_offset(0x454);
	push_byte(0x20);
	add();
	load(0x2);
	add();
	grp2(0x96);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x460);
	load(0x2);
	push_word(0x710);
	add();
	push_base_offset(0x454);
	push_byte(0x1c);
	add();
	load(0x2);
	add();
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x468);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x7);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x468);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x468);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x468);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xa);
	add();
	load(0x1);
	grp3(0x91);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0x94);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x460);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	lt();
	push_offset(L010bc);
	jc(0x0);
	push_base_offset(0x464);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L012c4);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	grp2(0x8d);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x18);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x45c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	move(0x2);

L012c4:
	push_base_offset(0x18);
	load(0x2);
	load_base();
	push_word(0x468);
	sub();
	store_base();
	ret();

L012d0:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x20);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x3);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01337);
	jc(0x1);
	push_dword(0x45bd0);
	load(0x0);
	push_byte(0x0);
	eq();
	push_offset(L0130f);
	jc(0x0);
	push_dword(0x45bd0);
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L03f09);
	call();
	push_offset(L01337);
	jmp();

L0130f:
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	load(0x0);
	push_byte(0x0);
	eq();
	push_offset(L01337);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x23e58);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_offset(L03f09);
	call();

L01337:
	push_base_offset(0x18);
	push_word(0x7d0);
	load(0x2);
	sys1(0x9a);
	push_base_offset(0x1c);
	push_byte(0x0);
	move(0x2);

L01348:
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	lt();
	bool_and();
	push_offset(L01406);
	jc(0x1);
	push_dword(0x111970);
	push_word(0x7d0);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	sys1(0x9d);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_dword(0x111970);
	push_dword(0x22198);
	add();
	push_dword(0x111970);
	push_dword(0x24618);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	push_offset(L00feb);
	call();
	push_dword(0x111970);
	push_dword(0x22198);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_byte(0x0);
	push_word(0xb2c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	ternary();
	push_word(0xb2c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);

L01406:
	push_base_offset(0x1c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L01348);
	jc(0x0);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c);
	push_byte(0x0);
	move(0x2);

L0142e:
	push_base_offset(0x1c);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22130);
	add();
	load(0x2);
	lt();
	push_offset(L014ff);
	jc(0x1);
	push_base_offset(0x1c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x111970);
	push_word(0x7d0);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22130);
	add();
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	sub();
	sys1(0x9d);
	push_dword(0x111970);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_dword(0x111970);
	push_dword(0x22198);
	add();
	push_dword(0x111970);
	push_dword(0x24618);
	add();
	push_dword(0x111970);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_base_offset(0x14);
	load(0x2);
	push_offset(L00feb);
	call();
	push_base_offset(0x14);
	move_arg(0x2);
	push_dword(0x111970);
	push_dword(0x22198);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_byte(0x0);
	push_word(0xb2c);
	push_dword(0x111970);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	ternary();
	push_word(0xb2c);
	push_dword(0x111970);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_offset(L0142e);
	jmp();

L014ff:
	push_base_offset(0x10);
	push_dword(0x42a94);
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_dword(0x9fab8);
	push_dword(0x24618);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_base_offset(0x14);
	load(0x2);
	push_offset(L00feb);
	call();
	push_base_offset(0x14);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_byte(0x0);
	push_word(0xb2c);
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	ternary();
	push_word(0xb2c);
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x230a8);
	add();
	load(0x2);
	push_offset(L0166e);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0166e);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	grp2(0x8e);
	push_offset(L0166e);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_string("\n");
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0xffffff);
	push_byte(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x7);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_byte(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_dword(0x9fab8);
	push_dword(0x25e20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xa);
	add();
	load(0x1);
	grp3(0x91);

L0166e:
	push_base_offset(0x1c);
	push_byte(0x0);
	move(0x2);

L01675:
	push_dword(0x42a94);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x3);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x5);
	add();
	load(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x88);
	push_dword(0x42a94);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2212c);
	add();
	load(0x2);
	grp2(0x8b);
	push_base_offset(0x1c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L01675);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0178e);
	jc(0x1);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp2(0x8d);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_byte(0x0);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	add();
	grp2(0x8c);

L0178e:
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L01794:
	load_base();
	push_byte(0x28);
	add();
	store_base();
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L018f0);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_offset(L04910);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x1c);
	push_word(0x400);
	push_byte(0x57);
	add();
	grp1(0x16);
	push_word(0x400);
	push_byte(0x68);
	add();
	push_base_offset(0x1c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x1c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x1c);
	push_byte(0x10);
	add();
	load(0x2);
	grp1(0x11);
	push_word(0x400);
	push_byte(0x68);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x400);
	push_byte(0x68);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x400);
	push_byte(0x57);
	add();
	push_byte(0x1);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x18);
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x400);
	push_byte(0x68);
	add();
	grp1(0x57);
	push_base_offset(0x1c);
	push_word(0x400);
	push_byte(0x62);
	add();
	grp1(0x16);
	push_word(0x400);
	push_byte(0x6b);
	add();
	push_base_offset(0x1c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x1c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x1c);
	push_byte(0x10);
	add();
	load(0x2);
	grp1(0x11);
	push_word(0x400);
	push_byte(0x6b);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x400);
	push_byte(0x6b);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x400);
	push_byte(0x62);
	add();
	push_byte(0x1);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x18);
	push_dword(0x42ab0);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x400);
	push_byte(0x6b);
	add();
	grp1(0x57);
	push_base_offset(0x1c);
	push_word(0x400);
	push_byte(0x63);
	add();
	grp1(0x16);
	push_word(0x400);
	push_byte(0x6c);
	add();
	push_base_offset(0x1c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x1c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x1c);
	push_byte(0x10);
	add();
	load(0x2);
	grp1(0x11);
	push_word(0x400);
	push_byte(0x6c);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x400);
	push_byte(0x6c);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x400);
	push_byte(0x63);
	add();
	push_byte(0x1);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x18);
	push_dword(0x42ab0);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x400);
	push_byte(0x6c);
	add();
	grp1(0x57);
	push_offset(L01905);
	jmp();

L018f0:
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x400);
	push_byte(0x57);
	add();
	grp1(0x57);

L01905:
	load_base();
	push_byte(0x28);
	sub();
	store_base();
	ret();

L0190b:
	load_base();
	push_word(0x9c);
	add();
	store_base();
	push_base_offset(0x8c);
	move_arg(0x2);
	push_base_offset(0x90);
	move_arg(0x2);
	push_base_offset(0x94);
	move_arg(0x2);
	push_base_offset(0x98);
	move_arg(0x2);
	push_base_offset(0x9c);
	move_arg(0x2);
	push_base_offset(0x8c);
	load(0x2);
	push_offset(L01955);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("bitmap._bp");
	sys1(0x40);
	push_base_offset(0x84);
	move_arg(0x2);
	push_base_offset(0x94);
	load(0x2);
	push_base_offset(0x90);
	load(0x2);
	push_byte(0x15);
	push_base_offset(0x84);
	load(0x2);
	call();
	sys1(0x41);

L01955:
	push_base_offset(0x88);
	push_byte(0x0);
	move(0x2);

L0195c:
	push_base_offset(0x80);
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x400);
	push_byte(0x33);
	add();
	push_base_offset(0x88);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x88);
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x88);
	load(0x2);
	push_base_offset(0x90);
	load(0x2);
	lt();
	push_offset(L0195c);
	jc(0x0);
	push_base_offset(0x90);
	load(0x2);
	push_base_offset(0x80);
	grp1(0x98);
	push_dword(0x9fab8);
	push_dword(0x22184);
	add();
	load(0x2);
	grp1(0x99);
	push_base_offset(0x9c);
	load(0x2);
	push_base_offset(0x98);
	load(0x2);
	push_base_offset(0x94);
	load(0x2);
	push_offset(L019c6);
	call();
	load_base();
	push_word(0x9c);
	sub();
	store_base();
	ret();

L019c6:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_byte(0x0);
	push_offset(L01a6a);
	jc(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22188);
	add();
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_word(0x500);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2218c);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220f0);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_word(0x3c0);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x9a);

L01a6a:
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L01a70:
	load_base();
	push_byte(0x54);
	add();
	store_base();
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x50);
	move_arg(0x2);
	push_base_offset(0x54);
	move_arg(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_offset(L01bc4);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x24);
	push_word(0x400);
	push_byte(0x33);
	add();
	grp1(0x16);
	push_base_offset(0x30);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01b8e);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x24);
	push_byte(0x8);
	add();
	load(0x2);
	add();
	push_base_offset(0x54);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	add();
	sub();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0xc);
	load(0x2);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	push_base_offset(0x50);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	sub();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x8);
	load(0x2);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_offset(L01bb4);
	jmp();

L01b8e:
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x24);
	push_byte(0x8);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x24);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	move(0x2);

L01bb4:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x54);
	sub();
	store_base();
	ret();

L01bc4:
	load_base();
	push_byte(0x1c);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x0);
	add();
	mul();
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	sub();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	add();
	mul();
	add();
	push_byte(0x8);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x1c);
	sub();
	store_base();
	ret();

L01c33:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x64);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sub();
	add();
	push_base_offset(0x4);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x64);
	gt();
	push_byte(0x64);
	push_base_offset(0x8);
	load(0x2);
	ternary();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L01c74:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	add();
	mul();
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L01cb6:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L01c33);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x42a94);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp2(0x89);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L01cf2:
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L01e2c);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01e2c);
	jc(0x1);
	push_base_offset(0x30);
	push_word(0x400);
	push_byte(0x57);
	add();
	grp1(0x16);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	lt();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0xc);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x30);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	gt();
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x14);
	push_word(0x3c0);
	push_word(0x2d0);
	sub();
	push_base_offset(0x8);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	lt();
	push_word(0x2d0);
	push_base_offset(0x14);
	load(0x2);
	add();
	push_word(0x2d0);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	sar();
	add();
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);

L01e2c:
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();

L01e3c:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L01e6a);
	jc(0x1);
	push_base_offset(0x4);
	push_word(0x3c0);
	push_word(0x2d0);
	sub();
	move(0x2);

L01e6a:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L01e7a:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L01ecc);
	jc(0x1);
	push_byte(0x20);
	push_word(0x12e);
	add();
	load(0x1);
	push_byte(0x2);
	eq();
	push_offset(L01ecc);
	jc(0x1);
	push_base_offset(0x20);
	push_word(0x400);
	push_byte(0x5a);
	add();
	grp1(0x16);
	push_base_offset(0x4);
	push_word(0x2d0);
	push_base_offset(0x20);
	push_byte(0xc);
	add();
	load(0x2);
	sub();
	push_word(0x1c7);
	sub();
	move(0x2);

L01ecc:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L01edc:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x900);
	load(0x2);
	push_offset(L02075);
	jc(0x1);
	push_word(0x8f8);
	load(0x2);
	push_offset(L01f7b);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);
	push_word(0x4fc);
	load(0x2);
	bool_zero();
	push_word(0x8fc);
	load(0x2);
	bool_and();
	push_offset(L01f33);
	jc(0x1);
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L01f33:
	push_word(0x9b4);
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01f7b);
	jc(0x1);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01f7b);
	jc(0x1);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L01f7b:
	push_dword(0x42aa8);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);
	push_word(0xb0c);
	load(0x2);
	push_offset(L01ff4);
	jc(0x0);
	push_word(0xb74);
	load(0x2);
	push_offset(L01ff4);
	jc(0x0);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01ff4);
	jc(0x1);
	push_dword(0x42a80);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01fd7);
	jc(0x1);
	push_dword(0x42a84);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L01fd7:
	push_dword(0x42a88);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01ff4);
	jc(0x1);
	push_dword(0x42a88);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L01ff4:
	push_word(0x8f8);
	load(0x2);
	push_offset(L02075);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02027);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L02027:
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L02075);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02075);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L02075:
	push_word(0x904);
	load(0x2);
	push_offset(L02093);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L02093:
	push_word(0x908);
	load(0x2);
	push_offset(L020b1);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L020b1:
	push_byte(0x0);
	grp1(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_word(0x710);
	sys1(0x18);
	push_base_offset(0x24);
	push_byte(0x1);
	push_word(0x80);
	or();
	push_word(0x100);
	or();
	push_word(0x2000);
	or();
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	sys1(0x1c);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x1c);
	push_base_offset(0x34);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x18);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	add();
	move(0x2);

L02157:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L02237);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	sys1(0x1c);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	neq();
	push_base_offset(0x2c);
	load(0x2);
	bool_and();
	push_offset(L02221);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	lt();
	push_offset(L02157);
	jc(0x0);
	push_base_offset(0x28);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	sub();
	push_base_offset(0x18);
	load(0x2);
	div();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	mul();
	add();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	leq();
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	mul();
	push_base_offset(0x14);
	load(0x2);
	div();
	add();
	push_offset(L01edc);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	lt();
	push_offset(L02157);
	jc(0x0);

L02221:
	push_base_offset(0x34);
	load(0x2);
	push_offset(L01edc);
	call();
	push_word(0x3e8);
	push_word(0x3e8);
	div();
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);

L02237:
	push_word(0x710);
	sys1(0x19);
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();

L02242:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);

L02260:
	push_word(0x504);
	load(0x2);
	push_offset(L0228b);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L0228b);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0228b);
	jc(0x1);
	sys1(0x5f);
	push_offset(L02260);
	jmp();

L0228b:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L022a0:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x720);
	sys1(0x18);
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);

L022c3:
	push_word(0x504);
	load(0x2);
	push_offset(L022ff);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L022ff);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L022ff);
	jc(0x1);
	sys1(0x17);
	push_offset(L022ff);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L022ff);
	jc(0x0);
	sys1(0x5f);
	push_offset(L022c3);
	jmp();

L022ff:
	push_word(0x720);
	sys1(0x19);
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02319:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L023bd);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	geq();
	push_offset(L02393);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	bool_or();
	push_offset(L02393);
	jc(0x0);
	push_string("循環制御が行われているオブジェクトに対して待機要求が発行されました");
	cmd_79();
	push_offset(L023bd);
	jmp();

L02393:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L023af);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L02242);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_offset(L023bd);
	jmp();

L023af:
	push_base_offset(0x10);
	load(0x2);
	push_offset(L022a0);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L023bd:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L023c8:
	load_base();
	push_word(0x1f8);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d8);
	move_arg(0x2);
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_base_offset(0x1e0);
	move_arg(0x2);
	push_base_offset(0x1e4);
	move_arg(0x2);
	push_base_offset(0x1e8);
	move_arg(0x2);
	push_base_offset(0x1ec);
	move_arg(0x2);
	push_base_offset(0x1f0);
	move_arg(0x2);
	push_base_offset(0x1f4);
	move_arg(0x2);
	push_base_offset(0x1f8);
	move_arg(0x2);
	push_base_offset(0x1f8);
	load(0x2);
	push_offset(L02ac2);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memclr();
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_base_offset(0x1f4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1f0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x1c);
	add();
	push_base_offset(0x1ec);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x20);
	add();
	push_base_offset(0x1e8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x128);
	add();
	push_base_offset(0x1e4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x12c);
	add();
	push_base_offset(0x1e0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x130);
	add();
	push_base_offset(0x1dc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x134);
	add();
	push_base_offset(0x1d8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x138);
	add();
	push_base_offset(0x1d4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x13c);
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L024fa);
	jc(0x1);
	push_base_offset(0x1c0);
	push_word(0x150);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x70);
	memcpy();

L024fa:
	push_dword(0x227a4);
	push_base_offset(0x1f8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1cc);
	load(0x2);
	push_offset(L0252a);
	jc(0x1);
	push_base_offset(0x1f8);
	load(0x2);
	push_byte(0x0);
	push_offset(L02319);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);

L0252a:
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1f8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x24);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L023c8);
	call();
	load_base();
	push_byte(0x24);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L023c8);
	call();
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x1f0);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d8);
	move_arg(0x2);
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_base_offset(0x1e0);
	move_arg(0x2);
	push_base_offset(0x1e4);
	move_arg(0x2);
	push_base_offset(0x1e8);
	move_arg(0x2);
	push_base_offset(0x1ec);
	move_arg(0x2);
	push_base_offset(0x1f0);
	move_arg(0x2);
	push_base_offset(0x1f0);
	load(0x2);
	push_offset(L02ac2);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1ec);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x24);
	add();
	push_base_offset(0x1e8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x28);
	add();
	push_base_offset(0x1e4);
	load(0x2);
	push_base_offset(0x1e8);
	load(0x2);
	push_byte(0x10);
	mul();
	memcpy();
	push_base_offset(0x1c0);
	push_word(0x128);
	add();
	push_base_offset(0x1e0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x12c);
	add();
	push_base_offset(0x1dc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x130);
	add();
	push_base_offset(0x1d8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x134);
	add();
	push_base_offset(0x1d4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x138);
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x13c);
	add();
	push_base_offset(0x1cc);
	load(0x2);
	move(0x2);
	push_dword(0x227a4);
	push_base_offset(0x1f0);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c8);
	load(0x2);
	push_offset(L02761);
	jc(0x1);
	push_base_offset(0x1f0);
	load(0x2);
	push_byte(0x0);
	push_offset(L02319);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);

L02761:
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1f0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x30);
	load(0x2);
	add();
	push_byte(0x3);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L023c8);
	call();
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x2c);
	load(0x2);
	add();
	push_byte(0x4);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L023c8);
	call();
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x1c8);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x1c8);
	load(0x2);
	add();
	push_offset(L02bfc);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x5);
	push_byte(0x0);
	add();
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x227a4);
	push_byte(0x0);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1c8);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x1dc);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d8);
	move_arg(0x2);
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x1dc);
	load(0x2);
	add();
	push_offset(L02bfc);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memclr();
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x5);
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1d8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1d4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x13c);
	add();
	push_base_offset(0x1cc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L029db);
	jc(0x1);
	push_base_offset(0x1c0);
	push_word(0x150);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x70);
	memcpy();

L029db:
	push_dword(0x227a4);
	push_byte(0x0);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1dc);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1dc);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x1d4);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d4);
	load(0x2);
	push_offset(L02bfc);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x5);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1cc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1c8);
	load(0x2);
	move(0x2);
	push_dword(0x227a4);
	push_base_offset(0x1d4);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1d4);
	sub();
	store_base();
	ret();

L02ac2:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	push_dword(0x227a4);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02b84);
	jc(0x1);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x1);
	add();
	eq();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x450);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	push_offset(L02319);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L02b84);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02b84);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	push_offset(L02b84);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	memclr();

L02b84:
	push_base_offset(0x10);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L02b9b:
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02bdc);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	geq();
	push_offset(L02bdc);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);

L02bdc:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x52);
	lt();
	push_offset(L02b9b);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02bfc:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	push_dword(0x227a4);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02cbe);
	jc(0x1);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x1);
	add();
	eq();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x450);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	push_offset(L02319);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L02cbe);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02cbe);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	push_offset(L02cbe);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	memclr();

L02cbe:
	push_base_offset(0x10);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L02cda:
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02d3b);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	push_offset(L02d3b);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_word(0x450);
	memclr();
	push_offset(L02d55);
	jmp();

L02d3b:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	lt();
	push_offset(L02cda);
	jc(0x0);

L02d55:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x2da64);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L02d7f:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);

L02d9d:
	push_word(0x504);
	load(0x2);
	push_offset(L02dc8);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L02dc8);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L02dc8);
	jc(0x1);
	sys1(0x5f);
	push_offset(L02d9d);
	jmp();

L02dc8:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02ddd:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x720);
	sys1(0x18);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);

L02e00:
	push_word(0x504);
	load(0x2);
	push_offset(L02e3c);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L02e3c);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L02e3c);
	jc(0x1);
	sys1(0x17);
	push_offset(L02e3c);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L02e3c);
	jc(0x0);
	sys1(0x5f);
	push_offset(L02e00);
	jmp();

L02e3c:
	push_word(0x720);
	sys1(0x19);
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L02e81);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L02d7f);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_offset(L02e8f);
	jmp();

L02e81:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L02ddd);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L02e8f:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L02e9a:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L02ee8);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L02d7f);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L02ee8:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L02f0b:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L02f4f);
	jc(0x1);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L02f4f);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);

L02f4f:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L02f0b);
	jc(0x0);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L02f70:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L02f93);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L02d7f);
	call();
	push_base_offset(0xc);
	move_arg(0x2);

L02f93:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L02f70);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L02fc4:
	push_dword(0x2da64);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L02ff3);
	jc(0x1);
	push_dword(0x2da64);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);

L02ff3:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L02fc4);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L03061);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L02d7f);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L03061:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0306c:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L030d8);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	load(0x2);
	push_byte(0x40);
	lt();
	push_offset(L030e3);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x1a444);
	add();
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L030d8:
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);
	push_offset(L030ee);
	jmp();

L030e3:
	push_string("バストショット制御向けプリロード対象ビットマップ配列に空きがありません");
	cmd_79();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L030ee:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x368);
	add();
	store_base();
	push_base_offset(0x2e4);
	move_arg(0x2);
	push_base_offset(0x2e8);
	move_arg(0x2);
	push_base_offset(0x2ec);
	move_arg(0x2);
	push_base_offset(0x2f0);
	move_arg(0x2);
	push_base_offset(0x2f4);
	move_arg(0x2);
	push_base_offset(0x2f8);
	move_arg(0x2);
	push_base_offset(0x2fc);
	move_arg(0x2);
	push_base_offset(0x300);
	move_arg(0x2);
	push_base_offset(0x304);
	move_arg(0x2);
	push_base_offset(0x308);
	move_arg(0x2);
	push_base_offset(0x30c);
	move_arg(0x2);
	push_base_offset(0x310);
	move_arg(0x2);
	push_base_offset(0x314);
	move_arg(0x2);
	push_base_offset(0x318);
	move_arg(0x2);
	push_base_offset(0x31c);
	move_arg(0x2);
	push_base_offset(0x320);
	move_arg(0x2);
	push_base_offset(0x324);
	move_arg(0x2);
	push_base_offset(0x328);
	move_arg(0x2);
	push_base_offset(0x32c);
	move_arg(0x2);
	push_base_offset(0x330);
	move_arg(0x2);
	push_base_offset(0x334);
	move_arg(0x2);
	push_base_offset(0x338);
	move_arg(0x2);
	push_base_offset(0x33c);
	move_arg(0x2);
	push_base_offset(0x340);
	move_arg(0x2);
	push_base_offset(0x344);
	move_arg(0x2);
	push_base_offset(0x348);
	move_arg(0x2);
	push_base_offset(0x34c);
	move_arg(0x2);
	push_base_offset(0x350);
	move_arg(0x2);
	push_base_offset(0x354);
	move_arg(0x2);
	push_base_offset(0x358);
	move_arg(0x2);
	push_base_offset(0x35c);
	move_arg(0x2);
	push_base_offset(0x360);
	move_arg(0x2);
	push_base_offset(0x364);
	move_arg(0x2);
	push_base_offset(0x368);
	move_arg(0x2);
	push_byte(0x0);
	push_offset(L03be6);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x1a434);
	add();
	load(0x2);
	push_offset(L03be6);
	jc(0x0);
	push_base_offset(0x2e0);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f0);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	geq();
	push_base_offset(0x2f0);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x2f0);
	move_arg(0x2);
	push_base_offset(0x2f8);
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L03268);
	jc(0x0);
	push_base_offset(0x2f8);
	load(0x2);
	push_word(0x80);
	push_byte(0x2);
	mul();
	push_byte(0x10);
	sub();
	lt();
	push_offset(L03252);
	jc(0x0);
	push_base_offset(0x2f8);
	load(0x2);
	push_word(0x80);
	push_byte(0x2);
	mul();
	lt();
	push_offset(L03232);
	jc(0x0);
	push_base_offset(0x2f8);
	push_word(0x732);
	push_word(0x100);
	sub();
	move(0x2);
	push_base_offset(0x2e0);
	push_byte(0x1);
	move(0x2);
	push_offset(L03268);
	jmp();

L03232:
	push_base_offset(0x2f8);
	push_word(0x7b0);
	push_word(0x100);
	sub();
	push_base_offset(0x2f8);
	load(0x2);
	add();
	push_word(0x80);
	push_byte(0x2);
	mul();
	push_byte(0x10);
	sub();
	sub();
	move(0x2);
	push_offset(L03268);
	jmp();

L03252:
	push_base_offset(0x2f8);
	push_word(0x500);
	push_word(0x100);
	sub();
	push_base_offset(0x2f8);
	load(0x2);
	add();
	push_word(0x80);
	sub();
	move(0x2);

L03268:
	push_dword(0x9fab8);
	push_dword(0xd0b4);
	add();
	push_base_offset(0x368);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L03292);
	jc(0x0);
	push_string("バストショット制御コマンド情報配列に空きがありません");
	cmd_79();
	push_offset(L03be6);
	jmp();

L03292:
	push_base_offset(0x124);
	push_dword(0x9fab8);
	push_dword(0xd0b4);
	add();
	push_base_offset(0x368);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x120);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L032ba:
	push_base_offset(0x2d8);
	load(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	lt();
	push_offset(L03316);
	jc(0x1);
	push_base_offset(0x1d4);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_word(0xb0);
	mul();
	add();
	push_word(0xb0);
	memcpy();
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L03305);
	jc(0x0);
	push_base_offset(0x120);
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	load(0x2);
	move(0x2);

L03305:
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L032ba);
	jmp();

L03316:
	push_base_offset(0x1d4);
	push_word(0xb0);
	memclr();
	push_base_offset(0x1d4);
	push_byte(0x0);
	add();
	push_base_offset(0x364);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x4);
	add();
	push_base_offset(0x33c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x8);
	add();
	push_base_offset(0x338);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0xc);
	add();
	push_base_offset(0x334);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x10);
	add();
	push_base_offset(0x330);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x14);
	add();
	push_base_offset(0x32c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x18);
	add();
	push_base_offset(0x328);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x1c);
	add();
	push_base_offset(0x324);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x20);
	add();
	push_base_offset(0x320);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x24);
	add();
	push_base_offset(0x31c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x28);
	add();
	push_base_offset(0x318);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x2c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x30);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x34);
	add();
	push_base_offset(0x314);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x38);
	add();
	push_base_offset(0x310);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x4c);
	add();
	push_base_offset(0x308);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x50);
	add();
	push_base_offset(0x304);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x54);
	add();
	push_base_offset(0x300);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x58);
	add();
	push_base_offset(0x2fc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x5c);
	add();
	push_base_offset(0x2f8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x60);
	add();
	push_base_offset(0x2f4);
	load(0x2);
	move(0x2);
	push_base_offset(0x30c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03443);
	jc(0x1);
	push_base_offset(0x1d4);
	push_byte(0x3c);
	add();
	push_base_offset(0x30c);
	load(0x2);
	push_byte(0x10);
	memcpy();

L03443:
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0349b);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x360);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_byte(0x64);
	add();
	move_arg(0x2);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L034a9);
	jc(0x1);
	push_base_offset(0x2d4);
	load(0x0);
	push_byte(0x24);
	eq();
	push_offset(L034a9);
	jc(0x0);
	push_base_offset(0x1d4);
	push_byte(0x64);
	add();
	load(0x2);
	push_offset(L0306c);
	call();
	push_offset(L03be6);
	jc(0x1);
	push_offset(L034a9);
	jmp();

L0349b:
	push_base_offset(0x1d4);
	push_byte(0x64);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L034a9:
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L034f4);
	jc(0x1);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L034f4);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x35c);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_byte(0x68);
	add();
	move_arg(0x2);
	push_base_offset(0x1d4);
	push_byte(0x68);
	add();
	load(0x2);
	push_offset(L0306c);
	call();
	push_offset(L03be6);
	jc(0x1);
	push_offset(L03502);
	jmp();

L034f4:
	push_base_offset(0x1d4);
	push_byte(0x68);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L03502:
	push_base_offset(0x1d4);
	push_byte(0x6c);
	add();
	push_base_offset(0x358);
	load(0x2);
	move(0x2);
	push_base_offset(0x344);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0355a);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x344);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_byte(0x70);
	add();
	move_arg(0x2);
	push_base_offset(0x1d4);
	push_byte(0x70);
	add();
	load(0x2);
	push_offset(L0306c);
	call();
	push_offset(L03be6);
	jc(0x1);
	push_base_offset(0x1d4);
	push_byte(0x74);
	add();
	push_base_offset(0x340);
	load(0x2);
	move(0x2);
	push_offset(L03568);
	jmp();

L0355a:
	push_base_offset(0x1d4);
	push_byte(0x70);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L03568:
	push_base_offset(0x350);
	load(0x2);
	push_byte(0x2);
	geq();
	push_offset(L03595);
	jc(0x0);
	push_base_offset(0x1d4);
	push_byte(0x7c);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1d4);
	push_word(0x80);
	add();
	push_base_offset(0x350);
	load(0x2);
	move(0x2);
	push_offset(L0371c);
	jmp();

L03595:
	push_base_offset(0x1d4);
	push_byte(0x7c);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_word(0x80);
	add();
	push_base_offset(0x350);
	load(0x2);
	move(0x2);
	push_base_offset(0x11c);
	push_base_offset(0x1d4);
	push_byte(0x7c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x61c);
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_base_offset(0x2dc);
	push_word(0x80);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	sub();
	push_base_offset(0x354);
	load(0x2);
	push_offset(L047fd);
	call();
	push_offset(L03714);
	jc(0x1);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x61c);
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_base_offset(0x2dc);
	push_word(0x80);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	sub();
	push_base_offset(0x348);
	load(0x2);
	push_offset(L047fd);
	call();
	push_offset(L03714);
	jc(0x1);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x34c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0371c);
	jc(0x1);
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L0368d:
	push_base_offset(0x124);
	load(0x2);
	push_word(0x61c);
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_base_offset(0x2dc);
	push_word(0x80);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	sub();
	push_base_offset(0x34c);
	load(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L047fd);
	call();
	push_offset(L03714);
	jc(0x1);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_base_offset(0x350);
	load(0x2);
	lt();
	push_offset(L0368d);
	jc(0x0);
	push_offset(L0371c);
	jmp();

L03714:
	push_string("バストショット制御向けアニメーション領域に空きがありません");
	cmd_79();
	push_offset(L03be6);
	jmp();

L0371c:
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	push_base_offset(0x2f0);
	load(0x2);
	move(0x2);
	push_base_offset(0x2f0);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L037d6);
	jc(0x0);
	push_base_offset(0x2f0);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x2f0);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a43c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a43c);
	add();
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	load(0x2);
	push_byte(0x0);
	leq();
	push_offset(L037b3);
	jc(0x1);
	push_base_offset(0x120);
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L037b3:
	push_base_offset(0x2dc);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x2dc);
	load(0x2);
	push_base_offset(0x120);
	load(0x2);
	push_byte(0x1);
	sub();
	ternary();
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	move_arg(0x2);

L037d6:
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L037dd:
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L037dd);
	jc(0x0);
	push_base_offset(0x2ec);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0396b);
	jc(0x1);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0396b);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x2ec);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_word(0x84);
	add();
	move_arg(0x2);
	push_base_offset(0x118);
	push_word(0xab4);
	load(0x2);
	push_base_offset(0x2d4);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L038c0);
	jc(0x0);
	push_byte(0x1);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x118);
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x118);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x2d8);
	push_byte(0x1);
	move(0x2);

L0388f:
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L0388f);
	jc(0x0);

L038c0:
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L038c7:
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L0394d);
	jc(0x1);
	push_base_offset(0x2d4);
	push_byte(0x1);
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	sys1(0xdd);
	push_base_offset(0xd4);
	push_word(0xab0);
	load(0x2);
	push_base_offset(0x2d4);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03938);
	jc(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L03938);
	jc(0x1);
	push_base_offset(0x2d4);
	push_byte(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0xdd);

L03938:
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);

L0394d:
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L038c7);
	jc(0x0);
	push_offset(L0397a);
	jmp();

L0396b:
	push_base_offset(0x1d4);
	push_word(0x84);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L0397a:
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L03981:
	push_base_offset(0x2e4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03a71);
	jc(0x1);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03a71);
	jc(0x1);
	push_base_offset(0x2d8);
	load(0x2);
	push_base_offset(0x2e8);
	load(0x2);
	geq();
	push_offset(L03a71);
	jc(0x0);
	push_base_offset(0x2e4);
	load(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03a71);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x2e4);
	load(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_word(0x88);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0xd4);
	push_word(0xab0);
	load(0x2);
	push_base_offset(0x2d4);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03a4d);
	jc(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L03a4d);
	jc(0x1);
	push_base_offset(0x2d4);
	push_byte(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0xdd);
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_offset(L03a89);
	jmp();

L03a4d:
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1d4);
	push_word(0x88);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_offset(L03a89);
	jmp();

L03a71:
	push_base_offset(0x1d4);
	push_word(0x88);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L03a89:
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L03981);
	jc(0x0);
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L03aaa:
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L0306c);
	call();
	push_offset(L03be6);
	jc(0x1);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L03aaa);
	jc(0x0);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03b4f);
	jc(0x1);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x59c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x5a0);
	add();
	push_byte(0x0);
	move(0x2);

L03b4f:
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_word(0xb0);
	mul();
	add();
	push_base_offset(0x1d4);
	push_word(0xb0);
	memcpy();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2e0);
	load(0x2);
	push_base_offset(0x364);
	load(0x2);
	push_byte(0x4);
	eq();
	push_base_offset(0x368);
	load(0x2);
	push_dword(0x45f14);
	load(0x2);
	eq();
	bool_and();
	bool_or();
	push_offset(L03bbb);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x244c4);
	add();
	push_base_offset(0x368);
	load(0x2);
	move(0x2);
	push_offset(L03be6);
	jmp();

L03bbb:
	push_base_offset(0x368);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x244c4);
	add();
	load(0x2);
	eq();
	push_offset(L03be6);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x244c4);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L03be6:
	load_base();
	push_word(0x368);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x128);
	add();
	store_base();
	push_base_offset(0x124);
	move_arg(0x2);
	push_base_offset(0x128);
	move_arg(0x2);
	push_base_offset(0x120);
	push_base_offset(0x128);
	load(0x2);
	push_word(0xb0);
	memcpy();
	push_base_offset(0x70);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x70);
	memcpy();
	push_base_offset(0x120);
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x20);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x24);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0xc);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x28);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0xc);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x10);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x20);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x10);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x14);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x24);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x14);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x18);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x28);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x18);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x1c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x2c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x1c);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x30);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x20);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x24);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x24);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x34);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x24);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x28);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x28);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x38);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x28);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x34);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x44);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x34);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x38);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x38);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x4c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x38);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x4c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x4c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x64);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x4c);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x50);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x50);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x68);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x50);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x5c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x5c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x6c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x5c);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x6c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x6c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x6c);
	add();
	move_arg(0x2);
	push_base_offset(0x128);
	load(0x2);
	push_base_offset(0x120);
	push_word(0xb0);
	memcpy();
	load_base();
	push_word(0x128);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();

L03e9c:
	push_word(0x504);
	load(0x2);
	push_offset(L03ebb);
	jc(0x0);
	push_dword(0x3ade4);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L03ebb);
	jc(0x1);
	sys1(0x5f);
	push_offset(L03e9c);
	jmp();

L03ebb:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L03ec7:
	load_base();
	push_byte(0x0);
	add();
	store_base();

L03ecc:
	push_word(0x504);
	load(0x2);
	push_offset(L03efd);
	jc(0x0);
	push_dword(0x3adf4);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03efd);
	jc(0x1);
	push_dword(0x3adf4);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03efd);
	jc(0x0);
	sys1(0x5f);
	push_offset(L03ecc);
	jmp();

L03efd:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L03f09:
	load_base();
	push_word(0x158);
	add();
	store_base();
	push_base_offset(0x150);
	move_arg(0x2);
	push_base_offset(0x154);
	move_arg(0x2);
	push_base_offset(0x158);
	move_arg(0x2);
	sys1(0x17);
	push_base_offset(0x148);
	move_arg(0x2);
	push_base_offset(0x148);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	bool_or();
	push_byte(0x20);
	push_byte(0x10);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_byte(0x0);
	push_base_offset(0x154);
	load(0x2);
	ternary();
	push_base_offset(0x154);
	move_arg(0x2);
	push_dword(0x3adf4);
	push_byte(0x4);
	add();
	push_dword(0x3adf4);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_offset(L03ec7);
	call();
	push_base_offset(0x44);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x38);
	push_base_offset(0x20);
	push_word(0x400);
	push_byte(0x69);
	add();
	grp1(0x16);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L03fb2);
	jc(0x1);
	push_word(0x400);
	push_byte(0x6a);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	grp2(0x1f);

L03fb2:
	push_base_offset(0x158);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0403b);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("bitmap._bp");
	sys1(0x40);
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0xba8);
	load(0x2);
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x400);
	push_byte(0x69);
	add();
	push_base_offset(0x158);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	push_byte(0x70);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	load(0x2);
	push_byte(0x10);
	push_base_offset(0x8);
	load(0x2);
	call();
	push_base_offset(0x148);
	move_arg(0x2);
	sys1(0x41);
	push_byte(0x0);
	push_offset(L0403b);
	jc(0x1);
	push_base_offset(0x148);
	load(0x2);
	push_offset(L0403b);
	jc(0x0);
	push_base_offset(0x158);
	load(0x2);
	push_base_offset(0x144);
	push_string("未定義のキャラクター名 [ %s ] が指定されました");
	cmd_6f();
	push_base_offset(0x144);
	cmd_79();

L0403b:
	push_base_offset(0x158);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04182);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L040e6);
	jc(0x0);
	push_dword(0x42aac);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	push_byte(0x1);
	push_word(0x100);
	push_word(0x740);
	grp1(0x56);
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	push_word(0x100);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L0421b);
	jmp();

L040e6:
	push_dword(0x42aac);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	push_word(0x400);
	push_byte(0x6a);
	add();
	push_word(0x100);
	push_byte(0x0);
	push_word(0x740);
	push_byte(0x1);
	grp1(0x58);
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	push_word(0x100);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x20);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	move(0x2);
	push_offset(L0421b);
	jmp();

L04182:
	push_base_offset(0x24);
	load(0x2);
	push_offset(L042ab);
	jc(0x1);
	push_dword(0x42aac);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x740);
	grp1(0x56);
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x14);
	add();
	push_word(0x100);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x24);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	move(0x2);

L0421b:
	push_dword(0x42aac);
	load(0x2);
	push_byte(0x1);
	grp1(0x30);
	push_dword(0x3adf4);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x14c);
	move_arg(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0x14c);
	load(0x2);
	ternary();
	push_dword(0x3adf4);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_dword(0x3adf4);
	push_byte(0xc);
	add();
	push_dword(0x42aac);
	load(0x2);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14c);
	push_base_offset(0x154);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	move(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x1);
	geq();
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_dword(0x3adf4);
	push_byte(0x1c);
	add();
	move_arg(0x2);

L042ab:
	load_base();
	push_word(0x158);
	sub();
	store_base();
	ret();

L042b2:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3ae20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	move(0x2);

L042cf:
	push_word(0x504);
	load(0x2);
	push_offset(L042ee);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L042ee);
	jc(0x1);
	sys1(0x5f);
	push_offset(L042cf);
	jmp();

L042ee:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L042fa:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x720);
	sys1(0x18);
	push_base_offset(0x4);
	push_dword(0x3ae20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	move(0x2);

L0431c:
	push_word(0x504);
	load(0x2);
	push_offset(L0434c);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L0434c);
	jc(0x1);
	sys1(0x17);
	push_offset(L0434c);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L0434c);
	jc(0x0);
	sys1(0x5f);
	push_offset(L0431c);
	jmp();

L0434c:
	push_word(0x720);
	sys1(0x19);
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L04388);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L042b2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_offset(L04396);
	jmp();

L04388:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L042fa);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L04396:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x94);
	add();
	store_base();
	push_base_offset(0x70);
	move_arg(0x2);
	push_base_offset(0x74);
	move_arg(0x2);
	push_base_offset(0x78);
	move_arg(0x2);
	push_base_offset(0x7c);
	move_arg(0x2);
	push_base_offset(0x80);
	move_arg(0x2);
	push_base_offset(0x84);
	move_arg(0x2);
	push_base_offset(0x88);
	move_arg(0x2);
	push_base_offset(0x8c);
	move_arg(0x2);
	push_base_offset(0x90);
	move_arg(0x2);
	push_base_offset(0x94);
	move_arg(0x2);
	push_base_offset(0x70);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x70);
	load(0x2);
	push_dword(0x7fffffff);
	ternary();
	push_base_offset(0x70);
	move_arg(0x2);
	push_base_offset(0x6c);
	push_byte(0x6c);
	memclr();
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8c);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x88);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x84);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x10);
	add();
	push_base_offset(0x80);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x14);
	add();
	push_base_offset(0x7c);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x18);
	add();
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x1c);
	add();
	push_base_offset(0x74);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x20);
	add();
	push_base_offset(0x70);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x24);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x28);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x2c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x30);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x34);
	add();
	push_base_offset(0x90);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x38);
	add();
	push_base_offset(0x70);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x40);
	add();
	push_word(0x101);
	push_base_offset(0x8c);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x3c);
	add();
	push_base_offset(0x6c);
	push_byte(0x40);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x44);
	add();
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x48);
	add();
	push_base_offset(0x80);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x4c);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x4c);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x4c);
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x5c);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x5c);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x5c);
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3ae20);
	push_base_offset(0x94);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	push_base_offset(0x6c);
	push_byte(0x6c);
	memcpy();
	load_base();
	push_word(0x94);
	sub();
	store_base();
	ret();

L0456d:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3ae20);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L045cd);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x30);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	move(0x2);

L045cd:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L045df:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L0456d);
	call();
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x52);
	lt();
	push_offset(L045df);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x58);
	add();
	store_base();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x50);
	move_arg(0x2);
	push_base_offset(0x54);
	move_arg(0x2);
	push_base_offset(0x58);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x44);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x40);
	move_arg(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x2c);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x3c);
	move_arg(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x30);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x34);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x4);
	add();
	push_base_offset(0x54);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x8);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x50);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x3c);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x8);
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x38);
	load(0x2);
	move(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x34);
	push_byte(0x14);
	add();
	move_arg(0x2);
	push_base_offset(0x34);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x1c);
	add();
	push_base_offset(0x40);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x24);
	add();
	push_base_offset(0x4c);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x28);
	add();
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	sub();
	move(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x34);
	push_byte(0x34);
	memcpy();
	load_base();
	push_byte(0x58);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3d0b8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L047f7);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x60);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x38);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	memclr();

L047f7:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L047fd:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04863);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L04831:
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x7);
	sar();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04831);
	jc(0x0);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_offset(L048ec);
	jmp();

L04863:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0486a:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	geq();
	push_offset(L04905);
	jc(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x7f);
	and();
	move(0x0);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x7);
	sar();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L048d8);
	jc(0x1);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	load(0x0);
	push_word(0x80);
	or();
	move(0x0);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L0486a);
	jmp();

L048d8:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L048ec:
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04905);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);

L04905:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L04910:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x100);
	push_word(0x100);
	push_base_offset(0x4);
	load(0x2);
	mul();
	push_byte(0xb);
	push_byte(0x1);
	sub();
	div();
	sub();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L04933:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04960);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	grp1(0x51);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4c);
	memclr();

L04960:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L04933);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x14);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	grp1(0x50);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp1(0x38);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L049f8:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04a4f);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x33);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);

L04a4f:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L04a55:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04a8e);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x36);

L04a8e:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L04a94:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04ac3);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x34);

L04ac3:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04af8);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp2(0x31);

L04af8:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04d6c);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L04f09);
	call();
	push_offset(L04ce8);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04c6a);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04c6a);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04beb);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	div();
	move(0x2);
	push_offset(L04c39);
	jmp();

L04beb:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L04c39);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	sub();
	push_base_offset(0x14);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	div();
	move(0x2);

L04c39:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	grp1(0x57);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	grp1(0x38);
	push_byte(0x0);
	grp1(0x0);
	push_offset(L04ce8);
	jmp();

L04c6a:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x20);
	add();
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1);
	push_word(0x100);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	grp1(0x56);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	grp1(0x38);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0x54);

L04ce8:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x18);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x10);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);

L04d6c:
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04f03);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L04f03);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L04f09);
	call();
	push_offset(L04de4);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x14);
	memclr();
	push_offset(L04f03);
	jmp();

L04de4:
	push_base_offset(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04eac);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04e5b);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	sub();
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	div();
	move(0x2);
	push_offset(L04ea8);
	jmp();

L04e5b:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L04e71);
	jc(0x1);
	push_offset(L04eac);
	jmp();

L04e71:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L04ea8);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	div();
	move(0x2);

L04ea8:
	push_offset(L04ed0);
	jmp();

L04eac:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x20);
	add();
	move_arg(0x2);

L04ed0:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x10);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L04f03:
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L04f09:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04f7f);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L04f38:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	leq();
	push_offset(L04f7f);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04f6e);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_offset(L04f7f);
	jmp();

L04f6e:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_offset(L04f38);
	jmp();

L04f7f:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04ffe);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L04ffe);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L04fea);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_offset(L04ffe);
	jmp();

L04fea:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L04f09);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L04ffe:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
