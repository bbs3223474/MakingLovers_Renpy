	load_base();
	push_word(0x108);
	add();
	store_base();
	sys1(0x46);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x22794);
	push_byte(0x1);
	move(0x2);
	push_dword(0x22798);
	push_byte(0x0);
	move(0x2);
	push_offset(L001b7);
	call();
	push_string("sysprg.arc");
	push_string("anmmngrs._bp");
	push_word(0x100);
	push_word(0x2000);
	push_word(0x1000);
	sys1(0x44);
	push_base_offset(0x108);
	move_arg(0x2);

L00056:
	push_dword(0x22790);
	push_byte(0x0);
	move(0x2);
	sys1(0x5f);

L00061:
	push_word(0x4f4);
	load(0x2);
	push_offset(L0016a);
	jc(0x0);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L00056);
	jc(0x1);
	push_dword(0x22790);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x40000002);
	eq();
	push_offset(L00096);
	jc(0x1);
	push_offset(L002f3);
	call();
	push_offset(L00061);
	jmp();

L00096:
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x40000003);
	eq();
	push_offset(L000ae);
	jc(0x1);
	push_offset(L0041e);
	call();
	push_offset(L00061);
	jmp();

L000ae:
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x40000004);
	eq();
	push_offset(L000c6);
	jc(0x1);
	push_offset(L00515);
	call();
	push_offset(L00061);
	jmp();

L000c6:
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x40000005);
	eq();
	push_offset(L000de);
	jc(0x1);
	push_offset(L00b69);
	call();
	push_offset(L00061);
	jmp();

L000de:
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x40001000);
	eq();
	push_offset(L000f6);
	jc(0x1);
	push_offset(L00c3e);
	call();
	push_offset(L00061);
	jmp();

L000f6:
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x40000000);
	eq();
	push_offset(L0010e);
	jc(0x1);
	push_offset(L00c59);
	call();
	push_offset(L00061);
	jmp();

L0010e:
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x40000001);
	eq();
	push_offset(L00126);
	jc(0x1);
	push_offset(L010f7);
	call();
	push_offset(L00061);
	jmp();

L00126:
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x40000006);
	eq();
	push_offset(L0013e);
	jc(0x1);
	push_offset(L01115);
	call();
	push_offset(L00061);
	jmp();

L0013e:
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x40000007);
	eq();
	push_offset(L00156);
	jc(0x1);
	push_offset(L01a03);
	call();
	push_offset(L00061);
	jmp();

L00156:
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("アニメーションマネージャ・マスタースレッドは無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();
	push_offset(L00061);
	jmp();

L0016a:
	push_offset(L001cc);
	call();
	push_offset(L001b7);
	call();
	push_base_offset(0x108);
	load(0x2);
	push_dword(0x40ffffff);
	sys1(0x48);

L0017e:
	sys1(0x5f);
	push_base_offset(0x108);
	load(0x2);
	sys1(0x47);
	push_offset(L0017e);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	load_base();
	push_word(0x108);
	sub();
	store_base();
	ret();

L001b7:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x3b90);
	push_byte(0x60);
	push_word(0x520);
	mul();
	memclr();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L001cc:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L001d8:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L00237);
	call();
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x60);
	lt();
	push_offset(L001d8);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L00203:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x22794);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00231);
	jc(0x0);

L00223:
	sys1(0x5f);
	push_dword(0x22798);
	load(0x2);
	push_offset(L00223);
	jc(0x0);

L00231:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L00237:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x3b90);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L002ed);
	jc(0x1);
	push_byte(0x0);
	push_offset(L00203);
	call();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x504);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00299);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x504);
	add();
	load(0x2);
	call();

L00299:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L002a0:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	geq();
	push_offset(L002de);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x34);
	add();
	load(0x2);
	sys1(0x21);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L002a0);
	jmp();

L002de:
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	memclr();
	push_byte(0x1);
	push_offset(L00203);
	call();

L002ed:
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L002f3:
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x30);
	push_dword(0x41000001);
	move(0x2);
	push_byte(0x3);
	push_base_offset(0x28);
	sys1(0x4b);
	push_base_offset(0x1c);
	push_base_offset(0x28);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x28);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x28);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x10);
	push_byte(0x20);
	push_base_offset(0x18);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0xc);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00405);
	jc(0x1);
	push_base_offset(0x8);
	push_word(0x3b90);
	push_base_offset(0x1c);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00405);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00405);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00405);
	jc(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1f);
	lt();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_dword(0x2279c);
	load(0x2);
	bool_zero();
	bool_and();
	bool_or();
	push_offset(L00405);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x30);
	push_dword(0x41000000);
	move(0x2);

L00405:
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x30);
	load(0x2);
	sys1(0x48);
	push_base_offset(0x14);
	load(0x2);
	sys1(0x5e);
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();

L0041e:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_byte(0x2);
	push_base_offset(0x20);
	sys1(0x4b);
	push_base_offset(0x18);
	push_base_offset(0x20);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x20);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x10);
	push_byte(0x20);
	push_base_offset(0x14);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0xc);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0050f);
	jc(0x1);
	push_base_offset(0x8);
	push_word(0x3b90);
	push_base_offset(0x18);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0050f);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L0050f);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0050f);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L00503);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_offset(L0050f);
	jmp();

L00503:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);

L0050f:
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L00515:
	load_base();
	push_word(0x2148);
	add();
	store_base();
	push_base_offset(0x2148);
	push_dword(0x41000003);
	move(0x2);
	push_byte(0x2);
	push_base_offset(0x2140);
	sys1(0x4b);
	push_base_offset(0x2140);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x2138);
	move_arg(0x2);
	push_base_offset(0x2140);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x2134);
	move_arg(0x2);
	push_base_offset(0x2138);
	load(0x2);
	cmd_68();
	push_base_offset(0x2130);
	move_arg(0x2);
	push_base_offset(0x2120);
	push_byte(0x0);
	move(0x2);

L0055e:
	push_base_offset(0x2120);
	load(0x2);
	push_byte(0x1f);
	neq();
	push_base_offset(0x2120);
	load(0x2);
	push_byte(0x1f);
	push_byte(0x2);
	mul();
	neq();
	bool_and();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_dword(0x2279c);
	load(0x2);
	bool_zero();
	bool_and();
	bool_or();
	push_offset(L00b28);
	jc(0x1);
	push_base_offset(0x212c);
	push_word(0x3b90);
	push_byte(0x20);
	push_word(0x520);
	mul();
	add();
	push_base_offset(0x2120);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x212c);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00b28);
	jc(0x1);
	push_base_offset(0x212c);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00b28);
	jc(0x1);
	push_base_offset(0x2128);
	push_base_offset(0x212c);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x212c);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x58);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00b28);
	jc(0x1);
	push_base_offset(0x2108);
	push_byte(0x1);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x58);
	add();
	load(0x2);
	sys1(0xdd);
	push_offset(L00b28);
	jc(0x0);
	push_base_offset(0x2108);
	cmd_68();
	push_base_offset(0x2144);
	move_arg(0x2);
	push_base_offset(0x2144);
	load(0x2);
	push_base_offset(0x2130);
	load(0x2);
	gt();
	push_offset(L00b28);
	jc(0x0);
	push_base_offset(0x2138);
	load(0x2);
	push_base_offset(0x2108);
	push_base_offset(0x2144);
	load(0x2);
	memcmp();
	push_offset(L00b28);
	jc(0x1);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x2c);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00666);
	jc(0x1);
	push_base_offset(0x2110);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x210c);
	push_byte(0x0);
	move(0x2);
	push_offset(L006a3);
	jmp();

L00666:
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x2c);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00695);
	jc(0x1);
	push_base_offset(0x2110);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x210c);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_offset(L006a3);
	jmp();

L00695:
	push_base_offset(0x2110);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x210c);
	push_byte(0x0);
	move(0x2);

L006a3:
	push_base_offset(0x2138);
	load(0x2);
	push_base_offset(0x2108);
	push_string("%s+");
	cmd_6f();
	push_base_offset(0x2008);
	push_base_offset(0x8);
	push_string("data04xxx.arc");
	push_base_offset(0x2108);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	usr2(0xf0);
	push_base_offset(0x2144);
	move_arg(0x2);
	push_base_offset(0x2144);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00b28);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x10);
	mul();
	sys1(0x20);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x211c);
	push_byte(0x0);
	move(0x2);

L006fa:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x211c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x211c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x2008);
	push_base_offset(0x211c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x211c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x2110);
	load(0x2);
	push_base_offset(0x2008);
	push_base_offset(0x211c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	mul();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x211c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x210c);
	load(0x2);
	push_base_offset(0x2008);
	push_base_offset(0x211c);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	mul();
	move(0x2);
	push_base_offset(0x211c);
	push_base_offset(0x211c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x211c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	lt();
	push_offset(L006fa);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	sys1(0x21);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x30);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x34);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x44);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x48);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2118);
	push_byte(0x0);
	move(0x2);

L008b2:
	push_base_offset(0x2118);
	load(0x2);
	push_base_offset(0x212c);
	load(0x2);
	push_word(0x4c8);
	add();
	load(0x2);
	geq();
	push_offset(L00b28);
	jc(0x0);
	push_base_offset(0x2124);
	push_base_offset(0x212c);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x212c);
	load(0x2);
	push_word(0x4cc);
	add();
	push_base_offset(0x2118);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x2c);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0091c);
	jc(0x1);
	push_base_offset(0x2110);
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x210c);
	push_byte(0x0);
	move(0x2);
	push_offset(L00959);
	jmp();

L0091c:
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x2c);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0094b);
	jc(0x1);
	push_base_offset(0x2110);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x210c);
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_offset(L00959);
	jmp();

L0094b:
	push_base_offset(0x2110);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x210c);
	push_byte(0x0);
	move(0x2);

L00959:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x10);
	mul();
	sys1(0x20);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x2114);
	push_byte(0x0);
	move(0x2);

L00972:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x2114);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x2114);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x2008);
	push_base_offset(0x2114);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x2114);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x2110);
	load(0x2);
	push_base_offset(0x2008);
	push_base_offset(0x2114);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	mul();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x2114);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x210c);
	load(0x2);
	push_base_offset(0x2008);
	push_base_offset(0x2114);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x2128);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	mul();
	move(0x2);
	push_base_offset(0x2114);
	push_base_offset(0x2114);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2114);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	lt();
	push_offset(L00972);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	sys1(0x21);
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x30);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x34);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x44);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2124);
	load(0x2);
	push_byte(0x48);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2118);
	push_base_offset(0x2118);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L008b2);
	jmp();

L00b28:
	push_base_offset(0x2120);
	push_base_offset(0x2120);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2120);
	load(0x2);
	push_byte(0x20);
	push_byte(0x2);
	mul();
	lt();
	push_offset(L0055e);
	jc(0x0);
	push_base_offset(0x2148);
	push_dword(0x41000002);
	move(0x2);
	push_base_offset(0x2134);
	load(0x2);
	push_base_offset(0x2148);
	load(0x2);
	sys1(0x48);
	push_base_offset(0x2134);
	load(0x2);
	sys1(0x5e);
	load_base();
	push_word(0x2148);
	sub();
	store_base();
	ret();

L00b69:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00b75:
	push_base_offset(0xc);
	push_word(0x3b90);
	push_byte(0x20);
	push_word(0x520);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00c1b);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00c1b);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00c1b);
	jc(0x1);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00c1b);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00c0f);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_offset(L00c1b);
	jmp();

L00c0f:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);

L00c1b:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	push_byte(0x2);
	mul();
	lt();
	push_offset(L00b75);
	jc(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L00c3e:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	sys1(0x49);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_offset(L00237);
	call();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L00c59:
	load_base();
	push_word(0x5e8);
	add();
	store_base();
	push_base_offset(0x5e8);
	push_dword(0x41000005);
	move(0x2);
	push_byte(0x2);
	push_base_offset(0x5dc);
	sys1(0x4b);
	push_base_offset(0x5d4);
	push_base_offset(0x5dc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x5d0);
	push_base_offset(0x5dc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x5cc);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x5d4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x5cc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L010dd);
	jc(0x1);
	push_base_offset(0x5c8);
	push_dword(0x9fab8);
	push_dword(0x1b4d4);
	add();
	push_base_offset(0x5d4);
	load(0x2);
	push_word(0x94);
	mul();
	add();
	push_word(0x94);
	memcpy();
	push_base_offset(0x5c8);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L010dd);
	jc(0x1);
	push_base_offset(0x534);
	push_word(0x2000);
	push_base_offset(0x5d4);
	load(0x2);
	push_byte(0x20);
	mul();
	add();
	move(0x2);
	push_base_offset(0x5c8);
	push_word(0x90);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_base_offset(0x5c8);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x2);
	sub();
	push_base_offset(0x5c8);
	push_byte(0xc);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x530);
	move_arg(0x2);
	push_base_offset(0x530);
	load(0x2);
	push_byte(0x10);
	mul();
	sys1(0x20);
	push_base_offset(0x52c);
	move_arg(0x2);
	push_base_offset(0x5e0);
	push_byte(0x0);
	move(0x2);

L00d30:
	push_base_offset(0x52c);
	load(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x534);
	load(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x52c);
	load(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x5c8);
	push_byte(0x10);
	add();
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x52c);
	load(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x52c);
	load(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5e0);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	push_base_offset(0x5c8);
	push_byte(0xc);
	add();
	load(0x2);
	lt();
	push_offset(L00d30);
	jc(0x0);
	push_base_offset(0x528);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L00dcf:
	push_base_offset(0x528);
	push_base_offset(0x528);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	push_base_offset(0x530);
	load(0x2);
	lt();
	push_offset(L00e6f);
	jc(0x1);
	push_base_offset(0x52c);
	load(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x534);
	load(0x2);
	push_base_offset(0x528);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x52c);
	load(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x5c8);
	push_byte(0x10);
	add();
	push_base_offset(0x528);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x52c);
	load(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x52c);
	load(0x2);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5e0);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00dcf);
	jmp();

L00e6f:
	push_base_offset(0x524);
	push_byte(0x0);
	push_base_offset(0x5d4);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x524);
	load(0x2);
	push_byte(0x1);
	push_offset(L00237);
	call();
	push_base_offset(0x520);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0xc);
	add();
	push_dword(0x42868);
	push_base_offset(0x5d4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x10);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x520);
	push_word(0x504);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_word(0x508);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_word(0x50c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_word(0x510);
	add();
	push_base_offset(0x5d4);
	load(0x2);
	move(0x2);
	push_base_offset(0x520);
	push_word(0x514);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x520);
	push_word(0x518);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_word(0x518);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x14);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x14);
	add();
	push_base_offset(0x52c);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	grp1(0x16);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0xc);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x5cc);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0xc);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x5cc);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x30);
	add();
	push_base_offset(0x530);
	load(0x2);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x34);
	add();
	push_base_offset(0x52c);
	load(0x2);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x3c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x40);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x44);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x48);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x4c);
	add();
	push_base_offset(0x5c8);
	push_word(0x90);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x50);
	add();
	push_base_offset(0x5c8);
	push_word(0x90);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x54);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x58);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x520);
	push_byte(0x18);
	add();
	push_byte(0x0);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x5c);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x524);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_base_offset(0x520);
	push_word(0x520);
	memcpy();
	push_base_offset(0x5e8);
	push_dword(0x41000004);
	move(0x2);

L010dd:
	push_base_offset(0x5d0);
	load(0x2);
	push_base_offset(0x5e8);
	load(0x2);
	sys1(0x48);
	push_base_offset(0x5d0);
	load(0x2);
	sys1(0x5e);
	load_base();
	push_word(0x5e8);
	sub();
	store_base();
	ret();

L010f7:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	sys1(0x49);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_byte(0x1);
	push_offset(L00237);
	call();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L01115:
	load_base();
	push_word(0xed8);
	add();
	store_base();
	push_base_offset(0xed8);
	push_dword(0x41000007);
	move(0x2);
	push_byte(0x7);
	push_base_offset(0xec8);
	sys1(0x4b);
	push_base_offset(0xeac);
	push_base_offset(0xec8);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xea8);
	push_base_offset(0xec8);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xea4);
	push_base_offset(0xec8);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xea0);
	push_base_offset(0xec8);
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xe9c);
	push_base_offset(0xec8);
	push_byte(0x4);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xe98);
	push_base_offset(0xec8);
	push_byte(0x5);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xe94);
	push_base_offset(0xec8);
	push_byte(0x6);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x5e0);
	push_base_offset(0xea8);
	load(0x2);
	push_byte(0x20);
	sub();
	move(0x2);
	push_base_offset(0xe90);
	push_dword(0x8e1cc);
	push_base_offset(0x5e0);
	load(0x2);
	push_word(0x8b0);
	mul();
	add();
	push_word(0x8b0);
	memcpy();
	push_base_offset(0xe90);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L019e9);
	jc(0x1);
	push_base_offset(0x5c8);
	push_byte(0x0);
	push_byte(0x4);
	push_byte(0x5);
	cmd_0c(0x2, 0x3);
	push_base_offset(0x5dc);
	push_dword(0x9f7cc);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x10);
	memcpy();
	push_base_offset(0x5dc);
	push_byte(0x4);
	add();
	push_base_offset(0x5c8);
	push_base_offset(0x5dc);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x5cc);
	push_dword(0x9f9cc);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xeac);
	load(0x2);
	push_byte(0x1);
	push_offset(L00237);
	call();
	push_base_offset(0x5b8);
	push_word(0x520);
	memclr();
	push_base_offset(0x5b8);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x5b8);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5b8);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5b8);
	push_byte(0xc);
	add();
	push_base_offset(0xea4);
	load(0x2);
	move(0x2);
	push_base_offset(0x5b8);
	push_byte(0x10);
	add();
	push_base_offset(0xea0);
	load(0x2);
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x498);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x49c);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x4f0);
	add();
	push_base_offset(0x5dc);
	push_byte(0x10);
	memcpy();
	push_base_offset(0x5b8);
	push_word(0x500);
	add();
	push_base_offset(0x5cc);
	load(0x2);
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x504);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x508);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x50c);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x510);
	add();
	push_base_offset(0xea8);
	load(0x2);
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x514);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x518);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x518);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x60);
	memclr();
	push_base_offset(0xed0);
	push_byte(0x0);
	move(0x2);

L01308:
	push_base_offset(0xed0);
	load(0x2);
	push_base_offset(0xe90);
	push_byte(0xc);
	add();
	load(0x2);
	geq();
	push_offset(L019cb);
	jc(0x0);
	push_base_offset(0xe90);
	push_byte(0x10);
	add();
	push_base_offset(0xed0);
	load(0x2);
	push_word(0xb8);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L019ba);
	jc(0x1);
	push_base_offset(0x38);
	push_base_offset(0xe90);
	push_byte(0x10);
	add();
	push_base_offset(0xed0);
	load(0x2);
	push_word(0xb8);
	mul();
	add();
	move(0x2);
	push_base_offset(0x34);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0xe9c);
	load(0x2);
	push_base_offset(0xed0);
	load(0x2);
	add();
	grp1(0x16);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x1);
	lt();
	push_byte(0x1);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L013c6);
	jc(0x1);
	push_base_offset(0x2c);
	push_byte(0x8);
	add();
	push_base_offset(0x2c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x2c);
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_offset(L01414);
	jmp();

L013c6:
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01406);
	jc(0x1);
	push_base_offset(0x2c);
	push_byte(0xc);
	add();
	push_base_offset(0x2c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	push_base_offset(0x2c);
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_offset(L01414);
	jmp();

L01406:
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L01414:
	push_base_offset(0xe98);
	load(0x2);
	push_base_offset(0xed0);
	load(0x2);
	add();
	push_base_offset(0x2c);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x2c);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x3);
	eq();
	bool_or();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x6);
	eq();
	bool_or();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x2);
	sub();
	push_base_offset(0x14);
	load(0x2);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x4);
	eq();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x7);
	eq();
	bool_or();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x8);
	load(0x2);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	sys1(0x20);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0xecc);
	push_byte(0x0);
	move(0x2);

L014b6:
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xe9c);
	load(0x2);
	push_base_offset(0xed0);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x2c);
	add();
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	ternary();
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0xecc);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	mul();
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0xecc);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	mul();
	move(0x2);
	push_base_offset(0xecc);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	lt();
	push_offset(L014b6);
	jc(0x0);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x3);
	eq();
	bool_or();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x6);
	eq();
	bool_or();
	push_offset(L01678);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L015ac:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	lt();
	push_offset(L016fb);
	jc(0x1);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xe9c);
	load(0x2);
	push_base_offset(0xed0);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x2c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	ternary();
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	mul();
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	mul();
	move(0x2);
	push_base_offset(0xecc);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L015ac);
	jmp();

L01678:
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x4);
	eq();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x7);
	eq();
	bool_or();
	push_offset(L016fb);
	jc(0x1);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xe9c);
	load(0x2);
	push_base_offset(0xed0);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xecc);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);

L016fb:
	push_base_offset(0x98);
	push_byte(0x0);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x2);
	geq();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x3);
	neq();
	bool_and();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x4);
	neq();
	bool_and();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x6);
	neq();
	bool_and();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x7);
	neq();
	bool_and();
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x14);
	add();
	push_base_offset(0x2c);
	push_byte(0x18);
	memcpy();
	push_base_offset(0x98);
	push_byte(0xc);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0xc);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x2c);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x30);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x34);
	add();
	push_base_offset(0x30);
	load(0x2);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x38);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x3c);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x40);
	add();
	push_base_offset(0xe98);
	load(0x2);
	push_base_offset(0xed0);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x44);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x48);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x4c);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x50);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x4);
	neq();
	bool_and();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x7);
	neq();
	bool_and();
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x54);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x3);
	eq();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x6);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x58);
	add();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x5c);
	add();
	push_base_offset(0xed0);
	load(0x2);
	move(0x2);
	push_base_offset(0x98);
	push_byte(0x50);
	add();
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x5b8);
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x5b8);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L018da);
	jc(0x1);
	push_base_offset(0x5b8);
	push_word(0x498);
	add();
	push_base_offset(0x5b8);
	push_byte(0x14);
	add();
	load(0x2);
	move(0x2);
	push_offset(L0198f);
	jmp();

L018da:
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L01901);
	jc(0x1);
	push_base_offset(0x5b8);
	push_word(0x49c);
	add();
	push_base_offset(0x5b8);
	push_byte(0x14);
	add();
	load(0x2);
	move(0x2);
	push_offset(L0198f);
	jmp();

L01901:
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x6);
	eq();
	push_offset(L0194a);
	jc(0x1);
	push_base_offset(0x5b8);
	push_word(0x4a4);
	add();
	push_base_offset(0x5b8);
	push_word(0x4a0);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x5b8);
	push_byte(0x14);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x4a0);
	add();
	push_base_offset(0x5b8);
	push_word(0x4a0);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L0198f);
	jmp();

L0194a:
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x7);
	eq();
	push_offset(L0198f);
	jc(0x1);
	push_base_offset(0x5b8);
	push_word(0x4cc);
	add();
	push_base_offset(0x5b8);
	push_word(0x4c8);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x5b8);
	push_byte(0x14);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x5b8);
	push_word(0x4c8);
	add();
	push_base_offset(0x5b8);
	push_word(0x4c8);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L0198f:
	push_base_offset(0x5b8);
	push_byte(0x18);
	add();
	push_base_offset(0x5b8);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	push_base_offset(0x98);
	push_byte(0x60);
	memcpy();
	push_base_offset(0x5b8);
	push_byte(0x14);
	add();
	push_base_offset(0x5b8);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L019ba:
	push_base_offset(0xed0);
	push_base_offset(0xed0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L01308);
	jmp();

L019cb:
	push_word(0x3b90);
	push_base_offset(0xeac);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_base_offset(0x5b8);
	push_word(0x520);
	memcpy();
	push_base_offset(0xed8);
	push_dword(0x41000006);
	move(0x2);

L019e9:
	push_base_offset(0xe94);
	load(0x2);
	push_base_offset(0xed8);
	load(0x2);
	sys1(0x48);
	push_base_offset(0xe94);
	load(0x2);
	sys1(0x5e);
	load_base();
	push_word(0xed8);
	sub();
	store_base();
	ret();

L01a03:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	sys1(0x49);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_offset(L00237);
	call();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
