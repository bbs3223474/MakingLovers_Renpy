	load_base();
	push_word(0x84);
	add();
	store_base();
	push_base_offset(0x84);
	move_arg(0x2);
	push_base_offset(0x80);
	push_offset(L0005a);
	push_offset(L0014b);
	push_offset(L0016a);
	push_offset(L0018b);
	push_offset(L001c0);
	push_offset(L00254);
	push_offset(L0026b);
	push_offset(L00471);
	push_offset(L0052e);
	push_offset(L0053e);
	push_offset(L00601);
	push_offset(L0061e);
	push_offset(L008ee);
	push_offset(L00a14);
	push_offset(L00a84);
	push_offset(L00b99);
	push_offset(L00bc7);
	cmd_0c(0x2, 0x11);
	push_base_offset(0x80);
	push_base_offset(0x84);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	load_base();
	push_word(0x84);
	sub();
	store_base();
	ret();

L0005a:
	load_base();
	push_word(0xa8);
	add();
	store_base();
	push_base_offset(0xa8);
	move_arg(0x2);
	push_base_offset(0xa0);
	push_word(0xb4);
	push_word(0x87);
	push_byte(0x5a);
	push_byte(0x3c);
	push_byte(0x28);
	push_byte(0x19);
	push_byte(0xf);
	push_byte(0xa);
	push_byte(0x5);
	push_byte(0x0);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x78);
	push_word(0x96);
	push_word(0x96);
	push_word(0x96);
	push_word(0x96);
	push_word(0x96);
	push_word(0x96);
	push_word(0x96);
	push_word(0x96);
	push_word(0x96);
	push_byte(0x0);
	cmd_0c(0x2, 0xa);
	push_base_offset(0xa0);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x2);
	div();
	grp1(0x94);
	push_base_offset(0xa0);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	div();
	push_base_offset(0x78);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x8);
	push_byte(0x64);
	mul();
	push_byte(0x1a);
	push_byte(0x1);
	sub();
	add();
	push_byte(0x1a);
	div();
	push_byte(0x10);
	push_byte(0x1);
	grp2(0x98);
	push_base_offset(0x50);
	push_byte(0x8);
	push_byte(0x7);
	push_byte(0x7);
	push_byte(0x6);
	push_byte(0x6);
	push_byte(0x5);
	push_byte(0x5);
	push_byte(0x4);
	push_byte(0x4);
	push_byte(0x1);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x28);
	push_byte(0x19);
	push_byte(0x19);
	push_byte(0x19);
	push_byte(0x19);
	push_byte(0x19);
	push_byte(0x19);
	push_byte(0x19);
	push_byte(0x19);
	push_byte(0xc);
	push_byte(0x0);
	cmd_0c(0x2, 0xa);
	push_base_offset(0x50);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x28);
	push_base_offset(0xa8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x96);
	push_byte(0x8);
	push_byte(0x32);
	grp1(0x95);
	load_base();
	push_word(0xa8);
	sub();
	store_base();
	ret();

L0014b:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0xa);
	push_base_offset(0x4);
	load(0x2);
	sub();
	push_byte(0x1);
	sub();
	push_word(0x1f4);
	mul();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L0016a:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x97);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0018b:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x6);
	push_byte(0x7);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0xc);
	load(0x2);
	sys1(0x60);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L001c0:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00211);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L001fd);
	jc(0x1);
	push_base_offset(0x8);
	push_word(0x500);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x2d0);
	move(0x2);
	push_offset(L00242);
	jmp();

L001fd:
	push_base_offset(0x8);
	push_word(0x400);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x240);
	move(0x2);
	push_offset(L00242);
	jmp();

L00211:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00232);
	jc(0x1);
	push_base_offset(0x8);
	push_word(0x500);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x3c0);
	move(0x2);
	push_offset(L00242);
	jmp();

L00232:
	push_base_offset(0x8);
	push_word(0x400);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x300);
	move(0x2);

L00242:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	sys2(0x64);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L00254:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	sys2(0x63);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L0026b:
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x80);
	push_base_offset(0x34);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	sub();
	push_byte(0x0);
	sub();
	move(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L0033e:
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_base_offset(0x2c);
	load(0x2);
	snd1(0x8);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	sub();
	push_offset(L0033e);
	jc(0x5);
	push_base_offset(0x1c);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L003a5:
	push_byte(0x9);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	snd1(0x8);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	sub();
	push_offset(L003a5);
	jc(0x5);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L003fa:
	push_byte(0x4);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_base_offset(0x24);
	load(0x2);
	snd1(0x8);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x2);
	lt();
	push_offset(L003fa);
	jc(0x0);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L0042a:
	push_byte(0x3e);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_base_offset(0x14);
	load(0x2);
	snd1(0x9);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x2);
	lt();
	push_offset(L0042a);
	jc(0x0);
	push_byte(0x4e);
	push_byte(0x0);
	add();
	push_base_offset(0x14);
	load(0x2);
	snd1(0x9);
	push_byte(0x4e);
	push_byte(0x3);
	add();
	push_base_offset(0x1c);
	load(0x2);
	snd1(0x9);
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();

L00471:
	load_base();
	push_word(0x8c);
	add();
	store_base();
	push_base_offset(0x88);
	move_arg(0x2);
	push_base_offset(0x8c);
	move_arg(0x2);
	push_base_offset(0x84);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0xd);
	move(0x2);
	push_base_offset(0x84);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x20);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x84);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x64);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x8);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x64);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x44);
	push_byte(0x26);
	push_byte(0x21);
	push_byte(0x0);
	cmd_0c(0x2, 0x3);
	push_base_offset(0x24);
	push_byte(0x28);
	push_byte(0x22);
	push_byte(0x0);
	cmd_0c(0x2, 0x3);
	push_word(0x100);
	push_base_offset(0x84);
	sys1(0x1b);
	push_word(0x200);
	push_base_offset(0x64);
	sys1(0x1b);
	push_word(0x1000);
	push_base_offset(0x44);
	sys1(0x1b);
	push_word(0x2000);
	push_base_offset(0x24);
	sys1(0x1b);
	load_base();
	push_word(0x8c);
	sub();
	store_base();
	ret();

L0052e:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L0053e:
	load_base();
	push_byte(0x40);
	add();
	store_base();
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_offset(L0026b);
	call();
	load_base();
	push_byte(0x40);
	sub();
	store_base();
	ret();

L00601:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_word(0xfa);
	push_byte(0x4);
	div();
	usr2(0x4f);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L0061e:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_byte(0x0);
	push_offset(L00637);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("builddata._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);

L00637:
	push_byte(0x0);
	push_byte(0x0);
	add();
	push_byte(0x3);
	push_string("data03xxx.arc");
	push_string("SYS_CLICK");
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00724);
	call();
	push_byte(0x0);
	push_byte(0xc);
	add();
	push_byte(0x3);
	push_string("data03xxx.arc");
	push_string("SYS_GAMESTART");
	push_string("SYS_CLICK");
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00724);
	call();
	push_byte(0x0);
	push_byte(0x3);
	add();
	push_byte(0x3);
	push_string("data03xxx.arc");
	push_string("SYS_CANCEL");
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00724);
	call();
	push_byte(0x0);
	push_byte(0x8);
	add();
	push_byte(0x4);
	push_string("data03xxx.arc");
	push_string("SYS_SELECT");
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00724);
	call();
	push_byte(0x0);
	push_byte(0x1b);
	add();
	push_byte(0x3);
	push_string("data03xxx.arc");
	push_string("SYS_MAP_CLICK");
	push_string("SYS_CLICK");
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00724);
	call();
	push_byte(0x0);
	push_byte(0x1e);
	add();
	push_byte(0x3);
	push_string("data03xxx.arc");
	push_string("SYS_MAP_CLICK1");
	push_string("SYS_CLICK");
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00724);
	call();
	push_byte(0x0);
	push_byte(0x21);
	add();
	push_byte(0x3);
	push_string("data03xxx.arc");
	push_string("SYS_MAP_CLICK2");
	push_string("SYS_CLICK");
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00724);
	call();
	push_byte(0x0);
	push_byte(0x24);
	add();
	push_byte(0x3);
	push_string("data03xxx.arc");
	push_string("SYS_MAP_CANCEL");
	push_string("SYS_CANCEL");
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00724);
	call();
	push_byte(0x0);
	push_byte(0x27);
	add();
	push_byte(0x4);
	push_string("data03xxx.arc");
	push_string("SYS_MAP_SELECT");
	push_string("SYS_SELECT");
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00724);
	call();
	push_byte(0x0);
	push_offset(L0071e);
	jc(0x1);
	sys1(0x41);

L0071e:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L00724:
	load_base();
	push_word(0x340);
	add();
	store_base();
	push_base_offset(0x32c);
	move_arg(0x2);
	push_base_offset(0x330);
	move_arg(0x2);
	push_base_offset(0x334);
	move_arg(0x2);
	push_base_offset(0x338);
	move_arg(0x2);
	push_base_offset(0x33c);
	move_arg(0x2);
	push_base_offset(0x340);
	move_arg(0x2);
	push_base_offset(0x328);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x338);
	load(0x2);
	push_base_offset(0x334);
	load(0x2);
	sys1(0x35);
	push_base_offset(0x318);
	move_arg(0x2);
	push_base_offset(0x318);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L00870);
	jc(0x0);
	push_byte(0x0);
	push_offset(L008e2);
	jc(0x1);
	push_base_offset(0x32c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L007d5);
	jc(0x1);
	push_base_offset(0x310);
	push_base_offset(0x334);
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x32c);
	load(0x2);
	call();
	push_offset(L007c2);
	jc(0x0);
	push_base_offset(0x330);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L008e2);
	jc(0x1);
	push_base_offset(0x310);
	push_base_offset(0x330);
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x32c);
	load(0x2);
	call();
	push_offset(L008e2);
	jc(0x1);
	push_base_offset(0x334);
	push_base_offset(0x330);
	load(0x2);
	move(0x2);

L007c2:
	push_base_offset(0x334);
	load(0x2);
	push_byte(0x0);
	push_byte(0xc);
	push_base_offset(0x32c);
	load(0x2);
	call();
	push_offset(L00852);
	jmp();

L007d5:
	push_string("sysprg.arc");
	push_string("builddata._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x310);
	push_base_offset(0x334);
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0x324);
	move_arg(0x2);
	push_base_offset(0x324);
	load(0x2);
	push_offset(L00837);
	jc(0x0);
	push_base_offset(0x330);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00846);
	jc(0x1);
	push_base_offset(0x310);
	push_base_offset(0x330);
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0x324);
	move_arg(0x2);
	push_base_offset(0x324);
	load(0x2);
	push_offset(L00846);
	jc(0x1);
	push_base_offset(0x334);
	push_base_offset(0x330);
	load(0x2);
	move(0x2);

L00837:
	push_base_offset(0x334);
	load(0x2);
	push_byte(0x0);
	push_byte(0xc);
	push_base_offset(0x32c);
	load(0x2);
	call();

L00846:
	sys1(0x41);
	push_base_offset(0x324);
	load(0x2);
	push_offset(L008e2);
	jc(0x1);

L00852:
	push_base_offset(0x338);
	load(0x2);
	push_base_offset(0x334);
	load(0x2);
	sys1(0x35);
	push_base_offset(0x318);
	move_arg(0x2);
	push_base_offset(0x318);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L008e2);
	jc(0x1);

L00870:
	push_base_offset(0x318);
	load(0x2);
	sys1(0x20);
	push_base_offset(0x314);
	move_arg(0x2);
	push_base_offset(0x314);
	load(0x2);
	push_base_offset(0x338);
	load(0x2);
	push_base_offset(0x334);
	load(0x2);
	sys1(0x30);
	push_base_offset(0x31c);
	move_arg(0x2);
	push_base_offset(0x320);
	push_byte(0x0);
	move(0x2);

L00899:
	push_base_offset(0x340);
	load(0x2);
	push_base_offset(0x320);
	load(0x2);
	add();
	push_base_offset(0x314);
	load(0x2);
	push_byte(0x1);
	push_dword(0x10000);
	push_dword(0x10000);
	snd1(0x28);
	push_base_offset(0x320);
	push_base_offset(0x320);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x320);
	load(0x2);
	push_base_offset(0x33c);
	load(0x2);
	lt();
	push_offset(L00899);
	jc(0x0);
	push_base_offset(0x314);
	load(0x2);
	sys1(0x21);
	push_base_offset(0x328);
	push_byte(0x1);
	move(0x2);

L008e2:
	push_base_offset(0x328);
	load(0x2);
	load_base();
	push_word(0x340);
	sub();
	store_base();
	ret();

L008ee:
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x10);
	push_word(0x80);
	push_base_offset(0xc);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);

L009ab:
	push_byte(0x0);
	push_base_offset(0x14);
	load(0x2);
	add();
	push_base_offset(0x8);
	load(0x2);
	snd1(0x9);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x32);
	lt();
	push_offset(L009ab);
	jc(0x0);
	push_base_offset(0x10);
	push_word(0x80);
	push_base_offset(0xc);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0xf3);
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();

L00a14:
	load_base();
	push_byte(0x24);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x4e);
	push_byte(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	snd1(0x9);
	load_base();
	push_byte(0x24);
	sub();
	store_base();
	ret();

L00a84:
	load_base();
	push_byte(0x28);
	add();
	store_base();
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L00bdf);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x10);
	push_word(0x80);
	push_base_offset(0xc);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x14);
	push_byte(0x2);
	move(0x2);

L00b2e:
	push_byte(0x4);
	push_base_offset(0x14);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	snd1(0x8);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x5);
	lt();
	push_offset(L00b2e);
	jc(0x0);
	push_base_offset(0x14);
	push_byte(0x2);
	move(0x2);

L00b5e:
	push_byte(0x3e);
	push_base_offset(0x14);
	load(0x2);
	add();
	push_base_offset(0x8);
	load(0x2);
	snd1(0x9);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x5);
	lt();
	push_offset(L00b5e);
	jc(0x0);
	push_byte(0x4e);
	push_byte(0x1);
	add();
	push_base_offset(0x8);
	load(0x2);
	snd1(0x9);
	load_base();
	push_byte(0x28);
	sub();
	store_base();
	ret();

L00b99:
	load_base();
	push_byte(0x24);
	add();
	store_base();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x20);
	push_word(0x1388);
	push_word(0x2710);
	push_byte(0x0);
	cmd_0c(0x2, 0x3);
	push_base_offset(0x20);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	usr1(0x5);
	load_base();
	push_byte(0x24);
	sub();
	store_base();
	ret();

L00bc7:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	bool_zero();
	sys2(0x68);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L00bdf:
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x0);
	gt();
	push_byte(0x32);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x1);
	sar();
	add();
	push_byte(0x0);
	ternary();
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x38);
	load(0x2);
	push_word(0x80);
	mul();
	push_byte(0x65);
	push_byte(0x1);
	sub();
	div();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x22);
	add();
	load(0x1);
	push_offset(L00bdf);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x32);
	add();
	load(0x1);
	push_offset(L00bdf);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_byte(0x20);
	push_word(0x8e);
	add();
	load(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_byte(0x20);
	push_word(0x90);
	add();
	load(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x80);
	push_base_offset(0xc);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_word(0x80);
	div();
	push_base_offset(0x4);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	ternary();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
