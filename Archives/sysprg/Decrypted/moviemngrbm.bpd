	load_base();
	push_byte(0x20);
	add();
	store_base();
	sys1(0x46);
	push_dword(0x42768);
	push_byte(0x6);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x6);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x3ea10);
	push_byte(0x24);
	push_word(0x13c);
	mul();
	memclr();
	push_dword(0x41680);
	push_byte(0x0);
	move(0x2);

L0003e:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L003cb);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);
	push_dword(0x41680);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c);
	push_byte(0x0);
	move(0x2);

L0006f:
	push_base_offset(0xc);
	push_dword(0x3ea10);
	push_base_offset(0x1c);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0038d);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L0038d);
	jc(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x48);
	add();
	load(0x2);
	lt();
	push_offset(L0038d);
	jc(0x0);
	push_base_offset(0x8);
	push_dword(-0x1);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x48);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L000ec);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x48);
	add();
	push_base_offset(0x18);
	load(0x2);
	move(0x2);
	push_offset(L0016c);
	jmp();

L000ec:
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x48);
	add();
	load(0x2);
	sub();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4c);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	lt();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x48);
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	ternary();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x48);
	add();
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	grp1(0xf6);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0016c);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);
	push_offset(L0034e);
	jmp();

L0016c:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x48);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x48);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4c);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x40);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x10);
	add();
	load(0x2);
	mod();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x44);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0xc);
	add();
	load(0x2);
	mod();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00224);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x48);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x48);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x20);
	add();
	load(0x2);
	bool_zero();
	move(0x2);

L00224:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x2c);
	add();
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L0028c);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x2c);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x30);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x30);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	grp1(0x1e);
	push_offset(L0034e);
	jmp();

L0028c:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x40);
	gt();
	push_offset(L0034e);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x40);
	eq();
	push_offset(L002c2);
	jc(0x1);
	push_base_offset(0x14);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_offset(L0034e);
	jmp();

L002c2:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x3c);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x3c);
	add();
	load(0x2);
	push_dword(0x42868);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	sub();
	load(0x2);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_base_offset(0x8);
	load(0x2);
	push_dword(-0x1);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_dword(-0x1);
	neq();
	push_offset(L0034e);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	grp1(0x53);
	push_base_offset(0x10);
	push_byte(0x1);
	move(0x2);

L0034e:
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0038d);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	grp1(0xf5);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	memclr();
	push_base_offset(0x8);
	load(0x2);
	push_dword(-0x1);
	neq();
	push_offset(L0038d);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x7fff0000);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x38);

L0038d:
	push_base_offset(0x1c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x24);
	lt();
	push_offset(L0006f);
	jc(0x0);
	push_dword(0x41680);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	bool_or();
	push_offset(L0003e);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	grp1(0x0);
	push_offset(L0003e);
	jmp();

L003cb:
	push_base_offset(0x1c);
	push_byte(0x0);
	move(0x2);

L003d2:
	push_dword(0x3ea10);
	push_base_offset(0x1c);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00401);
	jc(0x1);
	push_dword(0x3ea10);
	push_base_offset(0x1c);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	grp1(0xf5);

L00401:
	push_base_offset(0x1c);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x24);
	lt();
	push_offset(L003d2);
	jc(0x0);
	push_dword(0x3ea10);
	push_byte(0x24);
	push_word(0x13c);
	mul();
	memclr();
	push_dword(0x42768);
	push_byte(0x6);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42768);
	push_byte(0x6);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();
