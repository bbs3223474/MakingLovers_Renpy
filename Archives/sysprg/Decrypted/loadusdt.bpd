	load_base();
	push_word(0x5e4);
	add();
	store_base();
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00196);
	jc(0x0);
	sys1(0x46);
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x5e0);
	push_word(0xacc);
	load(0x2);
	move(0x2);
	push_word(0xacc);
	push_byte(0x1);
	move(0x2);
	sys1(0x5f);
	push_base_offset(0x5dc);
	sys1(0x49);
	push_offset(L00064);
	jc(0x0);
	push_string("ユーザーデータ番号の取得に失敗した");
	cmd_79();
	push_offset(L00168);
	jmp();

L00064:
	push_string("sysprg.arc");
	push_string("userdata._bp");
	sys1(0x40);
	push_base_offset(0x5d8);
	move_arg(0x2);
	push_base_offset(0x5d4);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x5dc);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x5d8);
	load(0x2);
	call();
	push_base_offset(0x5e4);
	move_arg(0x2);
	push_base_offset(0x5e4);
	load(0x2);
	push_offset(L0009f);
	jc(0x0);
	push_string("指定されたユーザーデータは存在しません");
	usr1(0x80);
	push_offset(L000be);
	jmp();

L0009f:
	push_base_offset(0x5d4);
	push_byte(0x7);
	push_base_offset(0x5d8);
	load(0x2);
	call();
	push_base_offset(0x5e4);
	move_arg(0x2);
	push_base_offset(0x5e4);
	load(0x2);
	push_offset(L000be);
	jc(0x0);
	push_string("指定されたユーザーデータは互換性を失っているので読み込めません");
	usr1(0x80);

L000be:
	sys1(0x41);
	push_base_offset(0x5e4);
	load(0x2);
	push_offset(L00168);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x7);
	move(0x2);
	push_base_offset(0x5dc);
	load(0x2);
	push_word(0xcc);
	lt();
	push_offset(L000f2);
	jc(0x0);
	push_base_offset(0x5dc);
	load(0x2);
	push_word(0xcc);
	eq();
	push_byte(0x2);
	push_byte(0x5);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);

L000f2:
	push_string("sysprg.arc");
	push_string("yesnownd._bp");
	sys1(0x40);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	call();
	push_base_offset(0x5e4);
	move_arg(0x2);
	sys1(0x41);
	push_base_offset(0x5e4);
	load(0x2);
	push_offset(L00168);
	jc(0x1);
	push_word(0x448);
	push_byte(0x1);
	move(0x2);
	push_word(0x44c);
	push_base_offset(0x5dc);
	load(0x2);
	move(0x2);
	push_word(0x4e8);
	load(0x2);
	push_offset(L00168);
	jc(0x1);
	push_word(0x444);
	push_byte(0x1);
	move(0x2);
	push_word(0xad0);
	push_byte(0x0);
	move(0x2);
	push_word(0x504);
	push_byte(0x1);
	move(0x2);
	push_word(0x508);
	push_byte(0x1);
	move(0x2);
	push_dword(0x42764);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x4c);
	push_word(0xba4);
	push_byte(0x0);
	move(0x2);

L00168:
	push_word(0xacc);
	push_base_offset(0x5e0);
	load(0x2);
	move(0x2);
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);

L00196:
	load_base();
	push_word(0x5e4);
	sub();
	store_base();
	ret();
