	load_base();
	push_byte(0x24);
	add();
	store_base();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x20);
	push_offset(L00028);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x20);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	load_base();
	push_byte(0x24);
	sub();
	store_base();
	ret();

L00028:
	load_base();
	push_word(0x1968);
	add();
	store_base();
	push_base_offset(0x1964);
	move_arg(0x2);
	push_base_offset(0x1968);
	move_arg(0x2);
	push_base_offset(0x1960);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1968);
	load(0x2);
	push_byte(0x0);
	add();
	push_word(0x100);
	memclr();
	push_base_offset(0x1968);
	load(0x2);
	push_word(0x100);
	add();
	push_word(0x300);
	push_byte(0x4);
	mul();
	memclr();
	push_base_offset(0x1968);
	load(0x2);
	push_word(0xf00);
	add();
	push_word(0x100);
	memclr();
	push_base_offset(0x1150);
	push_base_offset(0x1968);
	load(0x2);
	push_word(0x1000);
	memcpy();
	push_byte(0x0);
	push_base_offset(0x1964);
	load(0x2);
	sys1(0x35);
	push_base_offset(0x150);
	move_arg(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L00741);
	jc(0x1);
	push_base_offset(0x150);
	load(0x2);
	sys1(0x20);
	push_base_offset(0x14c);
	move_arg(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x4);
	add();
	sys1(0x20);
	push_base_offset(0x148);
	move_arg(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x1964);
	load(0x2);
	sys1(0x30);
	push_base_offset(0x195c);
	move_arg(0x2);
	push_base_offset(0x140);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x138);
	push_byte(0x0);
	move(0x2);

L000d2:
	push_base_offset(0x140);
	push_base_offset(0x13c);
	load(0x2);
	move(0x2);

L000dc:
	push_base_offset(0x13c);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	geq();
	push_offset(L00151);
	jc(0x0);
	push_base_offset(0x14c);
	load(0x2);
	push_base_offset(0x13c);
	load(0x2);
	add();
	load(0x0);
	push_byte(0xd);
	eq();
	push_offset(L0011e);
	jc(0x1);
	push_base_offset(0x13c);
	push_base_offset(0x13c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x13c);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	geq();
	push_offset(L00151);
	jc(0x0);

L0011e:
	push_base_offset(0x14c);
	load(0x2);
	push_base_offset(0x13c);
	load(0x2);
	add();
	load(0x0);
	push_byte(0xa);
	eq();
	push_offset(L00144);
	jc(0x0);
	push_base_offset(0x13c);
	push_base_offset(0x13c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L000dc);
	jmp();

L00144:
	push_base_offset(0x13c);
	push_base_offset(0x13c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L00151:
	push_base_offset(0x130);
	push_base_offset(0x13c);
	load(0x2);
	push_base_offset(0x140);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_base_offset(0x140);
	load(0x2);
	add();
	push_base_offset(0x130);
	load(0x2);
	memcpy();
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	add();
	push_byte(0x0);
	move(0x0);
	push_base_offset(0x130);
	load(0x2);
	push_byte(0x0);
	leq();
	push_offset(L006c4);
	jc(0x0);
	push_base_offset(0x130);
	load(0x2);
	push_byte(0x2);
	geq();
	push_offset(L001d6);
	jc(0x1);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	add();
	push_byte(0x2);
	sub();
	load(0x0);
	push_byte(0xd);
	eq();
	push_byte(0x0);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	add();
	push_byte(0x2);
	sub();
	load(0x0);
	ternary();
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	add();
	push_byte(0x2);
	sub();
	move_arg(0x0);

L001d6:
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	load(0x0);
	push_byte(0xd);
	eq();
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	load(0x0);
	push_byte(0xa);
	eq();
	bool_or();
	push_byte(0x0);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	load(0x0);
	ternary();
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	move_arg(0x0);
	push_base_offset(0x148);
	load(0x2);
	load(0x0);
	push_byte(0x0);
	eq();
	push_offset(L006c4);
	jc(0x0);
	push_base_offset(0x148);
	load(0x2);
	cmd_68();
	push_base_offset(0x130);
	move_arg(0x2);
	push_base_offset(0x134);
	push_byte(0x0);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x130);
	load(0x2);
	push_offset(L0074d);
	call();
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x0);
	eq();
	push_offset(L006c4);
	jc(0x0);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	push_string("[");
	cmd_66();
	push_base_offset(0x12c);
	move_arg(0x2);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L0028e);
	jc(0x0);
	push_base_offset(0x1954);
	push_string("変数／フラグ番号の開始記号 [ が記述されていません");
	cmd_6a();
	push_offset(L006f5);
	jmp();

L0028e:
	push_base_offset(0xc);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x134);
	push_base_offset(0x134);
	load(0x2);
	push_base_offset(0x12c);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	push_string("]");
	cmd_66();
	push_base_offset(0x128);
	move_arg(0x2);
	push_base_offset(0x128);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L002dd);
	jc(0x0);
	push_base_offset(0x1954);
	push_string("変数／フラグ番号の終端記号 ] が記述されていません");
	cmd_6a();
	push_offset(L006f5);
	jmp();

L002dd:
	push_base_offset(0x8);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x134);
	push_base_offset(0x134);
	load(0x2);
	push_base_offset(0x128);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	push_string("=");
	cmd_66();
	push_base_offset(0x195c);
	move_arg(0x2);
	push_base_offset(0x195c);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L0032c);
	jc(0x0);
	push_base_offset(0x1954);
	push_string("代入記号 = が記述されていません");
	cmd_6a();
	push_offset(L006f5);
	jmp();

L0032c:
	push_base_offset(0x4);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	push_base_offset(0x195c);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x134);
	push_base_offset(0x134);
	load(0x2);
	push_base_offset(0x195c);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x124);
	push_base_offset(0x130);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_string("lwrk");
	push_byte(0x4);
	memcmp();
	push_offset(L0038b);
	jc(0x1);
	push_base_offset(0x11c);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x118);
	push_word(0x200);
	move(0x2);
	push_offset(L00420);
	jmp();

L0038b:
	push_base_offset(0xc);
	load(0x2);
	push_string("lflg");
	push_byte(0x4);
	memcmp();
	push_offset(L003ae);
	jc(0x1);
	push_base_offset(0x11c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x118);
	push_word(0x800);
	move(0x2);
	push_offset(L00420);
	jmp();

L003ae:
	push_base_offset(0xc);
	load(0x2);
	push_string("gwrk");
	push_byte(0x4);
	memcmp();
	push_offset(L003d0);
	jc(0x1);
	push_base_offset(0x11c);
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x118);
	push_byte(0x40);
	move(0x2);
	push_offset(L00420);
	jmp();

L003d0:
	push_base_offset(0xc);
	load(0x2);
	push_string("gflg");
	push_byte(0x4);
	memcmp();
	push_offset(L003f3);
	jc(0x1);
	push_base_offset(0x11c);
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x118);
	push_word(0x800);
	move(0x2);
	push_offset(L00420);
	jmp();

L003f3:
	push_base_offset(0xc);
	load(0x2);
	push_string("lstr");
	push_byte(0x4);
	memcmp();
	push_offset(L00415);
	jc(0x1);
	push_base_offset(0x11c);
	push_byte(0x4);
	move(0x2);
	push_base_offset(0x118);
	push_byte(0x10);
	move(0x2);
	push_offset(L00420);
	jmp();

L00415:
	push_base_offset(0x1954);
	push_string("変数／フラグが記述されていません");
	cmd_6a();
	push_offset(L006f5);
	jmp();

L00420:
	push_base_offset(0x134);
	push_base_offset(0x1958);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x128);
	load(0x2);
	push_offset(L0074d);
	call();
	push_base_offset(0x120);
	push_base_offset(0x1958);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x120);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L0045c);
	jc(0x0);
	push_base_offset(0x1954);
	push_string("変数／フラグ番号が記述されていません");
	cmd_6a();
	push_offset(L006f5);
	jmp();

L0045c:
	push_base_offset(0x114);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	push_base_offset(0x120);
	load(0x2);
	push_offset(L00908);
	call();
	push_base_offset(0x195c);
	move_arg(0x2);
	push_base_offset(0x195c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L004a6);
	jc(0x0);
	push_base_offset(0x195c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_string("変数／フラグ番号が記述されていません");
	push_string("変数／フラグ番号の中に数字ではない文字が記述されています");
	ternary();
	push_base_offset(0x1154);
	move_arg(0x2);
	push_base_offset(0x1954);
	push_base_offset(0x1154);
	load(0x2);
	cmd_6a();
	push_offset(L006f5);
	jmp();

L004a6:
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x114);
	load(0x2);
	push_base_offset(0x118);
	load(0x2);
	lt();
	bool_and();
	push_offset(L004ec);
	jc(0x0);
	push_base_offset(0x1554);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	memcpy();
	push_base_offset(0x1554);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x0);
	push_base_offset(0x118);
	load(0x2);
	push_byte(0x1);
	sub();
	push_byte(0x0);
	push_base_offset(0x1554);
	push_base_offset(0x1954);
	push_string("指定された [ %s ] の番号は [ %d ] ～ [ %d ] の範囲で指定する必要があります");
	cmd_6f();
	push_offset(L006f5);
	jmp();

L004ec:
	push_base_offset(0x134);
	push_base_offset(0x1958);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_offset(L0074d);
	call();
	push_base_offset(0x120);
	push_base_offset(0x1958);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x120);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L00528);
	jc(0x0);
	push_base_offset(0x1954);
	push_string("代入する値が記述されていません");
	cmd_6a();
	push_offset(L006f5);
	jmp();

L00528:
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x3);
	eq();
	bool_or();
	push_offset(L00588);
	jc(0x1);
	push_base_offset(0x110);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	push_base_offset(0x120);
	load(0x2);
	push_offset(L00908);
	call();
	push_base_offset(0x195c);
	move_arg(0x2);
	push_base_offset(0x195c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00604);
	jc(0x0);
	push_base_offset(0x195c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_string("代入する値が記述されていません");
	push_string("代入する値に数字ではない文字が記述されています");
	ternary();
	push_base_offset(0x1154);
	move_arg(0x2);
	push_base_offset(0x1954);
	push_base_offset(0x1154);
	load(0x2);
	cmd_6a();
	push_offset(L006f5);
	jmp();

L00588:
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x2);
	eq();
	bool_or();
	push_offset(L005d2);
	jc(0x1);
	push_base_offset(0x144);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	push_base_offset(0x120);
	load(0x2);
	push_offset(L00b76);
	call();
	push_base_offset(0x195c);
	move_arg(0x2);
	push_base_offset(0x195c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00604);
	jc(0x0);
	push_base_offset(0x1954);
	push_string("代入する値にTRUEまたはFALSEが記述されていません");
	cmd_6a();
	push_offset(L006f5);
	jmp();

L005d2:
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L00604);
	jc(0x1);
	push_base_offset(0x10c);
	push_byte(0xf);
	push_base_offset(0x1954);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	add();
	push_base_offset(0x120);
	load(0x2);
	push_offset(L00c35);
	call();
	push_offset(L006f5);
	jc(0x1);
	push_offset(L00604);
	jmp();

L00604:
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0062c);
	jc(0x1);
	push_base_offset(0x1150);
	push_word(0x100);
	add();
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x110);
	load(0x2);
	move(0x2);
	push_offset(L006c4);
	jmp();

L0062c:
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00651);
	jc(0x1);
	push_base_offset(0x1150);
	push_byte(0x0);
	add();
	push_base_offset(0x114);
	load(0x2);
	push_base_offset(0x144);
	load(0x2);
	push_offset(L00d50);
	call();
	push_offset(L006c4);
	jmp();

L00651:
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L00679);
	jc(0x1);
	push_base_offset(0x1150);
	push_word(0xe00);
	add();
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x110);
	load(0x2);
	move(0x2);
	push_offset(L006c4);
	jmp();

L00679:
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L0069f);
	jc(0x1);
	push_base_offset(0x1150);
	push_word(0xd00);
	add();
	push_base_offset(0x114);
	load(0x2);
	push_base_offset(0x144);
	load(0x2);
	push_offset(L00d50);
	call();
	push_offset(L006c4);
	jmp();

L0069f:
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L006c4);
	jc(0x1);
	push_base_offset(0x1150);
	push_word(0xf00);
	add();
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x4);
	shl();
	add();
	push_base_offset(0x10c);
	cmd_6a();
	push_offset(L006c4);
	jmp();

L006c4:
	push_base_offset(0x13c);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	geq();
	push_offset(L006e4);
	jc(0x1);
	push_base_offset(0x1968);
	load(0x2);
	push_base_offset(0x1150);
	push_word(0x1000);
	memcpy();
	push_offset(L0071d);
	jmp();

L006e4:
	push_base_offset(0x138);
	push_base_offset(0x138);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L000d2);
	jmp();

L006f5:
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x138);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x1964);
	load(0x2);
	push_base_offset(0x1954);
	push_base_offset(0x1554);
	push_string("%s\n\n%s @ %d行目\n> %s");
	cmd_6f();
	push_base_offset(0x1554);
	usr1(0x80);
	push_base_offset(0x1960);
	push_byte(0x0);
	move(0x2);

L0071d:
	push_base_offset(0x1960);
	load(0x2);
	push_offset(L00733);
	jc(0x1);
	push_base_offset(0x1968);
	load(0x2);
	push_base_offset(0x1150);
	push_word(0x1000);
	memcpy();

L00733:
	push_base_offset(0x14c);
	load(0x2);
	sys1(0x21);
	push_base_offset(0x148);
	load(0x2);
	sys1(0x21);

L00741:
	push_base_offset(0x1960);
	load(0x2);
	load_base();
	push_word(0x1968);
	sub();
	store_base();
	ret();

L0074d:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L007f2);
	jc(0x1);

L0077a:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	geq();
	push_offset(L007e6);
	jc(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	cmd_6c();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	neq();
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x8140);
	neq();
	bool_and();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x9);
	neq();
	bool_and();
	push_offset(L007e6);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_offset(L0077a);
	jmp();

L007e6:
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L007f2:
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00902);
	jc(0x1);

L007ff:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	geq();
	push_offset(L0086b);
	jc(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	cmd_6c();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	eq();
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x8140);
	eq();
	bool_or();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x9);
	eq();
	bool_or();
	push_offset(L0086b);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_offset(L007ff);
	jmp();

L0086b:
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L00877:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	geq();
	push_offset(L00902);
	jc(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	cmd_6c();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	neq();
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x8140);
	neq();
	bool_and();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x9);
	neq();
	bool_and();
	push_offset(L008e3);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_offset(L00877);
	jmp();

L008e3:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_offset(L007ff);
	jmp();

L00902:
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L00908:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1);
	geq();
	push_offset(L0095e);
	jc(0x1);
	push_base_offset(0x1c);
	load(0x2);
	load(0x0);
	push_byte(0x2d);
	eq();
	push_offset(L0095e);
	jc(0x1);
	push_base_offset(0x14);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00969);
	jmp();

L0095e:
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_offset(L00969);
	jmp();

L00969:
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	sub();
	push_byte(0x2);
	geq();
	push_offset(L009a8);
	jc(0x1);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	push_string("0x");
	push_byte(0x2);
	memcmp();
	push_offset(L009b3);
	jc(0x0);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	push_string("0X");
	push_byte(0x2);
	memcmp();
	push_offset(L009b3);
	jc(0x0);

L009a8:
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);
	push_offset(L009c7);
	jmp();

L009b3:
	push_base_offset(0x10);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	add();
	move(0x2);

L009c7:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	lt();
	push_offset(L009e2);
	jc(0x0);
	push_base_offset(0xc);
	push_byte(0x1);
	move(0x2);
	push_offset(L00b6b);
	jmp();

L009e2:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L009e9:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	geq();
	push_offset(L00b50);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L00aec);
	jc(0x1);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x30);
	geq();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x39);
	leq();
	bool_and();
	push_offset(L00a4b);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x30);
	sub();
	add();
	move(0x2);
	push_offset(L00b3f);
	jmp();

L00a4b:
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x61);
	geq();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x66);
	leq();
	bool_and();
	push_offset(L00a96);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x61);
	sub();
	push_byte(0xa);
	add();
	add();
	move(0x2);
	push_offset(L00b3f);
	jmp();

L00a96:
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x41);
	geq();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x46);
	leq();
	bool_and();
	push_offset(L00ae1);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x41);
	sub();
	push_byte(0xa);
	add();
	add();
	move(0x2);
	push_offset(L00b3f);
	jmp();

L00ae1:
	push_base_offset(0xc);
	push_byte(0x2);
	move(0x2);
	push_offset(L00b6b);
	jmp();

L00aec:
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x30);
	geq();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x39);
	leq();
	bool_and();
	push_offset(L00b34);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x30);
	sub();
	add();
	move(0x2);
	push_offset(L00b3f);
	jmp();

L00b34:
	push_base_offset(0xc);
	push_byte(0x2);
	move(0x2);
	push_offset(L00b6b);
	jmp();

L00b3f:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L009e9);
	jmp();

L00b50:
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x4);
	load(0x2);
	ternary();
	push_base_offset(0x20);
	load(0x2);
	move_arg(0x2);

L00b6b:
	push_base_offset(0xc);
	load(0x2);
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L00b76:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	geq();
	push_offset(L00c1f);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_string("TRUE");
	push_byte(0x4);
	memcmp();
	push_offset(L00bbb);
	jc(0x1);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1);
	move(0x2);
	push_offset(L00c2a);
	jmp();

L00bbb:
	push_base_offset(0x14);
	load(0x2);
	push_string("true");
	push_byte(0x4);
	memcmp();
	push_offset(L00bd8);
	jc(0x1);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1);
	move(0x2);
	push_offset(L00c2a);
	jmp();

L00bd8:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x5);
	geq();
	push_offset(L00c1f);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_string("FALSE");
	push_byte(0x5);
	memcmp();
	push_offset(L00c02);
	jc(0x1);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_offset(L00c2a);
	jmp();

L00c02:
	push_base_offset(0x14);
	load(0x2);
	push_string("false");
	push_byte(0x5);
	memcmp();
	push_offset(L00c1f);
	jc(0x1);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_offset(L00c2a);
	jmp();

L00c1f:
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_offset(L00c2a);
	jmp();

L00c2a:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L00c35:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	load(0x0);
	push_byte(0x22);
	eq();
	push_offset(L00cf9);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	geq();
	push_offset(L00c83);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_string("ダブルクォーテーションが閉じられていません");
	cmd_6a();
	push_offset(L00d45);
	jmp();

L00c83:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	load(0x0);
	push_byte(0x22);
	eq();
	push_offset(L00ca8);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_string("ダブルクォーテーションが閉じられていません");
	cmd_6a();
	push_offset(L00d45);
	jmp();

L00ca8:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	sub();
	push_base_offset(0x14);
	load(0x2);
	leq();
	push_offset(L00ccd);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_string("代入する文字列の長さが半角%d文字を超えています");
	cmd_6f();
	push_offset(L00d45);
	jmp();

L00ccd:
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	sub();
	memcpy();
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	push_byte(0x2);
	sub();
	push_byte(0x0);
	move(0x0);
	push_offset(L00d3e);
	jmp();

L00cf9:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	leq();
	push_offset(L00d1b);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_string("代入する文字列の長さが半角%d文字を超えています");
	cmd_6f();
	push_offset(L00d45);
	jmp();

L00d1b:
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	memcpy();
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	add();
	push_byte(0x0);
	move(0x0);
	push_offset(L00d3e);
	jmp();

L00d3e:
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);

L00d45:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L00d50:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0xc);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x3);
	sar();
	add();
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x7);
	and();
	shl();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	load(0x0);
	push_base_offset(0x8);
	load(0x2);
	not();
	and();
	push_base_offset(0x4);
	load(0x2);
	or();
	move(0x0);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();
