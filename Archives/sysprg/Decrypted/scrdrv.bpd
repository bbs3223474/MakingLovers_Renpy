	load_base();
	push_word(0xf40);
	add();
	store_base();
	push_base_offset(0xf34);
	push_word(0x420);
	load(0x2);
	move(0x2);
	push_base_offset(0xc20);
	push_word(0x41c);
	load(0x2);
	move(0x2);
	push_word(0x41c);
	push_byte(0x2);
	move(0x2);
	push_base_offset(0xc1c);
	push_word(0x91c);
	load(0x2);
	move(0x2);
	push_word(0xaa4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x1);
	grp1(0xdd);

L00036:
	push_dword(0x483f0);
	load(0x2);
	push_dword(0x48400);
	load(0x2);
	bool_and();
	push_offset(L00082);
	jc(0x1);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L000bc);
	jc(0x0);
	push_dword(0x48438);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_byte(0xd);
	push_byte(0x54);
	mul();
	memcpy();
	push_dword(0x483f4);
	push_byte(0x1);
	move(0x2);
	push_dword(0x483f0);
	push_byte(0x0);
	move(0x2);
	push_offset(L00258);
	jmp();

L00082:
	push_dword(0x483f0);
	load(0x2);
	push_offset(L0017c);
	jc(0x1);
	push_dword(0x483f8);
	load(0x2);
	push_offset(L00166);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L000bc);
	jc(0x0);
	push_dword(0x48438);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_byte(0xd);
	push_byte(0x54);
	mul();
	memcpy();

L000bc:
	push_base_offset(0xc18);
	push_dword(0x9fab8);
	push_dword(0x85cc);
	add();
	push_word(0x100);
	push_byte(0x1);
	mul();
	memcpy();
	push_base_offset(0xb18);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0x200);
	push_byte(0x4);
	mul();
	memcpy();
	push_base_offset(0x318);
	push_dword(0x9fab8);
	push_dword(0x244cc);
	add();
	load(0x2);
	move(0x2);
	push_string("sysprg.arc");
	push_string("userdata._bp");
	sys1(0x40);
	push_base_offset(0xf38);
	move_arg(0x2);
	push_dword(0x48404);
	push_byte(0x4);
	push_base_offset(0xf38);
	load(0x2);
	call();
	sys1(0x41);
	push_dword(0x9fab8);
	push_dword(0x85cc);
	add();
	push_base_offset(0xc18);
	push_word(0x100);
	push_byte(0x1);
	mul();
	memcpy();
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_base_offset(0xb18);
	push_word(0x200);
	push_byte(0x4);
	mul();
	memcpy();
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_dword(0x48438);
	push_byte(0xd);
	push_byte(0x54);
	mul();
	memcpy();
	push_dword(0x9fab8);
	push_dword(0x244cc);
	add();
	push_base_offset(0x318);
	load(0x2);
	move(0x2);

L00166:
	push_dword(0x483f4);
	push_byte(0x1);
	move(0x2);
	push_dword(0x483f0);
	push_byte(0x0);
	move(0x2);
	push_offset(L00258);
	jmp();

L0017c:
	push_dword(0x483f4);
	load(0x2);
	push_dword(0x48400);
	load(0x2);
	bool_and();
	push_offset(L001a6);
	jc(0x1);
	push_dword(0x483f4);
	push_byte(0x0);
	move(0x2);
	push_dword(0x48424);
	push_byte(0x1);
	move(0x2);
	push_offset(L0084b);
	jmp();

L001a6:
	push_dword(0x483f4);
	load(0x2);
	push_offset(L00258);
	jc(0x1);
	push_base_offset(0xc18);
	push_dword(0x9fab8);
	push_dword(0x85cc);
	add();
	push_word(0x100);
	push_byte(0x1);
	mul();
	memcpy();
	push_base_offset(0xb18);
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0x200);
	push_byte(0x4);
	mul();
	memcpy();
	push_string("sysprg.arc");
	push_string("userdata._bp");
	sys1(0x40);
	push_base_offset(0xf38);
	move_arg(0x2);
	push_word(0xcf);
	push_byte(0x2);
	push_base_offset(0xf38);
	load(0x2);
	call();
	push_base_offset(0xf30);
	move_arg(0x2);
	push_base_offset(0xf2c);
	push_word(0xcf);
	push_byte(0x6);
	push_base_offset(0xf38);
	load(0x2);
	call();
	push_dword(0x4407c);
	push_base_offset(0xf2c);
	sys1(0x33);
	sys1(0x41);
	push_dword(0x9fab8);
	push_dword(0x85cc);
	add();
	push_base_offset(0xc18);
	push_word(0x100);
	push_byte(0x1);
	mul();
	memcpy();
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_base_offset(0xb18);
	push_word(0x200);
	push_byte(0x4);
	mul();
	memcpy();
	push_dword(0x483f4);
	push_byte(0x0);
	move(0x2);
	push_dword(0x48424);
	push_byte(0x1);
	move(0x2);
	push_dword(0x48430);
	push_byte(0x1);
	move(0x2);

L00258:
	push_offset(L008f5);
	call();

L0025c:
	push_byte(0x1);
	push_offset(L045a6);
	call();
	push_base_offset(0xc1c);
	move_arg(0x2);
	push_byte(0x0);
	grp1(0x9);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x9b);
	push_byte(0x20);
	push_byte(0x7a);
	add();
	push_byte(0x0);
	move(0x1);
	push_word(0x4e4);
	load(0x2);
	push_offset(L002a8);
	jc(0x0);
	push_byte(0x20);
	push_byte(0xa);
	add();
	push_byte(0x0);
	move(0x1);
	push_string("sysprg.arc");
	push_string("environ._bp");
	sys1(0x40);
	push_base_offset(0xf3c);
	move_arg(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x2);
	push_base_offset(0xf3c);
	load(0x2);
	call();
	sys1(0x41);

L002a8:
	push_dword(0x48424);
	load(0x2);
	push_offset(L002ee);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L002dc);
	jc(0x1);
	push_dword(0x483f8);
	load(0x2);
	push_offset(L002dc);
	jc(0x0);
	push_dword(0x483fc);
	load(0x2);
	push_offset(L002dc);
	jc(0x0);
	push_offset(L002ee);
	jmp();

L002dc:
	push_dword(0x48428);
	push_byte(0x0);
	move(0x2);
	push_dword(0x4842c);
	push_byte(0x0);
	move(0x2);

L002ee:
	push_offset(L00a63);
	call();
	push_offset(L00b14);
	call();
	push_offset(L0102c);
	call();
	push_base_offset(0xf40);
	push_byte(0x0);
	move(0x2);
	push_word(0x4e4);
	load(0x2);
	push_offset(L00348);
	jc(0x0);
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00348);
	jc(0x0);
	push_dword(0x42aec);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00348);
	jc(0x0);
	grp1(0x60);
	push_base_offset(0xf40);
	move_arg(0x2);
	push_base_offset(0xf40);
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_word(0xd00);
	grp1(0x65);
	push_base_offset(0xf40);
	load(0x2);
	push_byte(0x1);
	grp1(0x64);

L00348:
	push_offset(L015a9);
	call();
	push_offset(L011f2);
	call();
	push_offset(L01718);
	call();
	push_offset(L015ec);
	call();
	push_dword(0x43f44);
	load(0x2);
	call();
	push_dword(0x43f48);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x24434);
	add();
	cmd_68();
	push_offset(L00386);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x24434);
	add();
	sys1(0x66);

L00386:
	push_word(0x4e4);
	load(0x2);
	push_byte(0x0);
	push_word(0x1f4);
	ternary();
	push_base_offset(0x314);
	move_arg(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x314);
	load(0x2);
	ternary();
	push_base_offset(0x314);
	move_arg(0x2);
	push_word(0x428);
	load(0x2);
	push_word(0x42c);
	load(0x2);
	bool_or();
	push_byte(0x0);
	push_base_offset(0x314);
	load(0x2);
	ternary();
	push_base_offset(0x314);
	move_arg(0x2);
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_byte(0x0);
	push_base_offset(0x314);
	load(0x2);
	ternary();
	push_offset(L03492);
	call();
	push_base_offset(0x314);
	move_arg(0x2);
	push_dword(0x42aec);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00456);
	jc(0x1);
	push_word(0x4e4);
	load(0x2);
	push_offset(L00440);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0xc560);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00429);
	jc(0x0);
	push_word(0xaa8);
	load(0x2);
	push_base_offset(0xf2c);
	push_string("#%06X");
	cmd_6f();
	push_base_offset(0xf2c);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0x43fcc);
	load(0x2);
	call();
	push_offset(L00440);
	jmp();

L00429:
	push_dword(0x42aec);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x314);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x20);

L00440:
	push_dword(0x42aec);
	load(0x2);
	grp1(0x61);
	push_dword(0x42aec);
	push_byte(0x0);
	move(0x2);
	push_offset(L00486);
	jmp();

L00456:
	push_base_offset(0xf40);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00486);
	jc(0x1);
	push_base_offset(0xf40);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x314);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x20);
	push_base_offset(0xf40);
	load(0x2);
	grp1(0x61);
	push_base_offset(0xf40);
	push_byte(0x0);
	move(0x2);

L00486:
	push_dword(0x48424);
	load(0x2);
	push_byte(0x20);
	push_word(0x88);
	add();
	load(0x1);
	push_byte(0x3);
	neq();
	bool_and();
	push_offset(L004ec);
	jc(0x0);
	push_dword(0x483f8);
	load(0x2);
	push_offset(L004ce);
	jc(0x0);
	push_dword(0x483fc);
	load(0x2);
	push_offset(L004ce);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_byte(0x20);
	push_word(0x88);
	add();
	load(0x1);
	push_byte(0x3);
	neq();
	bool_and();
	push_offset(L004ec);
	jc(0x0);

L004ce:
	push_dword(0x9fab8);
	push_dword(0x244cc);
	add();
	load(0x2);
	push_byte(0x0);
	push_dword(-0x3);
	push_offset(L04af2);
	call();
	push_byte(0x0);
	push_offset(L04b8a);
	call();

L004ec:
	push_dword(0x48424);
	load(0x2);
	push_offset(L004fc);
	jc(0x0);
	push_offset(L02d4d);
	call();

L004fc:
	push_dword(0x483f4);
	load(0x2);
	push_offset(L00521);
	jc(0x1);
	push_dword(0x42ae8);
	load(0x2);
	push_byte(0x0);
	grp1(0x3a);
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1);
	add();
	grp1(0x3a);

L00521:
	push_dword(0x483f8);
	push_byte(0x0);
	move(0x2);
	push_dword(0x483fc);
	push_byte(0x0);
	move(0x2);
	push_string("sysprg.arc");
	push_string("scrmain._bp");
	sys1(0x40);
	push_base_offset(0x310);
	move_arg(0x2);
	push_base_offset(0x310);
	load(0x2);
	call();
	sys1(0x41);
	push_word(0x4e4);
	load(0x2);
	push_byte(0x0);
	push_word(0x1f4);
	ternary();
	push_base_offset(0x314);
	move_arg(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x314);
	load(0x2);
	ternary();
	push_base_offset(0x314);
	move_arg(0x2);
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_byte(0x0);
	push_base_offset(0x314);
	load(0x2);
	ternary();
	push_offset(L03492);
	call();
	push_base_offset(0x314);
	move_arg(0x2);
	push_word(0x4e4);
	load(0x2);
	push_offset(L00637);
	jc(0x0);
	push_byte(0x0);
	push_offset(L00637);
	jc(0x0);
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00637);
	jc(0x0);
	push_dword(0x42af4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00637);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L005e2);
	jc(0x1);
	push_word(0x440);
	load(0x2);
	push_offset(L005e2);
	jc(0x0);
	push_word(0x448);
	load(0x2);
	push_offset(L005e2);
	jc(0x0);
	push_word(0x7cc);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L005e2);
	jc(0x0);
	push_offset(L00637);
	jmp();

L005e2:
	grp1(0x60);
	push_dword(0x42aec);
	move_arg(0x2);
	push_word(0x4e4);
	load(0x2);
	push_byte(0x0);
	push_word(0xaa4);
	load(0x2);
	ternary();
	push_word(0xaa8);
	move_arg(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0xaa8);
	load(0x2);
	ternary();
	push_word(0xaa8);
	move_arg(0x2);
	push_dword(0x42aec);
	load(0x2);
	push_word(0xaa8);
	load(0x2);
	push_byte(0x0);
	push_word(0xd00);
	grp1(0x65);
	push_dword(0x42aec);
	load(0x2);
	push_word(0x100);
	push_base_offset(0x314);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x20);

L00637:
	push_word(0x508);
	push_byte(0x0);
	move(0x2);
	push_offset(L0169b);
	call();
	push_offset(L02df0);
	call();
	push_offset(L0150e);
	call();
	grp3(0x15);
	push_word(0x4e4);
	load(0x2);
	push_offset(L00682);
	jc(0x0);
	push_byte(0x0);
	push_offset(L00682);
	jc(0x0);
	push_word(0x440);
	load(0x2);
	push_offset(L00682);
	jc(0x0);
	push_word(0x448);
	load(0x2);
	push_offset(L00682);
	jc(0x0);
	push_word(0x7cc);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00682);
	jc(0x0);
	push_offset(L006a3);
	jmp();

L00682:
	push_dword(0x42aec);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L006a3);
	jc(0x1);
	push_dword(0x42aec);
	load(0x2);
	grp1(0x61);
	push_dword(0x42aec);
	push_byte(0x0);
	move(0x2);

L006a3:
	push_offset(L011b5);
	call();
	push_word(0x4e4);
	load(0x2);
	push_offset(L006bf);
	jc(0x0);
	push_base_offset(0x30c);
	push_byte(0x0);
	sys1(0x3d);
	push_base_offset(0x30c);
	sys1(0x39);
	sys1(0x81);

L006bf:
	push_word(0x4e4);
	load(0x2);
	push_offset(L00700);
	jc(0x0);
	push_byte(0x0);
	push_offset(L00700);
	jc(0x0);
	push_dword(0x42af4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00700);
	jc(0x0);
	push_dword(0x483f0);
	load(0x2);
	push_offset(L00700);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L00700);
	jc(0x0);
	push_word(0x1f4);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);

L00700:
	push_word(0x4e4);
	load(0x2);
	push_offset(L00808);
	jc(0x0);
	push_byte(0x20);
	push_byte(0xa);
	add();
	push_byte(0x0);
	move(0x1);
	push_string("sysprg.arc");
	push_string("environ._bp");
	sys1(0x40);
	push_base_offset(0xf3c);
	move_arg(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x2);
	push_base_offset(0xf3c);
	load(0x2);
	call();
	push_byte(0x20);
	push_word(0x8e);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x22);
	add();
	load(0x1);
	push_byte(0x20);
	push_word(0x90);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x24);
	add();
	load(0x1);
	push_byte(0x20);
	push_word(0x92);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x26);
	add();
	load(0x1);
	push_byte(0x20);
	push_word(0x94);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x28);
	add();
	load(0x1);
	push_byte(0x20);
	push_word(0x96);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x2a);
	add();
	load(0x1);
	push_byte(0x1);
	push_byte(0x9);
	push_base_offset(0xf3c);
	load(0x2);
	call();
	push_byte(0x20);
	push_word(0x8e);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x22);
	add();
	load(0x1);
	push_byte(0x20);
	push_word(0x96);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x30);
	add();
	load(0x1);
	push_byte(0x20);
	push_word(0x90);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x32);
	add();
	load(0x1);
	push_byte(0xc);
	push_base_offset(0xf3c);
	load(0x2);
	call();
	push_byte(0x20);
	push_word(0x8e);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x22);
	add();
	load(0x1);
	push_byte(0x20);
	push_word(0x9a);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x2e);
	add();
	load(0x1);
	push_byte(0x1);
	push_byte(0xd);
	push_base_offset(0xf3c);
	load(0x2);
	call();
	push_byte(0x20);
	push_word(0x8e);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x22);
	add();
	load(0x1);
	push_byte(0x20);
	push_word(0x98);
	add();
	load(0x1);
	push_byte(0x20);
	push_byte(0x2c);
	add();
	load(0x1);
	push_byte(0x1);
	push_byte(0xe);
	push_base_offset(0xf3c);
	load(0x2);
	call();
	sys1(0x41);

L00808:
	push_word(0x504);
	push_byte(0x0);
	move(0x2);
	push_word(0x444);
	push_byte(0x0);
	move(0x2);
	push_offset(L00983);
	call();
	push_offset(L0025c);
	jc(0x0);
	push_word(0x440);
	load(0x2);
	push_offset(L0084b);
	jc(0x0);
	push_word(0x448);
	load(0x2);
	push_offset(L0084b);
	jc(0x0);
	push_dword(0x483f0);
	load(0x2);
	push_offset(L00036);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L00036);
	jc(0x0);

L0084b:
	push_byte(0x0);
	grp1(0xdd);
	push_base_offset(0xc1c);
	load(0x2);
	push_offset(L045a6);
	call();
	push_word(0x41c);
	push_base_offset(0xc20);
	load(0x2);
	move(0x2);
	push_dword(0x483f0);
	push_byte(0x0);
	move(0x2);
	push_dword(0x483f4);
	push_byte(0x0);
	move(0x2);
	push_dword(0x483f8);
	push_byte(0x0);
	move(0x2);
	push_dword(0x483fc);
	push_byte(0x0);
	move(0x2);
	push_dword(0x48428);
	push_byte(0x0);
	move(0x2);
	push_dword(0x4842c);
	push_byte(0x0);
	move(0x2);
	push_dword(0x48430);
	push_byte(0x0);
	move(0x2);
	push_dword(0x48400);
	load(0x2);
	push_offset(L008c5);
	jc(0x1);
	push_word(0x440);
	load(0x2);
	push_offset(L008d0);
	jc(0x0);
	push_word(0x448);
	load(0x2);
	push_offset(L008d0);
	jc(0x0);
	push_offset(L008e2);
	jmp();

L008c5:
	push_dword(0x48438);
	push_byte(0xd);
	push_byte(0x54);
	mul();
	memclr();

L008d0:
	push_dword(0x48424);
	push_byte(0x0);
	move(0x2);
	push_dword(0x48434);
	push_byte(0x0);
	move(0x2);

L008e2:
	push_dword(0x48404);
	push_byte(0x20);
	memclr();
	push_byte(0x0);
	sys1(0x6);
	load_base();
	push_word(0xf40);
	sub();
	store_base();
	ret();

L008f5:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_word(0x7d0);
	push_word(0x190);
	push_dword(0x25e3c);
	sys1(0x98);
	push_dword(0x11196c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00972);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0091d:
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x234b4);
	add();
	load(0x2);
	lt();
	push_offset(L00960);
	jc(0x1);
	push_word(0x7d0);
	load(0x2);
	push_dword(0x11196c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x25e3c);
	mul();
	add();
	sys1(0x9c);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L0091d);
	jmp();

L00960:
	push_dword(0x11196c);
	load(0x2);
	sys1(0x21);
	push_dword(0x11196c);
	push_byte(0x0);
	move(0x2);

L00972:
	push_word(0x7cc);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L00983:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x10);
	push_word(0x7cc);
	load(0x2);
	push_byte(0x0);
	geq();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L009b1);
	jc(0x0);
	push_word(0x7d0);
	load(0x2);
	sys1(0x99);
	push_word(0x7d0);
	push_byte(0x0);
	move(0x2);
	push_offset(L00a58);
	jmp();

L009b1:
	push_base_offset(0xc);
	push_word(0x190);
	push_dword(0x25e3c);
	sys1(0x98);
	push_base_offset(0x8);
	push_word(0x7d0);
	load(0x2);
	sys1(0x9a);
	push_base_offset(0x4);
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L009d2:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x7cc);
	load(0x2);
	gt();
	push_offset(L00a10);
	jc(0x1);
	push_dword(0xc58f4);
	push_word(0x7d0);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	sys1(0x9d);
	push_base_offset(0xc);
	load(0x2);
	push_dword(0xc58f4);
	sys1(0x9c);
	push_offset(L009d2);
	jmp();

L00a10:
	push_dword(0x9fab8);
	push_word(0x7d0);
	load(0x2);
	push_word(0x7cc);
	load(0x2);
	sys1(0x9d);
	push_word(0x7d0);
	load(0x2);
	sys1(0x99);
	push_word(0x7d0);
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_word(0x7cc);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x22198);
	add();
	push_word(0xf10);
	memclr();
	push_dword(0x483fc);
	push_base_offset(0x10);
	load(0x2);
	move(0x2);

L00a58:
	push_base_offset(0x10);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L00a63:
	load_base();
	push_word(0x8e0);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L00b0d);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("userdata._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x483f0);
	load(0x2);
	push_offset(L00ace);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L00ace);
	jc(0x0);
	push_dword(0x48424);
	load(0x2);
	push_offset(L00ace);
	jc(0x0);
	push_base_offset(0x310);
	push_word(0xcc);
	push_byte(0x6);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x33);
	push_base_offset(0x310);
	push_word(0xcd);
	push_byte(0x6);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x33);

L00ace:
	push_base_offset(0x8e0);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_word(0xce);
	push_byte(0x3);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0x314);
	move_arg(0x2);
	push_base_offset(0x314);
	load(0x2);
	push_offset(L00b01);
	jc(0x1);
	push_base_offset(0x8e0);
	push_byte(0x7);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0x314);
	move_arg(0x2);

L00b01:
	push_word(0xbe8);
	push_base_offset(0x314);
	load(0x2);
	move(0x2);
	sys1(0x41);

L00b0d:
	load_base();
	push_word(0x8e0);
	sub();
	store_base();
	ret();

L00b14:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_word(0x4f4);
	push_byte(0x0);
	move(0x2);
	push_word(0x7dc);
	push_byte(0x0);
	move(0x2);
	push_word(0x7e0);
	push_byte(0x0);
	move(0x2);
	push_word(0x7e4);
	push_byte(0x0);
	move(0x2);
	push_word(0x7e8);
	push_byte(0x0);
	move(0x2);
	push_word(0x7ec);
	push_byte(0x0);
	move(0x2);
	push_word(0xacc);
	push_byte(0x0);
	move(0x2);
	push_word(0xad0);
	push_byte(0x1);
	move(0x2);
	push_word(0xb00);
	push_byte(0x0);
	move(0x2);
	push_word(0xb04);
	push_byte(0x0);
	move(0x2);
	push_word(0xb08);
	push_byte(0x0);
	move(0x2);
	push_word(0xb0c);
	push_byte(0x0);
	move(0x2);
	push_word(0xb24);
	push_byte(0x0);
	move(0x2);
	push_word(0xb28);
	push_byte(0x0);
	move(0x2);
	push_word(0xb38);
	push_byte(0x0);
	move(0x2);
	push_word(0xb3c);
	push_byte(0x0);
	move(0x2);
	push_word(0xb40);
	push_byte(0x0);
	move(0x2);
	push_word(0xb48);
	push_byte(0x0);
	move(0x2);
	push_word(0xb4c);
	push_byte(0x0);
	move(0x2);
	push_word(0xb50);
	push_byte(0x0);
	move(0x2);
	push_word(0xb54);
	push_byte(0x0);
	move(0x2);
	push_word(0xb58);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00bba:
	push_word(0xb2c);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L00bba);
	jc(0x0);
	push_word(0xb5c);
	push_byte(0x0);
	move(0x2);
	push_word(0xb60);
	push_byte(0x0);
	move(0x2);
	push_word(0xb64);
	push_byte(0x0);
	move(0x2);
	push_word(0xb68);
	push_byte(0x0);
	move(0x2);
	push_word(0xb6c);
	push_byte(0x0);
	move(0x2);
	push_word(0xb70);
	push_byte(0x0);
	move(0x2);
	push_word(0xb74);
	push_byte(0x0);
	move(0x2);
	push_word(0xb80);
	push_byte(0x0);
	move(0x2);
	push_word(0xb9c);
	push_byte(0x0);
	move(0x2);
	push_dword(0x483f0);
	load(0x2);
	push_offset(L00c4e);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L00c4e);
	jc(0x0);
	push_dword(0x48424);
	load(0x2);
	push_offset(L00c4e);
	jc(0x0);
	push_word(0xba4);
	push_byte(0x0);
	move(0x2);

L00c4e:
	push_word(0xba8);
	push_byte(0x0);
	move(0x2);
	push_word(0xbbc);
	push_byte(0x0);
	move(0x2);
	push_word(0xbc0);
	push_byte(0x0);
	move(0x2);
	push_word(0xbc4);
	push_byte(0x0);
	move(0x2);
	push_word(0xbc8);
	push_byte(0x0);
	move(0x2);
	push_word(0xbcc);
	push_byte(0x0);
	move(0x2);
	push_word(0xbd0);
	push_byte(0x0);
	move(0x2);
	push_word(0xbd4);
	push_byte(0x0);
	move(0x2);
	push_word(0xbd8);
	push_byte(0x0);
	move(0x2);
	push_word(0xbdc);
	push_byte(0x0);
	move(0x2);
	push_word(0xbe0);
	push_byte(0x0);
	move(0x2);
	push_word(0xbe4);
	push_byte(0x0);
	move(0x2);
	push_word(0x8f8);
	push_byte(0x1);
	move(0x2);
	push_word(0x8fc);
	push_byte(0x0);
	move(0x2);
	push_word(0x920);
	push_byte(0x0);
	move(0x2);
	push_word(0x924);
	push_byte(0x0);
	move(0x2);
	push_word(0x928);
	push_byte(0x0);
	move(0x2);
	push_word(0xb8c);
	push_byte(0x0);
	move(0x2);
	push_word(0xb90);
	push_byte(0x0);
	move(0x2);
	push_word(0xab8);
	push_dword(0x9fab8);
	push_dword(0x2463c);
	add();
	load(0x2);
	move(0x2);
	push_word(0xabc);
	push_byte(0x0);
	move(0x2);
	push_word(0xac0);
	push_byte(0x0);
	move(0x2);
	push_word(0xac4);
	push_byte(0x0);
	move(0x2);
	push_dword(0x4887c);
	push_byte(0x0);
	move(0x2);
	push_dword(0x48880);
	push_byte(0x0);
	move(0x2);
	push_dword(0x48884);
	push_byte(0x0);
	move(0x2);
	push_dword(0x48888);
	push_byte(0x0);
	move(0x2);
	push_dword(0x4888c);
	push_byte(0x0);
	move(0x2);
	push_dword(0x48890);
	push_byte(0x0);
	move(0x2);
	push_dword(0x488c8);
	push_word(0x100);
	memclr();
	push_dword(0x48894);
	push_byte(0x34);
	memclr();
	push_dword(0x489c8);
	push_byte(0x0);
	move(0x2);
	push_dword(0x41684);
	push_byte(0x8);
	push_word(0x174);
	mul();
	memclr();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00d5d:
	push_word(0x7f8);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x40);
	lt();
	push_offset(L00d5d);
	jc(0x0);
	push_dword(0x44388);
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_dword(0x4438c);
	move_arg(0x2);
	push_dword(0x44390);
	push_byte(0x0);
	move(0x2);
	push_dword(0x483f0);
	load(0x2);
	push_offset(L00dd1);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L00dd1);
	jc(0x0);
	push_dword(0x48424);
	load(0x2);
	push_offset(L00dd1);
	jc(0x0);
	push_dword(0x44414);
	push_byte(0x8);
	push_byte(0x34);
	mul();
	memclr();

L00dd1:
	push_dword(0x45bd0);
	push_byte(0x40);
	memclr();
	push_dword(0x45c10);
	push_word(0x100);
	memclr();
	push_dword(0x45d10);
	push_byte(0x40);
	push_byte(0x4);
	mul();
	memclr();
	push_dword(0x45e10);
	push_byte(0x40);
	push_byte(0x4);
	mul();
	memclr();
	push_dword(0x489cc);
	push_byte(0x40);
	push_word(0x8b0);
	mul();
	memclr();
	push_dword(0x6b5cc);
	push_byte(0x40);
	push_word(0x8b0);
	mul();
	memclr();
	push_dword(0x8e1cc);
	push_byte(0x20);
	push_word(0x8b0);
	mul();
	memclr();
	push_dword(0x9f7cc);
	push_byte(0x20);
	push_byte(0x10);
	mul();
	memclr();
	push_dword(0x9f9cc);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	memclr();
	push_dword(0x45f10);
	push_byte(0x0);
	move(0x2);
	push_dword(0x45f14);
	push_dword(0x9fab8);
	push_dword(0x244c0);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fa50);
	push_dword(0x9fab8);
	push_dword(0x25e08);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00e6a:
	push_dword(0x42868);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42968);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x40);
	lt();
	push_offset(L00e6a);
	jc(0x0);
	push_dword(0x42a68);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a6c);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a70);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a74);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a78);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a7c);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a80);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a84);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a88);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a8c);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42a90);
	push_byte(0x0);
	move(0x2);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L00f2c);
	jc(0x0);
	push_dword(0x48424);
	load(0x2);
	push_offset(L00f2c);
	jc(0x0);
	push_dword(0x42ac8);
	push_byte(0x0);
	move(0x2);

L00f2c:
	push_dword(0x42acc);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42ad0);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42ad4);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42ad8);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42adc);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42ae0);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42ae4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00f72:
	push_dword(0x42af8);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	push_offset(L00fe4);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x500);
	lt();
	push_offset(L00f72);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x234c4);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0xba8);
	push_dword(0x9fab8);
	push_dword(0x24644);
	add();
	push_dword(0x9fab8);
	push_dword(0x24664);
	add();
	load(0x2);
	sys1(0x8b);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L00fe4:
	load_base();
	push_word(0x104);
	add();
	store_base();
	push_byte(0x0);
	push_offset(L01023);
	jc(0x0);
	push_base_offset(0x4);
	push_dword(0x9faa8);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x114);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	load(0x1);
	push_dword(0xffff);
	and();
	push_base_offset(0x104);
	push_string("未定義の命令コード [ $%.4X ] が検出されました");
	cmd_6f();
	push_base_offset(0x104);
	cmd_79();
	sys1(0x6a);

L01023:
	push_byte(0x0);
	load_base();
	push_word(0x104);
	sub();
	store_base();
	ret();

L0102c:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_string("sysprg.arc");
	push_string("scrdrv2._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrctrl._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrsys._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrsys2._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrmsg._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrslct._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrsnd._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrgrp2._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("script._bp");
	sys1(0x40);
	push_dword(0x43f4c);
	move_arg(0x2);
	push_word(0x4e4);
	load(0x2);
	push_offset(L011af);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("scrslct2._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrslct3._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrslct4._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrgrp1._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrgrp3._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrgrp4._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrgrp5._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrgrp6._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrgrp7._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("scrgrp8._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_string("sysprg.arc");
	push_string("kana._bp");
	sys1(0x40);
	push_dword(0x43f50);
	move_arg(0x2);

L011af:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L011b5:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L011da);
	jc(0x0);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);

L011da:
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L011f2:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_offset(L01209);
	call();
	push_offset(L01257);
	call();
	push_offset(L01421);
	call();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L01209:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x400000);
	push_word(0x6100);
	add();
	sys1(0x20);
	push_dword(0x9faa8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0xbc);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L01251);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0xc0);
	add();
	push_dword(0x9faa8);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xbc);
	add();
	load(0x2);
	add();
	move(0x2);

L01251:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L01257:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L013f9);
	jc(0x0);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x220e4);
	add();
	load(0x2);
	move(0x2);
	push_string("sysprg.arc");
	push_string("bitmap._bp");
	sys1(0x40);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	push_base_offset(0x8);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x2217c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22180);
	add();
	load(0x2);
	push_byte(0x15);
	push_base_offset(0x8);
	load(0x2);
	call();
	sys1(0x41);
	push_string("sysprg.arc");
	push_string("msgwndctrl._bp");
	sys1(0x40);
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	push_byte(0x70);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2212c);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x8);
	load(0x2);
	call();
	sys1(0x41);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L012fc:
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_offset(L01383);
	jc(0x1);
	push_dword(0x42a94);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp2(0x8d);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22134);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	mul();
	add();
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);

L01383:
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L012fc);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x9);
	add();
	load(0x0);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xa);
	add();
	load(0x1);
	grp1(0x9d);
	push_dword(0x9fab8);
	push_dword(0x2214c);
	add();
	push_byte(0x0);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x7);
	add();
	load(0x0);
	grp1(0x9c);

L013f9:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_string("sysprg.arc");
	push_string("scenario._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	call();
	sys1(0x41);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L01421:
	load_base();
	push_byte(0x34);
	add();
	store_base();
	push_word(0x7c0);
	push_byte(0x20);
	sys1(0xd0);
	push_string("data01xxx.arc");
	push_string("StringsDB");
	sys1(0x34);
	push_offset(L01508);
	jc(0x1);
	push_byte(0x4);
	push_word(0x4000);
	push_byte(0x20);
	mul();
	add();
	sys1(0x20);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_string("data01xxx.arc");
	push_string("StringsDB");
	sys1(0x30);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x30);
	push_base_offset(0x34);
	load(0x2);
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x30);
	load(0x2);
	load(0x2);
	push_word(0x2000);
	leq();
	bool_and();
	push_offset(L014fd);
	jc(0x1);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);

L01495:
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x30);
	load(0x2);
	load(0x2);
	lt();
	push_offset(L01501);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x20);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x20);
	push_byte(0x0);
	add();
	push_string("%08X");
	cmd_6f();
	push_base_offset(0x20);
	push_byte(0x9);
	add();
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x20);
	mul();
	add();
	push_byte(0x4);
	add();
	cmd_6a();
	push_word(0x7c0);
	load(0x2);
	push_base_offset(0x20);
	push_byte(0x0);
	add();
	push_base_offset(0x20);
	sys1(0xd2);
	push_base_offset(0x28);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L01495);
	jmp();

L014fd:
	push_string("ストリングスデータベースが破損しています");
	cmd_79();

L01501:
	push_base_offset(0x34);
	load(0x2);
	sys1(0x21);

L01508:
	load_base();
	push_byte(0x34);
	sub();
	store_base();
	ret();

L0150e:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_offset(L01525);
	call();
	push_offset(L01539);
	call();
	push_offset(L01597);
	call();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L01525:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x9faa8);
	load(0x2);
	sys1(0x21);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L01539:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L0156f);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("msgwndctrl._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x1);
	push_base_offset(0x4);
	load(0x2);
	call();
	sys1(0x41);
	push_word(0x400);
	push_byte(0x69);
	add();
	grp1(0x12);
	push_word(0x400);
	push_byte(0x6a);
	add();
	grp1(0x12);

L0156f:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_string("sysprg.arc");
	push_string("scenario._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x1);
	push_base_offset(0x4);
	load(0x2);
	call();
	sys1(0x41);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L01597:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x7c0);
	load(0x2);
	sys1(0xd1);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L015a9:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L015e6);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("moviemngr._bp");
	push_word(0x400);
	push_word(0x4000);
	push_dword(0x8000);
	sys1(0x44);
	push_string("sysprg.arc");
	push_string("moviemngrbm._bp");
	push_word(0x400);
	push_word(0x4000);
	push_dword(0x8000);
	sys1(0x44);
	push_byte(0x32);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);

L015e6:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L015ec:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L01695);
	jc(0x0);
	push_byte(0x0);
	push_offset(L01617);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("dbgmngr._bp");
	push_word(0x400);
	push_dword(0x8000);
	push_dword(0x8000);
	sys1(0x44);

L01617:
	push_string("sysprg.arc");
	push_string("iconmngr._bp");
	push_word(0x400);
	push_dword(0x28000);
	push_dword(0x10000);
	sys1(0x44);
	push_string("sysprg.arc");
	push_string("anmmngrm._bp");
	push_word(0x400);
	push_dword(0x8000);
	push_dword(0x8000);
	sys1(0x44);
	push_string("sysprg.arc");
	push_string("mtnmngr._bp");
	push_word(0x400);
	push_word(0x4000);
	push_dword(0x8000);
	sys1(0x44);
	push_string("sysprg.arc");
	push_string("rplmngr._bp");
	push_word(0x400);
	push_word(0x4000);
	push_dword(0x8000);
	sys1(0x44);
	push_string("sysprg.arc");
	push_string("infotlpmngr._bp");
	push_word(0x400);
	push_word(0x4000);
	push_dword(0x8000);
	sys1(0x44);
	push_string("sysprg.arc");
	push_string("mscpsmngr._bp");
	push_word(0x400);
	push_word(0x4000);
	push_dword(0x8000);
	sys1(0x44);
	push_byte(0x32);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);

L01695:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L0169b:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L01712);
	jc(0x0);
	push_word(0x4f4);
	push_byte(0x1);
	move(0x2);
	push_byte(0x0);
	sys1(0x50);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L016bc:
	push_dword(0x42768);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L016da);
	jc(0x1);
	sys1(0x5f);
	push_offset(L016bc);
	jmp();

L016da:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	lt();
	push_offset(L016bc);
	jc(0x0);

L016f4:
	push_word(0x4f8);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L01707);
	jc(0x1);
	sys1(0x5f);
	push_offset(L016f4);
	jmp();

L01707:
	push_word(0x4f4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x1);
	sys1(0x50);

L01712:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L01718:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_offset(L01784);
	call();
	push_offset(L01915);
	call();
	push_offset(L01943);
	call();
	push_offset(L02919);
	call();
	push_offset(L02a4d);
	call();
	push_offset(L02b81);
	call();
	push_offset(L02c06);
	call();
	push_offset(L02c89);
	call();
	push_dword(0x43f30);
	load(0x2);
	call();
	push_offset(L02ccf);
	call();
	push_dword(0x9fab8);
	push_word(0xd8);
	add();
	load(0x2);
	sys1(0x14);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_offset(L0176b);
	jc(0x0);
	push_word(0x700);
	sys1(0x18);

L0176b:
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	push_dword(0x43f10);
	load(0x2);
	call();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L01784:
	load_base();
	push_word(0x72c);
	add();
	store_base();
	push_word(0x7f4);
	push_byte(0x8);
	sys1(0xd0);
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L01818);
	jc(0x0);
	push_base_offset(0x724);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_byte(0x0);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x0);
	add();
	cmd_6a();
	push_word(0xb10);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x724);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x0);
	push_dword(0x43f4c);
	load(0x2);
	call();
	push_base_offset(0x728);
	move_arg(0x2);
	push_base_offset(0x728);
	load(0x2);
	push_byte(0x34);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x110);
	add();
	push_base_offset(0x728);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	move(0x2);
	push_word(0xb14);
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	load(0x2);
	move(0x2);
	push_word(0xb18);
	push_word(0xb10);
	load(0x2);
	move(0x2);
	push_offset(L0190e);
	jmp();

L01818:
	push_base_offset(0x704);
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x700);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_base_offset(0x704);
	load(0x2);
	push_byte(0x38);
	mul();
	memcpy();
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_byte(0x20);
	push_byte(0x38);
	mul();
	memclr();
	push_word(0xb10);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x72c);
	push_byte(0x0);
	move(0x2);

L01867:
	push_base_offset(0x700);
	push_base_offset(0x72c);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x28);
	add();
	load(0x2);
	push_offset(L018f1);
	jc(0x0);
	push_base_offset(0x700);
	push_base_offset(0x72c);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x72c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x0);
	push_dword(0x43f4c);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_base_offset(0x72c);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x34);
	add();
	push_base_offset(0x700);
	push_base_offset(0x72c);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x34);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x72c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L018f1);
	jc(0x1);
	push_word(0xb14);
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	load(0x2);
	move(0x2);
	push_word(0xb18);
	push_word(0xb10);
	load(0x2);
	move(0x2);

L018f1:
	push_base_offset(0x72c);
	push_base_offset(0x72c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x72c);
	load(0x2);
	push_base_offset(0x704);
	load(0x2);
	lt();
	push_offset(L01867);
	jc(0x0);

L0190e:
	load_base();
	push_word(0x72c);
	sub();
	store_base();
	ret();

L01915:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L0193d);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("bitmap._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x0);
	push_byte(0xe);
	push_base_offset(0x4);
	load(0x2);
	call();
	sys1(0x41);

L0193d:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L01943:
	load_base();
	push_word(0x27c);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L02912);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("bitmap._bp");
	sys1(0x40);
	push_base_offset(0x238);
	move_arg(0x2);
	push_string("sysprg.arc");
	push_string("bitmapprcs._bp");
	sys1(0x40);
	push_base_offset(0x234);
	move_arg(0x2);
	push_base_offset(0x230);
	push_dword(0x9fab8);
	push_dword(0xc560);
	add();
	push_byte(0x60);
	memcpy();
	push_base_offset(0x230);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01cbc);
	jc(0x1);
	push_base_offset(0x230);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01a4e);
	jc(0x0);
	push_base_offset(0x230);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x230);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_base_offset(0x230);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	bool_or();
	push_base_offset(0x230);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_string("data02xxx.arc");
	push_byte(0x0);
	ternary();
	push_base_offset(0x23c);
	move_arg(0x2);
	push_word(0x80);
	push_offset(L04e30);
	call();
	push_base_offset(0x244);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x230);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x40);
	push_byte(0x0);
	push_base_offset(0x230);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x23c);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x92cc);
	add();
	push_base_offset(0x230);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x230);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x230);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	bool_or();
	push_byte(0x0);
	push_base_offset(0x244);
	load(0x2);
	push_offset(L03846);
	call();
	push_offset(L01a7d);
	jmp();

L01a4e:
	push_base_offset(0x230);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0x17);
	push_offset(L01a7d);
	jc(0x1);
	push_base_offset(0x230);
	push_byte(0xc);
	add();
	load(0x2);
	push_word(0x500);
	push_word(0x2d0);
	push_byte(0x1);
	grp1(0x11);
	push_base_offset(0x230);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x13);

L01a7d:
	push_base_offset(0x230);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01b6d);
	jc(0x1);
	push_base_offset(0x230);
	push_byte(0x1c);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x7fff);
	push_word(0x7000);
	ternary();
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x258);
	push_dword(0x9fab8);
	push_dword(0xa94c);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	mul();
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xd08c);
	add();
	load(0x2);
	add();
	div();
	push_base_offset(0x230);
	push_byte(0x10);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x254);
	push_dword(0x9fab8);
	push_dword(0xa94c);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	mul();
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xd08c);
	add();
	load(0x2);
	add();
	div();
	push_base_offset(0x230);
	push_byte(0x14);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x258);
	load(0x2);
	push_base_offset(0x254);
	load(0x2);
	push_base_offset(0x230);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x1d0);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_base_offset(0x230);
	push_byte(0x1c);
	add();
	load(0x2);
	grp1(0x43);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x36);
	push_offset(L01cbc);
	jmp();

L01b6d:
	push_base_offset(0x230);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L01c22);
	jc(0x1);
	push_base_offset(0x230);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x230);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x230);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x4);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x5);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp2(0x40);
	push_byte(0x0);
	push_dword(0x9fab8);
	push_dword(0xc560);
	add();
	push_byte(0x1c);
	add();
	load(0x2);
	grp1(0x32);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x35);
	push_byte(0x0);
	push_dword(0x8000);
	push_base_offset(0x230);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x38);
	push_offset(L01cbc);
	jmp();

L01c22:
	push_base_offset(0x230);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L01cbc);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("RplCtrl._bp");
	sys1(0x40);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x4);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x5);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x1cc);
	load(0x2);
	call();
	push_word(0xebe);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x230);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x1cc);
	load(0x2);
	call();
	sys1(0x41);
	push_base_offset(0x230);
	push_byte(0xc);
	add();
	load(0x2);
	push_word(0xebe);
	push_word(0x7d0);
	push_byte(0x0);
	push_word(0x100);
	grp1(0x47);
	push_byte(0x0);
	push_word(0xff);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x38);

L01cbc:
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x37);
	push_byte(0x0);
	push_dword(0x7fff0000);
	push_base_offset(0x230);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_byte(0x0);
	grp1(0x38);
	push_byte(0x1);
	push_base_offset(0x230);
	push_byte(0x0);
	add();
	load(0x2);
	grp1(0x4c);
	push_dword(0x9fab8);
	push_dword(0xc5c0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01d34);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("prtclctrl._bp");
	sys1(0x40);
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0xc5c0);
	add();
	push_dword(0x9fab8);
	push_dword(0xc5c0);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x1c8);
	load(0x2);
	call();
	push_dword(0x42a68);
	move_arg(0x2);
	sys1(0x41);

L01d34:
	push_base_offset(0x1c4);
	push_dword(0x9fab8);
	push_dword(0xcaa8);
	add();
	push_byte(0x24);
	memcpy();
	push_base_offset(0x1c4);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01dbd);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("rainfall._bp");
	sys1(0x40);
	push_base_offset(0x1a0);
	move_arg(0x2);
	push_base_offset(0x1c4);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x1c4);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x1c4);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x1c4);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x1c4);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0x1c4);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x1c4);
	push_byte(0x1c);
	add();
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x1c4);
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x1a0);
	load(0x2);
	call();
	push_dword(0x42a6c);
	move_arg(0x2);
	sys1(0x41);
	push_dword(0x42a6c);
	load(0x2);
	push_byte(0x1);
	usr2(0x44);

L01dbd:
	push_base_offset(0x260);
	push_byte(0x0);
	move(0x2);

L01dc4:
	push_base_offset(0x19c);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x70);
	memcpy();
	push_base_offset(0x19c);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L025b3);
	jc(0x1);
	push_base_offset(0x68);
	push_dword(0x489cc);
	push_base_offset(0x260);
	load(0x2);
	push_word(0x8b0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x64);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x10);
	add();
	push_byte(0x0);
	push_word(0xb8);
	mul();
	add();
	move(0x2);
	push_base_offset(0x19c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01eca);
	jc(0x1);
	push_base_offset(0x19c);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L01eca);
	jc(0x1);
	push_base_offset(0x5c);
	push_word(0x2000);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x20);
	mul();
	add();
	move(0x2);
	push_base_offset(0x19c);
	push_byte(0xc);
	add();
	push_byte(0x0);
	push_base_offset(0x260);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x5c);
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x234);
	load(0x2);
	call();
	push_base_offset(0x19c);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x5c);
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0x14);
	add();
	load(0x2);
	add();
	push_byte(0x1);
	sub();
	push_base_offset(0x5c);
	load(0x2);
	ternary();
	push_base_offset(0x25c);
	move_arg(0x2);
	push_base_offset(0x19c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x25c);
	load(0x2);
	grp2(0x1f);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x25c);
	load(0x2);
	move(0x2);

L01eca:
	push_base_offset(0x19c);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01f89);
	jc(0x0);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x20);
	lt();
	push_byte(0x2);
	push_base_offset(0x260);
	load(0x2);
	add();
	push_byte(0x2);
	push_byte(0x3);
	add();
	push_byte(0x3);
	add();
	push_base_offset(0x260);
	load(0x2);
	add();
	push_byte(0x20);
	sub();
	ternary();
	push_base_offset(0x264);
	move_arg(0x2);
	push_word(0x80);
	push_offset(L04e30);
	call();
	push_base_offset(0x244);
	move_arg(0x2);
	push_base_offset(0x264);
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x260);
	load(0x2);
	add();
	push_byte(0x0);
	push_base_offset(0x19c);
	push_byte(0x8);
	add();
	load(0x2);
	push_string("data02xxx.arc");
	push_dword(0x9fab8);
	push_dword(0x92cc);
	add();
	push_base_offset(0x19c);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x19c);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x19c);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	bool_or();
	push_dword(0x9fab8);
	push_dword(0xcb0c);
	add();
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x244);
	load(0x2);
	push_offset(L03846);
	call();
	push_offset(L02166);
	jmp();

L01f89:
	push_base_offset(0x19c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x19c);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	push_base_offset(0x5c);
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0xc);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x25c);
	move_arg(0x2);
	push_base_offset(0x19c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L020ff);
	jc(0x1);
	push_base_offset(0x60);
	push_byte(0x0);
	push_string("data02xxx.arc");
	push_dword(0x9fab8);
	push_dword(0x92cc);
	add();
	push_byte(0x0);
	push_byte(0x28);
	mul();
	add();
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	push_dword(0x43f58);
	load(0x2);
	call();
	push_offset(L0201b);
	jc(0x1);
	push_base_offset(0x60);
	load(0x2);
	push_offset(L0201b);
	jc(0x0);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x20);
	sub();
	push_byte(0x0);
	push_dword(0x43f70);
	push_byte(0x4);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	push_offset(L025b3);
	jmp();

L0201b:
	push_base_offset(0x12c);
	push_dword(0x9fab8);
	push_dword(0x1d9d4);
	add();
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x30);
	mul();
	add();
	push_byte(0x30);
	memcpy();
	push_base_offset(0xfc);
	push_dword(0x9fab8);
	push_dword(0x1b4d4);
	add();
	push_base_offset(0x260);
	load(0x2);
	push_word(0x94);
	mul();
	add();
	push_word(0x94);
	memcpy();
	push_byte(0x0);
	push_dword(0x9fab8);
	push_dword(0x92cc);
	add();
	push_byte(0x0);
	push_byte(0x28);
	mul();
	add();
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	sys1(0xdc);
	push_base_offset(0x240);
	move_arg(0x2);
	push_base_offset(0x68);
	load(0x2);
	push_base_offset(0x240);
	load(0x2);
	push_base_offset(0x12c);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0xfc);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0xfc);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0xfc);
	push_byte(0x10);
	add();
	push_base_offset(0xfc);
	push_word(0x90);
	add();
	load(0x2);
	push_base_offset(0x12c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0xa);
	push_base_offset(0x12c);
	push_byte(0x8);
	add();
	push_byte(0x0);
	push_word(0xed0);
	push_byte(0x1);
	push_byte(0x5);
	push_base_offset(0x234);
	load(0x2);
	call();
	push_base_offset(0x25c);
	load(0x2);
	push_word(0x2580);
	push_byte(0xc);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x20);
	sub();
	mul();
	add();
	push_word(0x2880);
	push_byte(0xc);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x20);
	sub();
	mul();
	add();
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	push_byte(0x7);
	push_base_offset(0x234);
	load(0x2);
	call();

L020ff:
	push_base_offset(0x19c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_byte(0x1);
	push_base_offset(0x19c);
	push_byte(0x14);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x264);
	move_arg(0x2);
	push_base_offset(0x25c);
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0x54);
	add();
	push_base_offset(0x264);
	load(0x2);
	push_byte(0x8);
	push_base_offset(0x234);
	load(0x2);
	call();
	push_base_offset(0x25c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_dword(0x9fab8);
	push_dword(0x92cc);
	add();
	push_base_offset(0x19c);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x264);
	load(0x2);
	push_byte(0x9);
	push_base_offset(0x234);
	load(0x2);
	call();

L02166:
	grp1(0x50);
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x258);
	push_base_offset(0x19c);
	push_byte(0x20);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x254);
	push_base_offset(0x19c);
	push_byte(0x24);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x250);
	push_base_offset(0x19c);
	push_byte(0x28);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x58);
	push_base_offset(0x19c);
	push_byte(0x34);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x54);
	push_base_offset(0x19c);
	push_byte(0x38);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x50);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4c);
	push_dword(0x9fab8);
	push_dword(0xa94c);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x48);
	push_dword(0x9fab8);
	push_dword(0xa94c);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x44);
	push_dword(0x9fab8);
	push_dword(0xa94c);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x19c);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L0223a);
	jc(0x0);
	push_base_offset(0x4c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x48);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);

L0223a:
	push_base_offset(0x19c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0231d);
	jc(0x1);
	push_base_offset(0x254);
	push_word(0x2d0);
	push_byte(0x1);
	sar();
	push_byte(0x1);
	sub();
	push_base_offset(0x19c);
	push_byte(0x24);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x19c);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_word(0xb0);
	add();
	load(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_word(0xb4);
	add();
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0x38);
	add();
	load(0x2);
	push_offset(L036cc);
	call();
	push_base_offset(0x54);
	move_arg(0x2);
	push_base_offset(0x58);
	move_arg(0x2);
	push_base_offset(0x50);
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x244c0);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x20);
	push_dword(0x9fab8);
	push_dword(0x244c0);
	add();
	load(0x2);
	add();
	eq();
	bool_and();
	push_offset(L02390);
	jc(0x1);
	push_offset(L0362c);
	call();
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x4c);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x48);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);
	push_offset(L02390);
	jmp();

L0231d:
	push_base_offset(0x19c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L02390);
	jc(0x1);
	push_base_offset(0x254);
	push_word(0x2d0);
	push_byte(0x1);
	sar();
	push_byte(0x1);
	sub();
	push_base_offset(0x19c);
	push_byte(0x24);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x19c);
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L0375c);
	call();
	push_base_offset(0x54);
	move_arg(0x2);
	push_base_offset(0x58);
	move_arg(0x2);
	push_base_offset(0x50);
	push_byte(0x0);
	move(0x2);
	push_offset(L0362c);
	call();
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x4c);
	push_base_offset(0x4c);
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x48);
	push_base_offset(0x48);
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);

L02390:
	push_dword(0x9fab8);
	push_dword(0x1e5d4);
	add();
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L023f0);
	jc(0x1);
	push_base_offset(0x25c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x19c);
	push_byte(0x14);
	add();
	load(0x2);
	push_word(0xed0);
	push_byte(0xa);
	push_base_offset(0x234);
	load(0x2);
	call();
	push_dword(0x45e10);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x45d10);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);

L023f0:
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x8100);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x0);
	grp1(0x38);
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x8000);
	push_base_offset(0x19c);
	push_byte(0x2c);
	add();
	load(0x2);
	push_base_offset(0x50);
	load(0x2);
	grp1(0x38);
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x8001);
	push_base_offset(0x19c);
	push_byte(0x30);
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x38);
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x258);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x254);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x250);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x19c);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x54);
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0x4c);
	add();
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0x50);
	add();
	load(0x2);
	push_byte(0x20);
	push_base_offset(0x19c);
	push_byte(0x64);
	add();
	load(0x2);
	add();
	push_base_offset(0x19c);
	push_byte(0x68);
	add();
	load(0x2);
	push_word(0x100);
	push_base_offset(0x19c);
	push_byte(0x6c);
	add();
	load(0x2);
	add();
	grp1(0x5c);
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x42);
	push_base_offset(0x19c);
	push_byte(0x48);
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x38);
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	grp2(0x36);
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x7fff0000);
	push_base_offset(0x19c);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_byte(0x0);
	grp1(0x38);
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0x54);
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	push_offset(L025b3);
	jc(0x1);
	push_base_offset(0x19c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_base_offset(0x19c);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x0);
	geq();
	bool_and();
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x20);
	push_dword(0x45f14);
	load(0x2);
	add();
	eq();
	bool_and();
	bool_or();
	push_offset(L025b3);
	jc(0x1);
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x1);
	grp2(0x31);

L025b3:
	push_base_offset(0x260);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x40);
	lt();
	push_offset(L01dc4);
	jc(0x0);
	push_base_offset(0x260);
	push_byte(0x0);
	move(0x2);

L025d4:
	push_base_offset(0x19c);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x70);
	memcpy();
	push_base_offset(0x19c);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0268f);
	jc(0x1);
	push_base_offset(0x19c);
	push_byte(0x1c);
	add();
	load(0x2);
	push_dword(-0x1000000);
	and();
	push_dword(-0x80000000);
	eq();
	push_offset(L02675);
	jc(0x1);
	push_base_offset(0x264);
	push_base_offset(0x19c);
	push_byte(0x1c);
	add();
	load(0x2);
	push_dword(0xffffff);
	and();
	move(0x2);
	push_base_offset(0x264);
	load(0x2);
	push_base_offset(0x260);
	load(0x2);
	eq();
	push_offset(L0265d);
	jc(0x0);
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x42868);
	push_base_offset(0x264);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp2(0x55);
	push_offset(L0268f);
	jmp();

L0265d:
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x31);
	push_offset(L0268f);
	jmp();

L02675:
	push_dword(0x42868);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x19c);
	push_byte(0x1c);
	add();
	load(0x2);
	grp1(0x55);

L0268f:
	push_base_offset(0x260);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x260);
	load(0x2);
	push_byte(0x40);
	lt();
	push_offset(L025d4);
	jc(0x0);
	push_base_offset(0x40);
	push_dword(0x9fab8);
	push_dword(0xcacc);
	add();
	push_byte(0x24);
	memcpy();
	push_base_offset(0x40);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02862);
	jc(0x1);
	grp2(0x60);
	push_dword(0x42a70);
	move_arg(0x2);
	push_word(0xed0);
	push_word(0x500);
	push_word(0x2d0);
	push_byte(0x4);
	grp1(0x11);
	push_base_offset(0x40);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0274e);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L02765);
	jc(0x0);
	push_base_offset(0x40);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L027b4);
	jc(0x0);
	push_word(0xed0);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp2(0x10);
	push_offset(L0280d);
	jmp();

L0274e:
	push_word(0xed0);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp2(0x11);
	push_offset(L0280d);
	jmp();

L02765:
	push_word(0xed0);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x4);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp2(0x12);
	push_offset(L0280d);
	jmp();

L027b4:
	push_word(0xed0);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x4);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x40);
	push_byte(0x8);
	add();
	push_byte(0x5);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp2(0x16);

L0280d:
	push_word(0xec8);
	push_word(0x500);
	push_word(0x3c0);
	push_byte(0x4);
	grp1(0x11);
	push_word(0xec8);
	push_byte(0x0);
	grp1(0x13);
	push_word(0xec8);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0xed0);
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_word(0xed0);
	grp1(0x12);
	push_dword(0x42a70);
	load(0x2);
	push_word(0xec8);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_word(0x100);
	push_base_offset(0x40);
	push_byte(0x20);
	add();
	load(0x2);
	push_word(0x400);
	grp2(0x65);
	push_dword(0x42a70);
	load(0x2);
	push_byte(0x1);
	grp2(0x64);

L02862:
	push_base_offset(0x1c);
	push_dword(0x9fab8);
	push_dword(0xcaf0);
	add();
	push_byte(0xc);
	memcpy();
	push_base_offset(0x1c);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L028b0);
	jc(0x1);
	grp2(0x60);
	push_dword(0x42a74);
	move_arg(0x2);
	push_dword(0x42a74);
	load(0x2);
	push_base_offset(0x1c);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x1c);
	push_byte(0x8);
	add();
	load(0x2);
	push_word(0x4a0);
	grp2(0x66);
	push_dword(0x42a74);
	load(0x2);
	push_byte(0x1);
	grp2(0x64);

L028b0:
	push_base_offset(0x10);
	push_dword(0x9fab8);
	push_dword(0xcafc);
	add();
	push_byte(0x10);
	memcpy();
	push_base_offset(0x10);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0290e);
	jc(0x1);
	grp1(0x60);
	push_dword(0x42a78);
	move_arg(0x2);
	push_dword(0x42a78);
	load(0x2);
	push_base_offset(0x10);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x10);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_base_offset(0x10);
	push_byte(0xc);
	add();
	load(0x2);
	push_word(0x4c0);
	grp1(0x66);
	push_dword(0x42a78);
	load(0x2);
	push_byte(0x1);
	grp1(0x64);

L0290e:
	sys1(0x41);
	sys1(0x41);

L02912:
	load_base();
	push_word(0x27c);
	sub();
	store_base();
	ret();

L02919:
	load_base();
	push_byte(0x60);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L02a47);
	jc(0x0);
	push_dword(0x483f8);
	load(0x2);
	push_offset(L0294c);
	jc(0x0);
	push_dword(0x483fc);
	load(0x2);
	push_offset(L0294c);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L02a47);
	jc(0x0);

L0294c:
	push_dword(0x48430);
	load(0x2);
	push_dword(0x48438);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	ternary();
	push_base_offset(0x58);
	move_arg(0x2);
	push_base_offset(0x60);
	push_byte(0x0);
	move(0x2);

L02970:
	push_base_offset(0x54);
	push_base_offset(0x58);
	load(0x2);
	push_base_offset(0x60);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x54);
	memcpy();
	push_base_offset(0x54);
	push_byte(0x0);
	add();
	load(0x1);
	push_offset(L02a09);
	jc(0x1);
	push_base_offset(0x54);
	push_byte(0x2);
	add();
	load(0x1);
	push_byte(0x0);
	push_base_offset(0x54);
	push_byte(0x4);
	add();
	load(0x1);
	ternary();
	push_base_offset(0x5c);
	move_arg(0x2);
	push_base_offset(0x54);
	push_byte(0x28);
	add();
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L029d4);
	jc(0x0);
	push_base_offset(0x60);
	load(0x2);
	push_string("data05xxx.arc");
	push_base_offset(0x54);
	push_byte(0x8);
	add();
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x40);
	snd1(0x11);
	push_offset(L029f9);
	jmp();

L029d4:
	push_base_offset(0x60);
	load(0x2);
	push_string("data05xxx.arc");
	push_base_offset(0x54);
	push_byte(0x8);
	add();
	push_base_offset(0x54);
	push_byte(0x28);
	add();
	push_base_offset(0x54);
	push_byte(0x48);
	add();
	load(0x2);
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x40);
	snd1(0x12);

L029f9:
	push_base_offset(0x60);
	load(0x2);
	push_base_offset(0x54);
	push_byte(0x2);
	add();
	load(0x1);
	bool_zero();
	snd1(0x14);

L02a09:
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x60);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x4c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x60);
	push_base_offset(0x60);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x60);
	load(0x2);
	push_byte(0xd);
	lt();
	push_offset(L02970);
	jc(0x0);
	push_dword(0x48430);
	push_byte(0x0);
	move(0x2);

L02a47:
	load_base();
	push_byte(0x60);
	sub();
	store_base();
	ret();

L02a4d:
	load_base();
	push_word(0x204);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L02b7a);
	jc(0x0);
	push_base_offset(0x204);
	push_byte(0x0);
	move(0x2);

L02a64:
	push_base_offset(0x174);
	push_dword(0x9fab8);
	push_dword(0x21490);
	add();
	push_base_offset(0x204);
	load(0x2);
	push_word(0x174);
	mul();
	add();
	push_word(0x174);
	memcpy();
	push_base_offset(0x174);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02b60);
	jc(0x1);
	push_base_offset(0x200);
	push_byte(0x0);
	move(0x2);

L02a94:
	push_base_offset(0x17c);
	push_base_offset(0x1fc);
	push_base_offset(0x200);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x178);
	push_base_offset(0x174);
	push_byte(0x10);
	add();
	push_base_offset(0x200);
	load(0x2);
	push_byte(0x2c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x17c);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x178);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x17c);
	load(0x2);
	push_byte(0x4);
	add();
	push_base_offset(0x178);
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_base_offset(0x17c);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0x178);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x17c);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0x178);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	move(0x2);
	push_string("data03xxx.arc");
	push_base_offset(0x17c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	push_dword(0x43efc);
	load(0x2);
	call();
	push_offset(L02b60);
	jc(0x1);
	push_base_offset(0x200);
	push_base_offset(0x200);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x200);
	load(0x2);
	push_base_offset(0x174);
	push_byte(0xc);
	add();
	load(0x2);
	lt();
	push_offset(L02a94);
	jc(0x0);
	push_base_offset(0x204);
	load(0x2);
	push_base_offset(0x174);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x1fc);
	push_base_offset(0x174);
	push_word(0x170);
	add();
	load(0x2);
	push_offset(L050bb);
	call();

L02b60:
	push_base_offset(0x204);
	push_base_offset(0x204);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x204);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L02a64);
	jc(0x0);

L02b7a:
	load_base();
	push_word(0x204);
	sub();
	store_base();
	ret();

L02b81:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_word(0x7c4);
	push_word(0xb0);
	sys1(0xd0);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x20d74);
	add();
	move(0x2);

L02ba5:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	lt();
	push_offset(L02c00);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L02c00);
	jc(0x1);
	push_word(0x7c4);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x4);
	load(0x2);
	sys1(0xd2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_word(0xb0);
	mul();
	add();
	move(0x2);
	push_offset(L02ba5);
	jmp();

L02c00:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02c06:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_word(0x7c8);
	push_byte(0x50);
	sys1(0xd0);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x20e24);
	add();
	move(0x2);

L02c29:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	lt();
	push_offset(L02c83);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L02c83);
	jc(0x1);
	push_word(0x7c8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x4);
	load(0x2);
	sys1(0xd2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x50);
	mul();
	add();
	move(0x2);
	push_offset(L02c29);
	jmp();

L02c83:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02c89:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L02cc9);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("msgwndctrl._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	sys1(0x41);
	push_dword(0x9fab8);
	push_dword(0x23e98);
	add();
	grp2(0x96);

L02cc9:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02ccf:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_word(0x7d8);
	push_byte(0x60);
	sys1(0xd0);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0x24098);
	add();
	push_word(0xb0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x24098);
	add();
	push_word(0xb4);
	add();
	move(0x2);

L02d05:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L02d47);
	jc(0x1);
	push_word(0x7d8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x4);
	load(0x2);
	sys1(0xd2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_offset(L02d05);
	jmp();

L02d47:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02d4d:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L02dea);
	jc(0x0);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L02d63:
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x212b8);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x1);
	push_offset(L02dd0);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x2148c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	add();
	load(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x6);
	add();
	load(0x1);
	push_dword(0x44038);
	load(0x2);
	call();

L02dd0:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L02d63);
	jc(0x0);

L02dea:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02df0:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L03457);
	jc(0x0);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x4c);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L02e0c:
	push_dword(0x42abc);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0xe4);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L02e0c);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L02e41:
	push_dword(0x42868);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02e6b);
	jc(0x1);
	push_dword(0x42868);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	grp1(0x51);

L02e6b:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x40);
	lt();
	push_offset(L02e41);
	jc(0x0);
	push_dword(0x42a68);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02e9d);
	jc(0x1);
	push_dword(0x42a68);
	load(0x2);
	usr2(0x1);

L02e9d:
	push_dword(0x42a6c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02eb5);
	jc(0x1);
	push_dword(0x42a6c);
	load(0x2);
	usr2(0x41);

L02eb5:
	push_dword(0x42a70);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02ecd);
	jc(0x1);
	push_dword(0x42a70);
	load(0x2);
	grp2(0x61);

L02ecd:
	push_dword(0x42a74);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02ee5);
	jc(0x1);
	push_dword(0x42a74);
	load(0x2);
	grp2(0x61);

L02ee5:
	push_dword(0x42a78);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02efd);
	jc(0x1);
	push_dword(0x42a78);
	load(0x2);
	grp1(0x61);

L02efd:
	push_dword(0x42a7c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02f15);
	jc(0x1);
	push_dword(0x42a7c);
	load(0x2);
	grp1(0x61);

L02f15:
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02f2d);
	jc(0x1);
	push_dword(0x42a80);
	load(0x2);
	grp1(0x81);

L02f2d:
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02f45);
	jc(0x1);
	push_dword(0x42a84);
	load(0x2);
	grp1(0x81);

L02f45:
	push_dword(0x42a88);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02f5d);
	jc(0x1);
	push_dword(0x42a88);
	load(0x2);
	grp1(0x51);

L02f5d:
	push_dword(0x42a8c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02f75);
	jc(0x1);
	push_dword(0x42a8c);
	load(0x2);
	grp1(0x51);

L02f75:
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02fa5);
	jc(0x1);
	push_dword(0x483f0);
	load(0x2);
	push_offset(L02fa5);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L02fa5);
	jc(0x0);
	push_dword(0x42ac8);
	load(0x2);
	grp1(0x51);

L02fa5:
	push_dword(0x42ae0);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02fbd);
	jc(0x1);
	push_dword(0x42ae0);
	load(0x2);
	grp1(0x51);

L02fbd:
	push_word(0xac0);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02fd1);
	jc(0x1);
	push_word(0xac0);
	load(0x2);
	grp1(0x51);

L02fd1:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L02fd8:
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	add();
	grp1(0x12);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x90);
	lt();
	push_offset(L02fd8);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03004:
	push_word(0xe00);
	push_base_offset(0x4);
	load(0x2);
	add();
	grp1(0x12);
	push_word(0xe00);
	push_byte(0x20);
	add();
	push_base_offset(0x4);
	load(0x2);
	add();
	grp1(0x12);
	push_word(0xe00);
	push_byte(0x20);
	add();
	push_byte(0x20);
	add();
	push_base_offset(0x4);
	load(0x2);
	add();
	grp1(0x12);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L03004);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0304f:
	push_word(0x2000);
	push_base_offset(0x4);
	load(0x2);
	add();
	grp1(0x12);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	push_byte(0x20);
	mul();
	lt();
	push_offset(L0304f);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0307e:
	push_word(0x2400);
	push_base_offset(0x4);
	load(0x2);
	add();
	grp1(0x12);
	push_word(0x2580);
	push_base_offset(0x4);
	load(0x2);
	add();
	grp1(0x12);
	push_word(0x2700);
	push_base_offset(0x4);
	load(0x2);
	add();
	grp1(0x12);
	push_word(0x2880);
	push_base_offset(0x4);
	load(0x2);
	add();
	grp1(0x12);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	push_byte(0xc);
	mul();
	lt();
	push_offset(L0307e);
	jc(0x0);
	push_word(0xebe);
	grp1(0x12);
	push_word(0xebd);
	grp1(0x12);
	push_word(0xedc);
	grp1(0x12);
	push_word(0x42c);
	load(0x2);
	push_offset(L03457);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L030e7:
	push_byte(0x3e);
	push_base_offset(0x4);
	load(0x2);
	add();
	snd1(0x25);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L030e7);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03112:
	push_byte(0x46);
	push_base_offset(0x4);
	load(0x2);
	add();
	snd1(0x25);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L03112);
	jc(0x0);
	push_byte(0x0);
	push_offset(L03154);
	jc(0x0);
	push_dword(0x42af4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03154);
	jc(0x0);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);

L03154:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0315b:
	push_byte(0x3e);
	push_base_offset(0x4);
	load(0x2);
	add();
	snd1(0x22);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L0315b);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03186:
	push_byte(0x46);
	push_base_offset(0x4);
	load(0x2);
	add();
	snd1(0x22);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L03186);
	jc(0x0);
	push_dword(0x48400);
	load(0x2);
	push_offset(L031d0);
	jc(0x1);
	push_word(0x440);
	load(0x2);
	push_offset(L031f0);
	jc(0x0);
	push_dword(0x483f0);
	load(0x2);
	push_offset(L03457);
	jc(0x0);
	push_offset(L031f0);
	jmp();

L031d0:
	push_word(0x7b4);
	load(0x2);
	push_offset(L03457);
	jc(0x0);
	push_word(0x440);
	load(0x2);
	push_offset(L031f0);
	jc(0x0);
	push_dword(0x483f0);
	load(0x2);
	push_offset(L03457);
	jc(0x0);

L031f0:
	push_dword(0x48400);
	load(0x2);
	push_offset(L03229);
	jc(0x0);
	push_word(0x440);
	load(0x2);
	push_offset(L0340e);
	jc(0x0);
	push_word(0x448);
	load(0x2);
	push_offset(L0340e);
	jc(0x0);
	push_word(0x7cc);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L0340e);
	jc(0x0);
	push_dword(0x483f4);
	load(0x2);
	push_offset(L0340e);
	jc(0x1);

L03229:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03230:
	push_dword(0x48438);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x1);
	push_offset(L033f4);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x2);
	add();
	load(0x1);
	push_dword(0x48438);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x2);
	add();
	load(0x1);
	bool_zero();
	bool_and();
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x2);
	add();
	load(0x1);
	bool_zero();
	push_dword(0x48438);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x2);
	add();
	load(0x1);
	bool_and();
	bool_or();
	push_offset(L033f4);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x48);
	add();
	load(0x2);
	push_dword(0x48438);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x48);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x48);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x48438);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x48);
	add();
	load(0x2);
	bool_and();
	bool_or();
	push_offset(L033f4);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x1);
	push_dword(0x48438);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x1);
	neq();
	push_offset(L033f4);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x6);
	add();
	load(0x1);
	push_dword(0x48438);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x6);
	add();
	load(0x1);
	neq();
	push_offset(L033f4);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x8);
	add();
	push_dword(0x48438);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x8);
	add();
	cmd_69();
	push_offset(L033f4);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x28);
	add();
	push_dword(0x48438);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x28);
	add();
	cmd_69();
	push_offset(L033f4);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x54);
	memclr();
	push_dword(0x48438);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x54);
	memclr();

L033f4:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xd);
	lt();
	push_offset(L03230);
	jc(0x0);

L0340e:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03415:
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x1);
	push_offset(L0343d);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x1f4);
	snd1(0x19);

L0343d:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xd);
	lt();
	push_offset(L03415);
	jc(0x0);

L03457:
	push_word(0x7c4);
	load(0x2);
	sys1(0xd1);
	push_word(0x7c8);
	load(0x2);
	sys1(0xd1);
	push_word(0x7d8);
	load(0x2);
	sys1(0xd1);
	push_word(0x7f4);
	load(0x2);
	sys1(0xd1);
	push_byte(0x1);
	sys1(0x14);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_offset(L0348c);
	jc(0x0);
	push_word(0x700);
	sys1(0x19);

L0348c:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L03492:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L034b6);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_offset(L034d2);
	jmp();

L034b6:
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L034d2);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);

L034d2:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L0361c);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x22120);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0361c);
	jc(0x1);
	push_base_offset(0x30);
	push_word(0x400);
	push_byte(0x57);
	add();
	grp1(0x16);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	lt();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0xc);
	push_dword(0x9fab8);
	push_dword(0x220e8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x30);
	push_byte(0xc);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	gt();
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x14);
	push_word(0x3c0);
	push_word(0x2d0);
	sub();
	push_base_offset(0x8);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	lt();
	push_word(0x2d0);
	push_base_offset(0x14);
	load(0x2);
	add();
	push_word(0x2d0);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	sar();
	add();
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	sub();
	move(0x2);

L0361c:
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();

L0362c:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L0365a);
	jc(0x1);
	push_base_offset(0x4);
	push_word(0x3c0);
	push_word(0x2d0);
	sub();
	move(0x2);

L0365a:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x6);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L036bc);
	jc(0x1);
	push_byte(0x20);
	push_word(0x12e);
	add();
	load(0x1);
	push_byte(0x2);
	eq();
	push_offset(L036bc);
	jc(0x1);
	push_base_offset(0x20);
	push_word(0x400);
	push_byte(0x5a);
	add();
	grp1(0x16);
	push_base_offset(0x4);
	push_word(0x2d0);
	push_base_offset(0x20);
	push_byte(0xc);
	add();
	load(0x2);
	sub();
	push_word(0x1c7);
	sub();
	move(0x2);

L036bc:
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L036cc:
	load_base();
	push_byte(0x34);
	add();
	store_base();
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	push_offset(L0372e);
	jc(0x0);
	push_base_offset(0x18);
	push_base_offset(0x34);
	load(0x2);
	grp1(0x16);
	push_base_offset(0x28);
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x24);
	push_base_offset(0x18);
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);

L0372e:
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x1);
	sar();
	push_base_offset(0x30);
	load(0x2);
	add();
	push_base_offset(0x20);
	load(0x2);
	add();
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1);
	sub();
	push_base_offset(0x2c);
	load(0x2);
	add();
	push_base_offset(0x1c);
	load(0x2);
	add();
	load_base();
	push_byte(0x34);
	sub();
	store_base();
	ret();

L0375c:
	load_base();
	push_byte(0x1c);
	add();
	store_base();
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x18);
	push_base_offset(0x1c);
	load(0x2);
	grp1(0x16);
	push_byte(0x0);
	push_base_offset(0x18);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	load_base();
	push_byte(0x1c);
	sub();
	store_base();
	ret();

L03783:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3e1a0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L0382d);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_offset(L037ef);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	grp2(0xf2);
	push_offset(L03821);
	jmp();

L037ef:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_offset(L03821);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	grp2(0xf6);

L03821:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x3c);
	memclr();
	push_offset(L0383b);
	jmp();

L0382d:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L03e98);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L0383b:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L03846:
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L038da);
	call();
	push_offset(L038cf);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	push_offset(L03aef);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L038cf:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();

L038da:
	load_base();
	push_word(0x88);
	add();
	store_base();
	push_base_offset(0x64);
	move_arg(0x2);
	push_base_offset(0x68);
	move_arg(0x2);
	push_base_offset(0x6c);
	move_arg(0x2);
	push_base_offset(0x70);
	move_arg(0x2);
	push_base_offset(0x74);
	move_arg(0x2);
	push_base_offset(0x78);
	move_arg(0x2);
	push_base_offset(0x7c);
	move_arg(0x2);
	push_base_offset(0x80);
	move_arg(0x2);
	push_base_offset(0x84);
	move_arg(0x2);
	push_base_offset(0x88);
	move_arg(0x2);
	push_base_offset(0x5c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x88);
	load(0x2);
	push_offset(L03783);
	call();
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x1);
	geq();
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x3);
	lt();
	bool_and();
	push_offset(L0396d);
	jc(0x1);
	push_base_offset(0x88);
	load(0x2);
	push_base_offset(0x84);
	load(0x2);
	push_base_offset(0x80);
	load(0x2);
	push_base_offset(0x7c);
	load(0x2);
	push_base_offset(0x74);
	load(0x2);
	push_base_offset(0x70);
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	push_base_offset(0x68);
	load(0x2);
	push_offset(L03f85);
	call();
	push_base_offset(0x5c);
	move_arg(0x2);
	push_offset(L03ae3);
	jmp();

L0396d:
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x3);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_offset(L03ae3);
	jc(0x1);
	push_base_offset(0x84);
	load(0x2);
	push_base_offset(0x74);
	load(0x2);
	push_base_offset(0x70);
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	push_base_offset(0x64);
	load(0x2);
	grp3(0xf2);
	push_base_offset(0x60);
	move_arg(0x2);
	push_base_offset(0x60);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03ae3);
	jc(0x1);
	sys1(0x4);
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x40);
	load(0x2);
	push_word(0x7d0);
	add();
	move(0x2);

L039cb:
	push_word(0x504);
	load(0x2);
	push_offset(L03ae3);
	jc(0x0);
	push_base_offset(0x58);
	push_base_offset(0x84);
	load(0x2);
	grp1(0x16);
	push_offset(L03a13);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x60);
	move_arg(0x2);
	push_base_offset(0x60);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	geq();
	push_offset(L03a01);
	jc(0x0);
	sys1(0x5f);
	push_offset(L039cb);
	jmp();

L03a01:
	push_base_offset(0x84);
	load(0x2);
	grp2(0xf2);
	push_base_offset(0x84);
	load(0x2);
	grp1(0x12);
	push_offset(L03ae3);
	jmp();

L03a13:
	push_base_offset(0x3c);
	push_byte(0x3c);
	memclr();
	push_base_offset(0x3c);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x8);
	add();
	push_base_offset(0x6c);
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0xc);
	add();
	push_base_offset(0x84);
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x10);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x14);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x14);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x28);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x2c);
	add();
	push_base_offset(0x80);
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x30);
	add();
	push_base_offset(0x7c);
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x34);
	add();
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3e1a0);
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	push_base_offset(0x3c);
	push_byte(0x3c);
	memcpy();
	push_base_offset(0x5c);
	push_byte(0x1);
	move(0x2);

L03ae3:
	push_base_offset(0x5c);
	load(0x2);
	load_base();
	push_word(0x88);
	sub();
	store_base();
	ret();

L03aef:
	load_base();
	push_byte(0x34);
	add();
	store_base();
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x24);
	push_dword(0x3e1a0);
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03c6f);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L03c7d);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_offset(L03c7d);
	jc(0x1);
	push_base_offset(0x28);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	grp2(0xf1);
	push_offset(L03c62);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L03baa);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x28);
	load(0x2);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	add();
	move(0x2);

L03baa:
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x28);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_offset(L03c32);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x7d0);
	add();
	move(0x2);

L03bda:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L03c7d);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03c57);
	jc(0x1);
	push_base_offset(0x1c);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	grp1(0x16);
	push_offset(L03c62);
	jc(0x1);
	sys1(0x4);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	geq();
	push_offset(L03c32);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L03bda);
	jc(0x1);

L03c32:
	sys1(0x4);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	add();
	push_word(0xc8);
	add();
	move(0x2);

L03c57:
	push_base_offset(0x2c);
	push_byte(0x1);
	move(0x2);
	push_offset(L03c7d);
	jmp();

L03c62:
	push_base_offset(0x34);
	load(0x2);
	push_offset(L03783);
	call();
	push_offset(L03c7d);
	jmp();

L03c6f:
	push_base_offset(0x34);
	load(0x2);
	push_offset(L04109);
	call();
	push_base_offset(0x2c);
	move_arg(0x2);

L03c7d:
	push_base_offset(0x2c);
	load(0x2);
	load_base();
	push_byte(0x34);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3e1a0);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03d2a);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x0);
	add();
	eq();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_offset(L03d47);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_offset(L03d47);
	jmp();

L03d2a:
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0438c);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L03d47:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3e1a0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03d9e);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	grp3(0xf6);

L03d9e:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x3e1a0);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x3c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03e7a);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03e8d);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L03e02);
	jc(0x1);
	push_word(0x720);
	sys1(0x18);

L03e02:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L03e67);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L03e67);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L03e35);
	jc(0x1);
	sys1(0x17);
	push_offset(L03e67);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L03e67);
	jc(0x0);

L03e35:
	sys1(0x4);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	geq();
	push_offset(L03e60);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03e02);
	jc(0x0);

L03e60:
	push_base_offset(0xc);
	push_byte(0x1);
	move(0x2);

L03e67:
	push_base_offset(0x10);
	load(0x2);
	push_offset(L03e76);
	jc(0x1);
	push_word(0x720);
	sys1(0x19);

L03e76:
	push_offset(L03e8d);
	jmp();

L03e7a:
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L044cb);
	call();
	push_base_offset(0xc);
	move_arg(0x2);

L03e8d:
	push_base_offset(0xc);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L03e98:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_offset(L044a4);
	call();
	push_base_offset(0x8);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03efc);
	jc(0x1);
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_word(0x13c);
	memclr();
	push_base_offset(0x4);
	load(0x2);
	grp1(0xf5);

L03efc:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x24);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03f85);
	call();
	push_offset(L03f7a);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L04109);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L03f7a:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x24);
	sub();
	store_base();
	ret();

L03f85:
	load_base();
	push_word(0x160);
	add();
	store_base();
	push_base_offset(0x144);
	move_arg(0x2);
	push_base_offset(0x148);
	move_arg(0x2);
	push_base_offset(0x14c);
	move_arg(0x2);
	push_base_offset(0x150);
	move_arg(0x2);
	push_base_offset(0x154);
	move_arg(0x2);
	push_base_offset(0x158);
	move_arg(0x2);
	push_base_offset(0x15c);
	move_arg(0x2);
	push_base_offset(0x160);
	move_arg(0x2);
	push_offset(L044a4);
	call();
	push_base_offset(0x160);
	load(0x2);
	push_offset(L03e98);
	call();
	push_base_offset(0x13c);
	push_word(0x13c);
	memclr();
	push_base_offset(0x13c);
	push_byte(0x8);
	add();
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x1);
	grp3(0xf1);
	push_base_offset(0x140);
	move_arg(0x2);
	push_base_offset(0x140);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03ffb);
	jc(0x0);
	push_string("無効な形式のファイルが指定されました");
	cmd_79();
	push_offset(L040fa);
	jmp();

L03ffb:
	push_base_offset(0x13c);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x20);
	add();
	push_base_offset(0x148);
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x24);
	add();
	push_base_offset(0x144);
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x28);
	add();
	push_base_offset(0x15c);
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x2c);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x30);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x30);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x38);
	add();
	push_base_offset(0x158);
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x3c);
	add();
	push_base_offset(0x154);
	load(0x2);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x40);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x44);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x48);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x13c);
	push_byte(0x4c);
	add();
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L04428);
	call();
	push_base_offset(0x15c);
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0xc);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	grp1(0x11);
	push_base_offset(0x15c);
	load(0x2);
	push_base_offset(0x13c);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0xf6);
	push_dword(0x3ea10);
	push_base_offset(0x160);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_base_offset(0x13c);
	push_word(0x13c);
	memcpy();

L040fa:
	push_base_offset(0x140);
	load(0x2);
	push_byte(0x0);
	eq();
	load_base();
	push_word(0x160);
	sub();
	store_base();
	ret();

L04109:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0415f);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L0415f);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L0415f:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_offset(L044a4);
	call();
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L04263);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L03e98);
	call();
	push_base_offset(0xc);
	load(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x28);
	add();
	load(0x2);
	grp2(0x1f);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_word(0x13c);
	memcpy();
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x28);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x2c);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x30);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x30);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_word(0x13c);
	memclr();

L04263:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_offset(L044a4);
	call();
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L04327);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x28);
	add();
	load(0x2);
	grp2(0x1f);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_word(0x13c);
	memcpy();
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x8);
	add();
	push_dword(0x3ea10);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	grp1(0xf7);
	push_dword(0x3ea10);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x28);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);

L04327:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_offset(L044a4);
	call();
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L04381);
	jc(0x1);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x3c);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L04381:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0438c:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_offset(L044a4);
	call();
	push_base_offset(0x4);
	push_dword(0x3ea10);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0441d);
	jc(0x1);
	push_dword(0x3ea10);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x2c);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x30);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x30);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L0441d:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L04428:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);

L04445:
	push_base_offset(0x4);
	push_word(0x3e8);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	mul();
	push_base_offset(0x10);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	lt();
	push_offset(L04445);
	jc(0x0);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L044a4:
	load_base();
	push_byte(0x0);
	add();
	store_base();

L044a9:
	push_word(0x504);
	load(0x2);
	push_offset(L044c5);
	jc(0x0);
	push_dword(0x41680);
	load(0x2);
	push_offset(L044c5);
	jc(0x1);
	sys1(0x5f);
	push_offset(L044a9);
	jmp();

L044c5:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L044cb:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L044f0);
	jc(0x1);
	push_word(0x720);
	sys1(0x18);

L044f0:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L04568);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L04568);
	jc(0x0);
	push_dword(0x41680);
	load(0x2);
	push_offset(L044f0);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L0452f);
	jc(0x1);
	sys1(0x17);
	push_offset(L04568);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L04568);
	jc(0x0);

L0452f:
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_offset(L04568);
	jc(0x0);
	push_dword(0x3ea10);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L044f0);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);

L04568:
	push_base_offset(0x8);
	load(0x2);
	push_offset(L04577);
	jc(0x1);
	push_word(0x720);
	sys1(0x19);

L04577:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x3ea10);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x13c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L045a6:
	load_base();
	push_word(0xd0);
	add();
	store_base();
	push_base_offset(0xd0);
	move_arg(0x2);
	push_base_offset(0xcc);
	push_word(0x91c);
	load(0x2);
	move(0x2);
	push_word(0x91c);
	push_base_offset(0xd0);
	load(0x2);
	move(0x2);
	push_base_offset(0x40);
	push_byte(0x20);
	push_word(0xb6);
	add();
	move(0x2);
	push_base_offset(0x3c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x38);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc4);
	push_byte(0x0);
	move(0x2);

L04601:
	push_base_offset(0x3c);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0xd);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x11);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x34);
	push_base_offset(0x34);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x26);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x30);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x28);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x21);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0x28);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0xc4);
	load(0x2);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x22);
	eq();
	bool_or();
	move(0x2);
	push_base_offset(0xc4);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc4);
	load(0x2);
	push_byte(0xc);
	lt();
	push_offset(L04601);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0470d);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L0475b);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L047cb);
	jc(0x0);
	push_base_offset(0xd0);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L04815);
	jc(0x0);
	push_offset(L049b5);
	jmp();

L0470d:
	push_base_offset(0xc0);
	push_byte(0xe);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0xf);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L0485f);
	jmp();

L0475b:
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1);
	ternary();
	push_base_offset(0xc8);
	move_arg(0x2);
	push_base_offset(0x80);
	push_base_offset(0xc8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x3);
	push_base_offset(0xd0);
	load(0x2);
	push_offset(L049c1);
	call();
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L0485f);
	jmp();

L047cb:
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L0485f);
	jmp();

L04815:
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x40);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0xc0);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x80);
	push_base_offset(0xc0);
	sys1(0x1b);
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x0);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xd);
	ternary();
	push_base_offset(0x80);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_word(0x100);
	push_base_offset(0x80);
	sys1(0x1b);
	push_offset(L0485f);
	jmp();

L0485f:
	push_base_offset(0x24);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_word(0x200);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x4);
	push_base_offset(0x24);
	move(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_offset(L0489a);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x26);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L0489a:
	push_base_offset(0x2c);
	load(0x2);
	push_offset(L048bd);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x21);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L048bd:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_word(0x1000);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x4);
	push_base_offset(0x24);
	move(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_offset(L048f9);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L048f9:
	push_base_offset(0x28);
	load(0x2);
	push_offset(L0491c);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x22);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L0491c:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_word(0x2000);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x4);
	push_base_offset(0x24);
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x0);
	push_word(0xff);
	and();
	push_byte(0x0);
	neq();
	push_offset(L04970);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x0);
	push_word(0xff);
	and();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L04970:
	push_base_offset(0x38);
	load(0x2);
	push_offset(L04993);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x11);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);

L04993:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_dword(-0x80000000);
	push_base_offset(0x24);
	sys1(0x1b);
	push_base_offset(0x24);
	push_byte(0x0);
	cmd_0c(0x2, 0x1);
	push_byte(0x1);
	push_base_offset(0x24);
	sys1(0x62);

L049b5:
	push_base_offset(0xcc);
	load(0x2);
	load_base();
	push_word(0xd0);
	sub();
	store_base();
	ret();

L049c1:
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x24);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x24);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0xe);
	move(0x2);
	push_base_offset(0x24);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0xf);
	move(0x2);
	push_base_offset(0x2c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x38);
	load(0x2);
	move(0x2);
	push_base_offset(0x28);
	push_byte(0x0);
	move(0x2);

L04a14:
	push_byte(0x20);
	push_word(0xc6);
	add();
	push_base_offset(0x28);
	load(0x2);
	add();
	load(0x0);
	push_base_offset(0x34);
	load(0x2);
	neq();
	push_offset(L04a5f);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x24);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move(0x2);
	push_base_offset(0x2c);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L04a5f:
	push_base_offset(0x28);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L04a14);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2c);
	load(0x2);
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();

L04a8d:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0xc);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04aec);
	jc(0x1);
	push_base_offset(0x10);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	cmd_0c(0x2, 0x4);
	push_dword(0x42768);
	push_byte(0xc);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x10);
	sys1(0x4a);

L04aec:
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L04af2:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L04b0d:
	push_base_offset(0x4);
	push_word(0x930);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L04b6a);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_offset(L04b84);
	jmp();

L04b6a:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L04b0d);
	jc(0x0);

L04b84:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L04b8a:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L04b9b:
	push_base_offset(0x4);
	push_word(0x930);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L04bea);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L04a8d);
	call();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	memclr();

L04bea:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L04b9b);
	jc(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L04c0a:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9b8);
	load(0x2);
	push_offset(L04c49);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x2);
	push_dword(-0x3);
	push_offset(L04af2);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L04b8a);
	call();
	push_word(0x9b8);
	push_byte(0x1);
	move(0x2);

L04c49:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L04c4f:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9bc);
	load(0x2);
	push_offset(L04c8e);
	jc(0x0);
	push_byte(0x1);
	push_byte(0x3);
	push_dword(-0x3);
	push_offset(L04af2);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L04b8a);
	call();
	push_word(0x9bc);
	push_byte(0x1);
	move(0x2);

L04c8e:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L04c94:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9b8);
	load(0x2);
	push_offset(L04cd6);
	jc(0x1);
	push_dword(-0x1);
	push_byte(0x2);
	push_dword(-0x3);
	push_offset(L04af2);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L04b8a);
	call();
	push_word(0x9b8);
	push_byte(0x0);
	move(0x2);

L04cd6:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L04cdc:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9bc);
	load(0x2);
	push_offset(L04d1e);
	jc(0x1);
	push_dword(-0x1);
	push_byte(0x3);
	push_dword(-0x3);
	push_offset(L04af2);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L04b8a);
	call();
	push_word(0x9bc);
	push_byte(0x0);
	move(0x2);

L04d1e:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L04d40);
	jc(0x1);
	push_offset(L04c0a);
	call();
	push_offset(L04d44);
	jmp();

L04d40:
	push_offset(L04c94);
	call();

L04d44:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L04d66);
	jc(0x1);
	push_offset(L04c4f);
	call();
	push_offset(L04d6a);
	jmp();

L04d66:
	push_offset(L04cdc);
	call();

L04d6a:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L04d81:
	push_base_offset(0x4);
	push_word(0x92c);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04dc9);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04dc9);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	grp2(0x31);

L04dc9:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L04d81);
	jc(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L04de9:
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x0);
	gt();
	push_byte(0x32);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x1);
	sar();
	add();
	push_byte(0x0);
	ternary();
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x38);
	load(0x2);
	push_word(0x80);
	mul();
	push_byte(0x65);
	push_byte(0x1);
	sub();
	div();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();

L04e30:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x22);
	add();
	load(0x1);
	push_offset(L04de9);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x32);
	add();
	load(0x1);
	push_offset(L04de9);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_byte(0x20);
	push_word(0x8e);
	add();
	load(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_byte(0x20);
	push_word(0x90);
	add();
	load(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x80);
	push_base_offset(0xc);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_word(0x80);
	div();
	push_base_offset(0x4);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	ternary();
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x41684);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x174);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L04ee6:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x41684);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x174);
	mul();
	add();
	move(0x2);

L04f04:
	push_word(0x504);
	load(0x2);
	push_offset(L04f2f);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L04f2f);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04f2f);
	jc(0x1);
	sys1(0x5f);
	push_offset(L04f04);
	jmp();

L04f2f:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L04f44:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_word(0x710);
	sys1(0x18);
	push_base_offset(0x4);
	push_dword(0x41684);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x174);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	move(0x2);

L04f75:
	push_word(0x504);
	load(0x2);
	push_offset(L04fba);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L04fba);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04fba);
	jc(0x1);
	sys1(0x17);
	push_offset(L04fb1);
	jc(0x0);
	push_word(0x710);
	sys1(0x1a);
	push_offset(L04fb1);
	jc(0x0);
	sys1(0x5f);
	push_offset(L04f75);
	jmp();

L04fb1:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	move(0x2);

L04fba:
	push_word(0x710);
	sys1(0x19);
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x41684);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x174);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x170);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_offset(L05059);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L05046);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L04ee6);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_offset(L05059);
	jmp();

L05046:
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L04f44);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L05059:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L05064:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x41684);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x174);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L050b0);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L04ee6);
	call();

L050b0:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L050bb:
	load_base();
	push_byte(0x1c);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L05064);
	call();
	push_base_offset(0xc);
	push_dword(0x41684);
	push_base_offset(0x1c);
	load(0x2);
	push_word(0x174);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x174);
	memclr();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x3e);
	push_base_offset(0x1c);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0x18);
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x170);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L0514a:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2c);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2c);
	mul();
	add();
	push_byte(0x24);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2c);
	mul();
	add();
	push_byte(0x28);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2c);
	mul();
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	cmd_6a();
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	lt();
	push_offset(L0514a);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("audioctrlst._bp");
	push_word(0x100);
	push_word(0x4000);
	push_word(0x4000);
	sys1(0x44);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	sys1(0x48);
	load_base();
	push_byte(0x1c);
	sub();
	store_base();
	ret();
