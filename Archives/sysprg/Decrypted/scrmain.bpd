	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_word(0x4e8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x0);
	add();
	load(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	push_dword(0x9fab8);
	push_word(0x110);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x118);
	add();
	push_dword(0x9fab8);
	push_word(0x11c);
	add();
	load(0x2);
	move(0x2);

L00054:
	push_dword(0x9fab8);
	push_word(0x110);
	add();
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x11c);
	add();
	push_dword(0x9fab8);
	push_word(0x118);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_word(0xba8);
	load(0x2);
	move(0x2);
	push_word(0xba8);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_dword(0x9fab8);
	push_word(0x662c);
	add();
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x0);
	add();
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_dword(0x9fab8);
	push_word(0x662c);
	add();
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x30);
	add();
	load(0x2);
	sub();
	sys1(0x8b);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00235);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x24644);
	add();
	push_byte(0x20);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x24644);
	add();
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_dword(0x9fab8);
	push_word(0x662c);
	add();
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x0);
	add();
	cmd_6a();
	push_dword(0x9fab8);
	push_dword(0x24664);
	add();
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_dword(0x9fab8);
	push_word(0x662c);
	add();
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x30);
	add();
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x10);
	push_dword(0x9faa8);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x10);
	load(0x2);
	load(0x2);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x140);
	eq();
	push_offset(L0019a);
	jc(0x0);
	push_word(0xba8);
	load(0x2);
	push_offset(L001a4);
	jc(0x0);
	push_word(0xba8);
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_offset(L001a4);
	jmp();

L0019a:
	push_base_offset(0xc);
	push_word(0xba8);
	load(0x2);
	move(0x2);

L001a4:
	push_word(0xba8);
	load(0x2);
	push_offset(L001c6);
	jc(0x0);
	push_byte(0x20);
	push_word(0xb6);
	add();
	push_byte(0x4);
	add();
	load(0x0);
	push_word(0xff);
	and();
	sys1(0x11);
	push_offset(L001c6);
	jc(0x1);
	sys1(0x16);

L001c6:
	push_base_offset(0x4);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x0);
	add();
	load(0x1);
	bool_zero();
	bool_and();
	push_base_offset(0x4);
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x0);
	add();
	load(0x1);
	bool_and();
	bool_or();
	push_offset(L00218);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_word(0xba8);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0x8);
	load(0x2);
	bool_zero();
	push_word(0xba8);
	load(0x2);
	bool_and();
	bool_or();
	push_offset(L00235);
	jc(0x1);

L00218:
	push_dword(0x43f0c);
	load(0x2);
	call();
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x21458);
	add();
	push_byte(0x0);
	add();
	load(0x1);
	move(0x2);

L00235:
	push_dword(0x15d620);
	load(0x2);
	push_offset(L00253);
	jc(0x1);
	push_dword(0x15d61c);
	push_byte(0x1);
	move(0x2);
	push_dword(0x15d620);
	push_byte(0x0);
	move(0x2);

L00253:
	push_word(0x504);
	load(0x2);
	push_offset(L0060b);
	jc(0x0);
	push_word(0xacc);
	load(0x2);
	push_offset(L0028b);
	jc(0x0);
	push_dword(0x15d624);
	load(0x2);
	push_offset(L0028b);
	jc(0x0);
	push_word(0x450);
	load(0x2);
	push_offset(L0028b);
	jc(0x0);
	push_word(0x928);
	load(0x2);
	push_offset(L0028b);
	jc(0x0);
	push_offset(L00291);
	jmp();

L0028b:
	sys1(0x5f);
	push_offset(L00253);
	jmp();

L00291:
	push_offset(L00dce);
	call();
	push_offset(L00253);
	jc(0x1);
	push_offset(L006ec);
	call();
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L0060b);
	jc(0x0);
	push_dword(0x9fab8);
	push_word(0x114);
	add();
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x10);
	push_dword(0x9faa8);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x10);
	load(0x2);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	load(0x2);
	push_byte(0x4);
	add();
	move(0x2);
	push_word(0xad4);
	push_byte(0x0);
	move(0x2);
	push_word(0xad8);
	push_dword(0x9fab8);
	push_word(0x114);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_dword(0x9fab8);
	push_word(0x662c);
	add();
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x30);
	add();
	load(0x2);
	sub();
	move(0x2);
	push_word(0xadc);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_dword(0x9fab8);
	push_word(0x662c);
	add();
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x0);
	add();
	move(0x2);
	push_word(0xb24);
	push_byte(0x1);
	move(0x2);
	push_dword(0x45f10);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L003f2);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x7f);
	eq();
	push_offset(L003f2);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0xfe);
	eq();
	push_offset(L0039e);
	jc(0x1);
	push_dword(0x45f10);
	push_dword(0x45f10);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_offset(L003f2);
	jmp();

L0039e:
	push_base_offset(0x14);
	load(0x2);
	push_word(0x140);
	eq();
	push_offset(L003e9);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L003e7);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1c);
	eq();
	push_offset(L003e7);
	jc(0x0);
	push_dword(0x45f10);
	push_dword(0x45f10);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_dword(0x45f10);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L003f2);
	jc(0x0);

L003e7:
	sys1(0x5f);

L003e9:
	push_dword(0x45f10);
	push_byte(0x0);
	move(0x2);

L003f2:
	push_byte(0x0);
	push_offset(L00417);
	jc(0x1);
	push_base_offset(0x18);
	push_byte(0x4);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x14);
	load(0x2);
	push_word(0x500);
	lt();
	bool_and();
	push_offset(L0042d);
	jc(0x1);

L00417:
	push_dword(0x42af8);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	push_base_offset(0x18);
	move_arg(0x2);

L0042d:
	push_word(0xb24);
	push_byte(0x0);
	move(0x2);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L005b7);
	jc(0x1);
	push_dword(0x4887c);
	push_byte(0x0);
	move(0x2);
	push_dword(0x4888c);
	load(0x2);
	push_offset(L00462);
	jc(0x1);
	push_dword(0x4888c);
	push_byte(0x0);
	move(0x2);
	push_offset(L005b7);
	jmp();

L00462:
	push_base_offset(0x14);
	load(0x2);
	push_word(0x140);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x160);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x168);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x169);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x16a);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x110);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x111);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x113);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x139);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1a4);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1a7);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1ac);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x229);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x25f);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x27f);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x2df);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x2fc);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x31f);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x33f);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x3af);
	eq();
	push_offset(L0057e);
	jc(0x0);
	push_offset(L005b7);
	jmp();

L0057e:
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	push_dword(0x9fab8);
	push_word(0x110);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x118);
	add();
	push_dword(0x9fab8);
	push_word(0x11c);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x48890);
	push_byte(0x1);
	move(0x2);
	push_offset(L005fe);
	jmp();

L005b7:
	push_word(0xad0);
	load(0x2);
	push_offset(L005fe);
	jc(0x1);
	push_word(0xad4);
	load(0x2);
	push_byte(0x0);
	gt();
	push_word(0xad4);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x114);
	add();
	load(0x2);
	sub();
	ternary();
	push_word(0xad4);
	move_arg(0x2);
	push_word(0xadc);
	load(0x2);
	push_word(0xad8);
	load(0x2);
	push_byte(0x1);
	push_word(0xad4);
	load(0x2);
	sys1(0x8a);

L005fe:
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00054);
	jc(0x0);

L0060b:
	push_dword(0x483f4);
	load(0x2);
	push_offset(L00687);
	jc(0x1);
	push_word(0x440);
	load(0x2);
	push_offset(L00687);
	jc(0x0);
	push_word(0x448);
	load(0x2);
	push_offset(L00687);
	jc(0x0);
	push_word(0x7cc);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00687);
	jc(0x0);
	push_word(0xed4);
	push_word(0xec2);
	grp2(0x1f);
	push_dword(0x42ac8);
	load(0x2);
	push_word(0xed4);
	grp1(0x57);
	push_word(0xec2);
	grp1(0x4);
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0xec2);
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x8d0);
	grp1(0x56);
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x1);
	grp1(0x54);
	push_dword(0x42ae8);
	load(0x2);
	push_word(0x730);
	push_byte(0x1);
	sub();
	grp1(0x3a);
	push_word(0xed4);
	grp1(0x12);

L00687:
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	push_offset(L006ae);
	jc(0x0);
	push_byte(0x1);
	push_dword(0x43f10);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	push_byte(0x1);
	move(0x2);

L006ae:
	push_dword(0x43f14);
	load(0x2);
	call();
	push_dword(0x43f20);
	load(0x2);
	call();

L006be:
	sys1(0x5f);
	push_word(0x450);
	load(0x2);
	push_offset(L006be);
	jc(0x0);
	push_dword(0x42768);
	push_byte(0xb);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L006be);
	jc(0x0);
	push_word(0x4e8);
	push_byte(0x0);
	move(0x2);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L006ec:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);
	push_word(0xbd8);
	load(0x2);
	push_offset(L0098b);
	jc(0x1);
	push_word(0xbdc);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00723);
	jc(0x1);
	push_offset(L00996);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_offset(L00972);
	jmp();

L00723:
	push_dword(0x9fab8);
	push_word(0x6d34);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L0096e);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0x6d34);
	add();
	push_dword(0x9fab8);
	push_word(0x6d34);
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_word(0x6d38);
	add();
	push_dword(0x9fab8);
	push_word(0x6d34);
	add();
	load(0x2);
	push_byte(0x18);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00723);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_word(0xbdc);
	load(0x2);
	eq();
	push_offset(L007e1);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L007b5);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x8538);
	add();
	push_byte(0x0);
	move(0x2);
	push_offset(L00723);
	jmp();

L007b5:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00723);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x8540);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	push_byte(0x1);
	move(0x2);
	push_offset(L00723);
	jmp();

L007e1:
	push_dword(0x9fab8);
	push_word(0x6d34);
	add();
	push_dword(0x9fab8);
	push_word(0x6d34);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x43f60);
	load(0x2);
	call();

L00802:
	push_dword(0x9fab8);
	push_dword(0x8544);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L008f6);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x8548);
	add();
	push_dword(0x9fab8);
	push_dword(0x8544);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	sub();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	leq();
	push_offset(L008f6);
	jc(0x0);
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	move(0x2);
	push_word(0xb10);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2c);
	add();
	load(0x2);
	move(0x2);
	push_word(0xae0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	cmd_6a();
	push_word(0xadc);
	push_word(0xae0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x38);
	memclr();
	push_dword(0x45c10);
	push_word(0x100);
	memclr();
	push_dword(0x9fab8);
	push_dword(0x8544);
	add();
	push_dword(0x9fab8);
	push_dword(0x8544);
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x8548);
	add();
	push_dword(0x9fab8);
	push_dword(0x8544);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x0);
	move(0x2);
	push_offset(L00802);
	jmp();

L008f6:
	push_dword(0x9fab8);
	push_dword(0x8544);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x8548);
	add();
	push_byte(0x20);
	push_byte(0x4);
	mul();
	memclr();
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x118);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x528);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x662c);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	move(0x2);
	push_offset(L00972);
	jmp();

L0096e:
	push_string("ジャンピングを実行しようとしましたが、対応する例外処理情報が発見できませんでした");
	cmd_79();

L00972:
	push_word(0xbd8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L0098b);
	jc(0x1);
	push_dword(0x43f0c);
	load(0x2);
	call();

L0098b:
	push_base_offset(0xc);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L00996:
	load_base();
	push_word(0x244);
	add();
	store_base();
	push_base_offset(0x244);
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x24634);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L009c0);
	jc(0x0);
	push_string("ジャンプ先スクリプトが指定されていないためジャンプできません");
	cmd_79();
	push_offset(L00da2);
	jmp();

L009c0:
	push_base_offset(0x23c);
	push_byte(0x0);
	push_dword(0x9fab8);
	push_dword(0x24634);
	add();
	load(0x2);
	sys1(0xdd);
	push_offset(L009e1);
	jc(0x1);
	push_string("ジャンプ先スクリプトが取得できませんでした");
	cmd_79();
	push_offset(L00da2);
	jmp();

L009e1:
	push_dword(0x9fab8);
	push_dword(0x24638);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00a01);
	jc(0x0);
	push_base_offset(0x13c);
	push_word(0x100);
	memclr();
	push_offset(L00a22);
	jmp();

L00a01:
	push_base_offset(0x13c);
	push_byte(0x0);
	push_dword(0x9fab8);
	push_dword(0x24638);
	add();
	load(0x2);
	sys1(0xdd);
	push_offset(L00a22);
	jc(0x1);
	push_string("ジャンプ先ラベルが取得できませんでした");
	cmd_79();
	push_offset(L00da2);
	jmp();

L00a22:
	push_base_offset(0x240);
	push_byte(0x0);
	move(0x2);

L00a29:
	push_base_offset(0x240);
	load(0x2);
	push_word(0x12c);
	push_dword(0x44034);
	load(0x2);
	call();
	push_base_offset(0x240);
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L00a29);
	jc(0x0);
	push_base_offset(0x240);
	push_byte(0x0);
	move(0x2);

L00a5a:
	push_base_offset(0x240);
	load(0x2);
	push_dword(0x4403c);
	load(0x2);
	call();
	push_base_offset(0x240);
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L00a5a);
	jc(0x0);
	push_base_offset(0x240);
	push_byte(0x0);
	move(0x2);

L00a88:
	push_byte(0x4);
	push_base_offset(0x240);
	load(0x2);
	add();
	push_word(0x190);
	push_byte(0x0);
	push_dword(0x44030);
	load(0x2);
	call();
	push_base_offset(0x240);
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x5);
	lt();
	push_offset(L00a88);
	jc(0x0);
	push_base_offset(0x240);
	push_byte(0x0);
	move(0x2);

L00abe:
	push_byte(0x9);
	push_base_offset(0x240);
	load(0x2);
	add();
	push_word(0x190);
	push_byte(0x0);
	push_dword(0x44030);
	load(0x2);
	call();
	push_base_offset(0x240);
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x4);
	lt();
	push_offset(L00abe);
	jc(0x0);
	push_dword(0x42af8);
	push_word(0x151);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x1a544);
	add();
	push_byte(0x10);
	memclr();
	push_dword(0x9fab8);
	push_dword(0xd0b4);
	add();
	push_byte(0x20);
	push_word(0x69c);
	mul();
	memclr();
	push_base_offset(0x240);
	push_byte(0x0);
	move(0x2);

L00b23:
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x4);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(-0x80000000);
	push_dword(-0x80000000);
	push_byte(0x0);
	push_dword(-0x80000000);
	push_byte(0x0);
	push_dword(-0x80000000);
	push_dword(-0x80000000);
	push_dword(-0x80000000);
	push_dword(-0x80000000);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(-0x80000000);
	push_dword(-0x80000000);
	push_dword(-0x80000000);
	push_dword(-0x80000000);
	push_byte(0x0);
	push_dword(-0x80000000);
	push_byte(0x0);
	push_dword(-0x80000000);
	push_dword(-0x80000000);
	push_byte(0x4);
	push_byte(0x0);
	push_dword(-0x80000000);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0x43f6c);
	load(0x2);
	call();
	push_base_offset(0x240);
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x240);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L00b23);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_dword(0x43f5c);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_dword(0x86cc);
	add();
	push_word(0x27c);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x20);
	push_byte(0x4);
	mul();
	memclr();
	push_dword(0x9fab8);
	push_word(0x6d34);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L00c48);
	jc(0x1);
	push_dword(0x43f2c);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_word(0x6d34);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x6d38);
	add();
	push_word(0x100);
	push_byte(0x18);
	mul();
	memclr();
	push_dword(0x9fab8);
	push_word(0x520);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x8538);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0xbe0);
	push_byte(0x1);
	move(0x2);

L00c48:
	push_dword(0x9fab8);
	push_word(0x528);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_dword(0x9fab8);
	push_word(0x662c);
	add();
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_byte(0x38);
	memcpy();
	push_dword(0x9fab8);
	push_word(0x6634);
	add();
	push_word(0xb14);
	load(0x2);
	push_byte(0x38);
	mul();
	add();
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	load(0x2);
	push_word(0xb14);
	load(0x2);
	sub();
	push_byte(0x38);
	mul();
	memclr();
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	push_word(0xb14);
	load(0x2);
	move(0x2);
	push_word(0xb10);
	push_word(0xb18);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x8544);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x8548);
	add();
	push_byte(0x20);
	push_byte(0x4);
	mul();
	memclr();
	push_dword(0x9fab8);
	push_dword(0x85c8);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x662c);
	add();
	push_dword(0x9fab8);
	push_word(0x6630);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x23c);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x0);
	push_dword(0x43f4c);
	load(0x2);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00d2e);
	jc(0x0);
	push_string("処理を続行できない為、終了します");
	usr1(0x80);
	push_base_offset(0x244);
	push_byte(0x4);
	move(0x2);
	push_offset(L00dc2);
	jmp();

L00d2e:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	push_dword(0x9fab8);
	push_word(0x528);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0x10c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x45c10);
	push_word(0x100);
	memclr();
	push_dword(0x45c10);
	push_base_offset(0x13c);
	cmd_6a();
	push_dword(0x9fab8);
	push_word(0xbc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x9fab8);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0xabc);
	push_byte(0x1);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x2463c);
	add();
	push_byte(0x0);
	move(0x2);
	push_offset(L00dc2);
	jmp();

L00da2:
	push_word(0xac0);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00dc2);
	jc(0x1);
	push_word(0xac0);
	load(0x2);
	grp1(0x51);
	push_word(0xedc);
	grp1(0x12);
	push_word(0xac0);
	push_byte(0x0);
	move(0x2);

L00dc2:
	push_base_offset(0x244);
	load(0x2);
	load_base();
	push_word(0x244);
	sub();
	store_base();
	ret();

L00dce:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);
	push_dword(0x48880);
	load(0x2);
	push_offset(L00e37);
	jc(0x1);
	push_dword(0x488c8);
	push_dword(0x45c10);
	cmd_6a();
	push_dword(0x45c10);
	push_word(0x100);
	memclr();
	push_string("sys_clickscript");
	push_dword(0x44028);
	load(0x2);
	call();
	push_offset(L00e17);
	jc(0x1);
	push_dword(0x48884);
	push_byte(0x1);
	move(0x2);
	push_offset(L00e2e);
	jmp();

L00e17:
	push_dword(0x48888);
	push_byte(0x1);
	move(0x2);
	push_word(0xacc);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00e2e:
	push_dword(0x48880);
	push_byte(0x0);
	move(0x2);

L00e37:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
