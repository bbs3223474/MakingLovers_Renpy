	load_base();
	push_word(0xbc);
	add();
	store_base();
	sys1(0x46);
	push_dword(0x42768);
	push_byte(0x3);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x3);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x227a4);
	push_byte(0x52);
	push_word(0x1c0);
	mul();
	memclr();
	push_dword(0x2b724);
	push_byte(0x4);
	push_word(0x450);
	mul();
	memclr();
	push_dword(0x2c864);
	push_byte(0x40);
	push_byte(0x14);
	mul();
	memclr();
	push_dword(0x2cd64);
	push_byte(0x40);
	push_byte(0x34);
	mul();
	memclr();
	push_dword(0x2da64);
	push_byte(0x20);
	push_word(0x69c);
	mul();
	memclr();
	push_dword(0x3ade4);
	push_byte(0x10);
	memclr();
	push_dword(0x3adf4);
	push_byte(0x2c);
	memclr();
	push_dword(0x3ae20);
	push_byte(0x52);
	push_byte(0x6c);
	mul();
	memclr();
	push_dword(0x3d0b8);
	push_byte(0x52);
	push_byte(0x34);
	mul();
	memclr();
	push_dword(0x3e160);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3e160);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3e160);
	push_byte(0x30);
	add();
	push_byte(0x0);
	add();
	push_dword(0x9fab8);
	push_dword(0xa94c);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_dword(0x3e160);
	push_byte(0x30);
	add();
	push_byte(0x4);
	add();
	push_dword(0x9fab8);
	push_dword(0xa94c);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_dword(0x3e160);
	push_byte(0x30);
	add();
	push_byte(0x8);
	add();
	push_dword(0x9fab8);
	push_dword(0xa94c);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0xa8);
	push_string("mtnmngrslm._bp");
	push_string("mtnmngrslmx._bp");
	push_string("mtnmngrbcm._bp");
	push_string("mtnmngrsf._bp");
	push_string("mtnmngrsfo._bp");
	push_string("mtnmngrscs._bp");
	push_string("mtnmngrmc._bp");
	push_string("mtnmngrscm._bp");
	cmd_0c(0x2, 0x8);
	sys1(0x4);
	push_base_offset(0xb8);
	move_arg(0x2);
	push_base_offset(0x7c);
	push_base_offset(0xb8);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	add();
	move(0x2);

L00139:
	sys1(0x5f);
	push_base_offset(0x88);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x84);
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x80);
	move_arg(0x2);
	push_base_offset(0x78);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x7c);
	load(0x2);
	push_base_offset(0x80);
	load(0x2);
	leq();
	push_offset(L0019a);
	jc(0x1);
	push_base_offset(0x78);
	push_byte(0x1);
	push_base_offset(0x80);
	load(0x2);
	push_base_offset(0x7c);
	load(0x2);
	sub();
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	add();
	move(0x2);
	push_base_offset(0x7c);
	push_base_offset(0x7c);
	load(0x2);
	push_base_offset(0x78);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	mul();
	add();
	move(0x2);

L0019a:
	push_base_offset(0xb0);
	push_byte(0x0);
	move(0x2);

L001a1:
	push_base_offset(0x68);
	push_dword(0x227a4);
	push_base_offset(0xb0);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L002aa);
	jc(0x1);
	push_base_offset(0x88);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_word(0x4f4);
	load(0x2);
	bool_or();
	push_offset(L00242);
	jc(0x0);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0026a);
	jc(0x1);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x10);
	add();
	push_byte(0x1);
	move(0x2);
	push_string("sysprg.arc");
	push_base_offset(0xa8);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	push_word(0x100);
	push_dword(0x8000);
	push_dword(0x8000);
	sys1(0x44);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x14);
	add();
	move_arg(0x2);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0xb0);
	load(0x2);
	sys1(0x48);
	push_offset(L002aa);
	jmp();

L00242:
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L002a1);
	jc(0x1);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x4c);
	push_offset(L002aa);
	jmp();

L0026a:
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L002a1);
	jc(0x0);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L002aa);
	jc(0x1);
	push_base_offset(0x68);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x0);
	sys1(0x4c);
	push_offset(L002aa);
	jmp();

L002a1:
	push_base_offset(0x68);
	load(0x2);
	push_word(0x1c0);
	memclr();

L002aa:
	push_base_offset(0xb0);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x52);
	lt();
	push_offset(L001a1);
	jc(0x0);
	push_base_offset(0xb0);
	push_byte(0x0);
	move(0x2);

L002cb:
	push_base_offset(0x64);
	push_dword(0x2da64);
	push_base_offset(0xb0);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L003d3);
	jc(0x1);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L003d3);
	jc(0x1);
	push_base_offset(0x88);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00356);
	jc(0x1);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x10);
	add();
	push_byte(0x1);
	move(0x2);
	push_string("sysprg.arc");
	push_string("bsctrl._bp");
	push_word(0x400);
	push_dword(0x20000);
	push_dword(0x8000);
	sys1(0x44);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x14);
	add();
	move_arg(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0xb0);
	load(0x2);
	sys1(0x48);
	push_offset(L003d3);
	jmp();

L00356:
	push_base_offset(0x64);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_word(0x4f4);
	load(0x2);
	bool_or();
	push_offset(L00393);
	jc(0x1);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L003ca);
	jc(0x1);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x4c);
	push_offset(L003d3);
	jmp();

L00393:
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L003ca);
	jc(0x0);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L003d3);
	jc(0x1);
	push_base_offset(0x64);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x1);
	push_byte(0x0);
	sys1(0x4c);
	push_offset(L003d3);
	jmp();

L003ca:
	push_base_offset(0x64);
	load(0x2);
	push_word(0x69c);
	memclr();

L003d3:
	push_base_offset(0xb0);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L002cb);
	jc(0x0);
	push_dword(0x3adf4);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L005a6);
	jc(0x1);
	push_dword(0x3adf4);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0042f);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_dword(0x3adf4);
	push_byte(0x8);
	add();
	load(0x2);
	lt();
	push_offset(L005a6);
	jc(0x0);
	push_dword(0x3adf4);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);

L0042f:
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L005a6);
	jc(0x1);
	push_base_offset(0xb8);
	push_dword(0x3adf4);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x78);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0xb8);
	load(0x2);
	push_dword(0x3adf4);
	push_byte(0x1c);
	add();
	load(0x2);
	lt();
	push_dword(0x3adf4);
	push_byte(0x4);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0xb8);
	load(0x2);
	push_dword(0x3adf4);
	push_byte(0x1c);
	add();
	load(0x2);
	ternary();
	push_dword(0x3adf4);
	push_byte(0x18);
	add();
	move_arg(0x2);
	push_dword(0x3adf4);
	push_byte(0xc);
	add();
	load(0x2);
	push_dword(0x3adf4);
	push_byte(0x18);
	add();
	load(0x2);
	push_dword(0x3adf4);
	push_byte(0x14);
	add();
	load(0x2);
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	load(0x2);
	sub();
	mul();
	push_dword(0x3adf4);
	push_byte(0x1c);
	add();
	load(0x2);
	div();
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	load(0x2);
	add();
	grp1(0x32);
	push_base_offset(0x84);
	push_byte(0x1);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x18);
	add();
	load(0x2);
	push_dword(0x3adf4);
	push_byte(0x1c);
	add();
	load(0x2);
	lt();
	push_offset(L005a6);
	jc(0x0);
	push_dword(0x3adf4);
	push_byte(0x20);
	add();
	load(0x2);
	push_offset(L00575);
	jc(0x1);
	push_base_offset(0x60);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x38);
	push_dword(0x3adf4);
	push_byte(0xc);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x60);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x60);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x740);
	grp1(0x56);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	grp1(0x12);
	push_offset(L0059e);
	jmp();

L00575:
	push_dword(0x3adf4);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L0059e);
	jc(0x1);
	push_dword(0x3adf4);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x30);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	load(0x2);
	grp1(0x12);

L0059e:
	push_dword(0x3adf4);
	push_byte(0x2c);
	memclr();

L005a6:
	push_base_offset(0x74);
	push_base_offset(0x78);
	load(0x2);
	move(0x2);

L005b0:
	push_base_offset(0x74);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L00a64);
	jc(0x1);
	push_base_offset(0xb0);
	push_byte(0x0);
	move(0x2);

L005c4:
	push_base_offset(0x40);
	push_dword(0x3ae20);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L00a39);
	jc(0x1);
	push_base_offset(0xac);
	push_word(0x100);
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_offset(L00655);
	jc(0x1);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L009f2);
	jc(0x1);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x2c);
	add();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x2c);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xac);
	push_word(0x100);
	push_word(0x100);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x2c);
	add();
	load(0x2);
	mul();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	div();
	sub();
	move(0x2);
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L009f2);
	jc(0x1);

L00655:
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x3c);
	add();
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	lt();
	push_offset(L0085e);
	jc(0x0);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L009f2);
	jc(0x1);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x2);
	mul();
	push_byte(0x1);
	add();
	sys1(0x2);
	push_base_offset(0xb8);
	move_arg(0x2);
	push_base_offset(0xb4);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x48);
	add();
	load(0x2);
	push_word(0xb4);
	add();
	push_base_offset(0xb8);
	load(0x2);
	add();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x14);
	add();
	load(0x2);
	sub();
	push_word(0x168);
	mod();
	move(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0xb4);
	load(0x2);
	push_base_offset(0xb4);
	load(0x2);
	push_word(0x168);
	add();
	ternary();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x48);
	add();
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x4c);
	add();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x5c);
	add();
	push_byte(0x10);
	memcpy();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x48);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	cos();
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x1);
	gt();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	push_base_offset(0x30);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	push_byte(0x0);
	ternary();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x5c);
	add();
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x48);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	sin();
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x1);
	gt();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	push_base_offset(0x2c);
	load(0x2);
	mul();
	push_byte(0x10);
	sar();
	push_byte(0x0);
	ternary();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x5c);
	add();
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1c);
	add();
	load(0x2);
	push_offset(L007fe);
	jc(0x1);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x5c);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	lt();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x10);
	sar();
	ternary();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x5c);
	add();
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x1);
	gt();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x5c);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x5c);
	add();
	push_byte(0x8);
	add();
	move_arg(0x2);

L007fe:
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x38);
	add();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x38);
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x3c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x44);
	add();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x64);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0xc);
	add();
	load(0x2);
	sub();
	mul();
	push_byte(0x64);
	div();
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x44);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	push_byte(0x0);
	gt();
	push_offset(L009f2);
	jc(0x1);

L0085e:
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x3c);
	add();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x3c);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x5c);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x4c);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	sub();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x3c);
	add();
	load(0x2);
	mul();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	div();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x4c);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	add();
	push_base_offset(0xac);
	load(0x2);
	mul();
	push_byte(0x8);
	sar();
	move(0x2);
	push_base_offset(0x38);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x5c);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x4c);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sub();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x3c);
	add();
	load(0x2);
	mul();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	div();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x4c);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	add();
	push_base_offset(0xac);
	load(0x2);
	mul();
	push_byte(0x8);
	sar();
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1c);
	add();
	load(0x2);
	push_offset(L00942);
	jc(0x0);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	grp1(0x37);
	push_base_offset(0x84);
	push_byte(0x1);
	move(0x2);
	push_offset(L00a39);
	jmp();

L00942:
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x34);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x5c);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x4c);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	sub();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x3c);
	add();
	load(0x2);
	mul();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	div();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x4c);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	add();
	push_base_offset(0xac);
	load(0x2);
	mul();
	push_byte(0x8);
	sar();
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x34);
	load(0x2);
	push_byte(0x10);
	shl();
	grp2(0x37);
	push_base_offset(0x84);
	push_byte(0x1);
	move(0x2);
	push_offset(L00a39);
	jmp();

L009f2:
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1c);
	add();
	load(0x2);
	push_offset(L00a18);
	jc(0x0);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x37);
	push_offset(L00a2a);
	jmp();

L00a18:
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0x37);

L00a2a:
	push_base_offset(0x84);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x6c);
	memclr();

L00a39:
	push_base_offset(0xb0);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x52);
	lt();
	push_offset(L005c4);
	jc(0x0);
	push_base_offset(0x74);
	push_base_offset(0x74);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_offset(L005b0);
	jmp();

L00a64:
	push_base_offset(0x74);
	push_base_offset(0x78);
	load(0x2);
	move(0x2);

L00a6e:
	push_base_offset(0x74);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L00cce);
	jc(0x1);
	push_base_offset(0xb0);
	push_byte(0x0);
	move(0x2);

L00a82:
	push_base_offset(0x28);
	push_dword(0x3d0b8);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	move(0x2);
	push_base_offset(0x24);
	push_dword(0x3d0b8);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0xc);
	memcpy();
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00ca3);
	jc(0x1);
	push_base_offset(0x70);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x70);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L00c13);
	jc(0x1);
	push_base_offset(0x6c);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x6c);
	load(0x2);
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	push_base_offset(0x70);
	load(0x2);
	cmd_42();
	push_base_offset(0xb8);
	move_arg(0x2);
	push_base_offset(0x24);
	push_byte(0x4);
	add();
	push_base_offset(0x24);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0xb8);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	push_base_offset(0x70);
	load(0x2);
	cmd_42();
	push_base_offset(0xb8);
	move_arg(0x2);
	push_base_offset(0x24);
	push_byte(0x8);
	add();
	push_base_offset(0x24);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0xb8);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x6c);
	load(0x2);
	push_base_offset(0x70);
	load(0x2);
	lt();
	push_offset(L00c13);
	jc(0x0);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x28);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	push_offset(L00c13);
	jc(0x0);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x60);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x38);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x34);
	memclr();
	push_offset(L00c9c);
	jmp();

L00c13:
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x14);
	add();
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0x24);
	push_byte(0x8);
	add();
	load(0x2);
	add();
	push_base_offset(0x24);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	mod();
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x2c);
	add();
	push_base_offset(0x24);
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x30);
	add();
	push_base_offset(0x24);
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x74);
	load(0x2);
	push_byte(0x1);
	gt();
	push_offset(L00ca3);
	jc(0x0);
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x60);
	push_base_offset(0x24);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_base_offset(0x28);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	or();
	push_base_offset(0x24);
	push_byte(0x4);
	add();
	load(0x2);
	grp1(0x38);

L00c9c:
	push_base_offset(0x84);
	push_byte(0x1);
	move(0x2);

L00ca3:
	push_base_offset(0xb0);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x52);
	lt();
	push_offset(L00a82);
	jc(0x0);
	push_base_offset(0x74);
	push_base_offset(0x74);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_offset(L00a6e);
	jmp();

L00cce:
	push_dword(0x3e160);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0103c);
	jc(0x1);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L0103c);
	jc(0x1);
	push_base_offset(0x84);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x6c);
	push_dword(0x3e160);
	push_byte(0x28);
	add();
	load(0x2);
	push_base_offset(0x78);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x70);
	push_dword(0x3e160);
	push_byte(0x2c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xbc);
	push_dword(0x3e160);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	push_base_offset(0x70);
	load(0x2);
	geq();
	bool_or();
	move(0x2);
	push_dword(0x3e160);
	push_byte(0x4);
	add();
	push_base_offset(0xbc);
	load(0x2);
	move(0x2);
	push_base_offset(0xbc);
	load(0x2);
	push_base_offset(0x70);
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	ternary();
	push_base_offset(0x6c);
	move_arg(0x2);
	push_dword(0x3e160);
	push_byte(0x28);
	add();
	push_base_offset(0x6c);
	load(0x2);
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	push_dword(0x3e160);
	push_byte(0x8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x3e160);
	push_byte(0x18);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	mul();
	push_base_offset(0x70);
	load(0x2);
	div();
	add();
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	push_dword(0x3e160);
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x3e160);
	push_byte(0x18);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	mul();
	push_base_offset(0x70);
	load(0x2);
	div();
	add();
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	push_dword(0x3e160);
	push_byte(0x8);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x3e160);
	push_byte(0x18);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	mul();
	push_base_offset(0x70);
	load(0x2);
	div();
	add();
	push_byte(0x10);
	shl();
	move(0x2);
	push_dword(0x3e160);
	push_byte(0x30);
	add();
	push_base_offset(0x18);
	push_byte(0x10);
	memcpy();
	push_dword(0x9fab8);
	push_dword(0xc560);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00eb0);
	jc(0x1);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xd08c);
	add();
	load(0x2);
	add();
	cmd_42();
	push_base_offset(0x8);
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xa95c);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xd08c);
	add();
	load(0x2);
	add();
	cmd_42();
	push_base_offset(0x8);
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x8);
	push_byte(0x0);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x10);
	sar();
	push_base_offset(0x8);
	push_byte(0x4);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x10);
	sar();
	grp1(0x36);

L00eb0:
	push_base_offset(0xb0);
	push_byte(0x0);
	move(0x2);

L00eb7:
	push_dword(0x42868);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00fad);
	jc(0x1);
	push_base_offset(0xb8);
	push_dword(0x42868);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x3);
	grp2(0x38);
	push_base_offset(0xb8);
	load(0x2);
	push_word(0x100);
	push_word(0x80);
	add();
	lt();
	push_offset(L00ffb);
	jc(0x1);
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x20);
	push_dword(0x45f14);
	load(0x2);
	add();
	eq();
	bool_and();
	push_offset(L00ffb);
	jc(0x0);
	push_base_offset(0xb8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xb8);
	push_dword(0x42868);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x7fffffff);
	grp2(0x38);
	push_base_offset(0xb8);
	load(0x2);
	push_offset(L00f77);
	jc(0x1);
	push_dword(0x42868);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x10);
	sar();
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_byte(0x10);
	sar();
	grp1(0x37);
	push_offset(L00fad);
	jmp();

L00f77:
	push_dword(0x42868);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	grp2(0x36);

L00fad:
	push_dword(0x42968);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00ffb);
	jc(0x1);
	push_dword(0x42968);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x18);
	push_byte(0x4);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	load(0x2);
	not();
	push_byte(0x1);
	add();
	grp2(0x36);

L00ffb:
	push_base_offset(0xb0);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xb0);
	load(0x2);
	push_byte(0x3f);
	lt();
	push_offset(L00eb7);
	jc(0x0);
	push_dword(0x3e160);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L0103c);
	jc(0x1);
	push_dword(0x3e160);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3e160);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);

L0103c:
	push_word(0x4f4);
	load(0x2);
	push_base_offset(0x88);
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L0105f);
	jc(0x0);
	push_base_offset(0x84);
	load(0x2);
	push_offset(L0105b);
	jc(0x1);
	push_byte(0x0);
	grp1(0x0);

L0105b:
	push_offset(L00139);
	jmp();

L0105f:
	push_dword(0x42768);
	push_byte(0x3);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x42768);
	push_byte(0x3);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	load_base();
	push_word(0xbc);
	sub();
	store_base();
	ret();
