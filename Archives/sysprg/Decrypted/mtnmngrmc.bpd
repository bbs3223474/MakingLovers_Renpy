	load_base();
	push_word(0x6b8);
	add();
	store_base();
	push_word(0x4f8);
	push_word(0x4f8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L00013:
	push_base_offset(0x6b0);
	sys1(0x49);
	push_offset(L00023);
	jc(0x0);
	sys1(0x5f);
	push_offset(L00013);
	jmp();

L00023:
	push_base_offset(0x6ac);
	push_dword(0x227a4);
	push_base_offset(0x6b0);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x6ac);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L003b1);
	jc(0x1);
	push_base_offset(0x6ac);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L003a5);
	jc(0x1);
	push_base_offset(0x6a8);
	push_dword(0x2b724);
	push_base_offset(0x6ac);
	load(0x2);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x450);
	mul();
	add();
	move(0x2);
	push_base_offset(0x6a8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L003a5);
	jc(0x1);
	push_base_offset(0x464);
	push_base_offset(0x6a4);
	move(0x2);
	push_base_offset(0x460);
	push_base_offset(0x6a8);
	load(0x2);
	push_byte(0x10);
	add();
	move(0x2);
	push_base_offset(0x5c);
	push_base_offset(0x45c);
	move(0x2);
	push_base_offset(0x54);
	push_base_offset(0x6a8);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x2);
	lt();
	push_base_offset(0x6a8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x6a8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x2);
	mul();
	ternary();
	push_base_offset(0x58);
	move_arg(0x2);
	push_base_offset(0x6b8);
	push_byte(0x0);
	move(0x2);

L000df:
	push_base_offset(0x464);
	load(0x2);
	push_base_offset(0x6b8);
	load(0x2);
	push_byte(0x24);
	mul();
	add();
	push_base_offset(0x460);
	load(0x2);
	push_base_offset(0x6b8);
	load(0x2);
	push_byte(0x24);
	mul();
	add();
	push_byte(0x24);
	memcpy();
	push_base_offset(0x6b4);
	push_byte(0x0);
	move(0x2);

L00105:
	push_base_offset(0x50);
	push_base_offset(0x6a8);
	load(0x2);
	push_word(0x250);
	add();
	push_base_offset(0x460);
	load(0x2);
	push_base_offset(0x6b8);
	load(0x2);
	push_byte(0x24);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_base_offset(0x6b4);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x10);
	memcpy();
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x50);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x4);
	add();
	push_base_offset(0x50);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0x50);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x5c);
	push_base_offset(0x5c);
	load(0x2);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x6b4);
	push_base_offset(0x6b4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x6b4);
	load(0x2);
	push_base_offset(0x460);
	load(0x2);
	push_base_offset(0x6b8);
	load(0x2);
	push_byte(0x24);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	lt();
	push_offset(L00105);
	jc(0x0);
	push_base_offset(0x6b8);
	push_base_offset(0x6b8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x6b8);
	load(0x2);
	push_base_offset(0x6a8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	lt();
	push_offset(L000df);
	jc(0x0);
	push_base_offset(0x40);
	push_base_offset(0x6ac);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x6ac);
	load(0x2);
	push_word(0x140);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_word(0x80);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x38);
	push_base_offset(0x40);
	load(0x2);
	push_word(0x82);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x38);

L00211:
	push_base_offset(0x38);
	push_byte(0x0);
	move(0x2);

L00218:
	push_base_offset(0x34);
	push_base_offset(0x6a4);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x24);
	mul();
	add();
	push_byte(0x24);
	memcpy();
	push_base_offset(0x34);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L0039c);
	jc(0x1);
	push_base_offset(0x34);
	push_byte(0x1c);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L002df);
	jc(0x1);
	push_base_offset(0x40);
	load(0x2);
	push_word(0x8f);
	push_base_offset(0x34);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	grp1(0x38);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x41);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x0);
	grp1(0x38);
	push_base_offset(0x40);
	load(0x2);
	push_word(0x81);
	push_base_offset(0x34);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	sub();
	push_byte(0x10);
	shl();
	push_byte(0x0);
	grp1(0x38);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	grp1(0x35);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x34);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x45c);
	push_base_offset(0x34);
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_base_offset(0x34);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0x34);
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	push_base_offset(0x34);
	push_byte(0x1c);
	add();
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x29);
	push_offset(L0033d);
	jmp();

L002df:
	push_base_offset(0x10);
	push_base_offset(0x45c);
	push_base_offset(0x34);
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_base_offset(0x34);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x1);
	push_byte(0x10);
	mul();
	sub();
	push_byte(0x10);
	memcpy();
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x10);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x10);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x10);
	push_byte(0x8);
	add();
	load(0x2);
	grp2(0x33);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x34);
	push_byte(0x10);
	add();
	load(0x2);
	grp1(0x32);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x1);
	grp1(0x30);

L0033d:
	push_base_offset(0x3c);
	push_base_offset(0x34);
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_word(0x4f4);
	load(0x2);
	push_offset(L0039c);
	jc(0x0);
	push_base_offset(0x6ac);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L0039c);
	jc(0x0);
	push_base_offset(0x6ac);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L0039c);
	jc(0x0);
	push_base_offset(0x38);
	push_base_offset(0x38);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x58);
	load(0x2);
	lt();
	push_offset(L00218);
	jc(0x0);
	push_base_offset(0x54);
	load(0x2);
	push_byte(0x1);
	geq();
	push_offset(L00211);
	jc(0x0);

L0039c:
	push_base_offset(0x6a8);
	load(0x2);
	push_word(0x450);
	memclr();

L003a5:
	push_base_offset(0x6ac);
	load(0x2);
	push_byte(0x10);
	add();
	push_byte(0x2);
	move(0x2);

L003b1:
	push_word(0x4f8);
	push_word(0x4f8);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	load_base();
	push_word(0x6b8);
	sub();
	store_base();
	ret();
