	load_base();
	push_byte(0x44);
	add();
	store_base();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x40);
	push_offset(L00028);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x40);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	load_base();
	push_byte(0x44);
	sub();
	store_base();
	ret();

L00028:
	load_base();
	push_word(0x164);
	add();
	store_base();
	push_base_offset(0x15c);
	move_arg(0x2);
	push_base_offset(0x160);
	move_arg(0x2);
	push_base_offset(0x164);
	move_arg(0x2);
	push_base_offset(0x158);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x15c);
	load(0x2);
	push_base_offset(0x160);
	load(0x2);
	lt();
	push_offset(L00425);
	jc(0x1);
	push_base_offset(0x48);
	push_word(0x400);
	push_byte(0x5f);
	add();
	grp1(0x16);
	push_base_offset(0x30);
	push_word(0x400);
	push_byte(0x60);
	add();
	grp1(0x16);
	push_base_offset(0x18);
	push_word(0x400);
	push_byte(0x61);
	add();
	grp1(0x16);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x2);
	push_byte(0x2);
	grp2(0xf);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0xf);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x1);
	grp2(0xf);
	push_base_offset(0x154);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x150);
	push_base_offset(0x15c);
	load(0x2);
	move(0x2);

L000c4:
	push_word(0x400);
	push_byte(0x5f);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x400);
	push_byte(0x5a);
	add();
	push_word(0x414);
	push_word(0x3c0);
	sub();
	push_byte(0x28);
	push_base_offset(0x154);
	load(0x2);
	add();
	push_byte(0x0);
	sub();
	push_base_offset(0x48);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x48);
	push_byte(0xc);
	add();
	load(0x2);
	grp1(0x1e);
	push_base_offset(0x164);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00189);
	jc(0x1);
	push_base_offset(0x148);
	push_byte(0x0);
	push_base_offset(0x164);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0xdd);
	push_offset(L00189);
	jc(0x0);
	push_word(0x400);
	push_byte(0x5f);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x148);
	push_dword(0xffffff);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0xffffff);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x3c);
	push_byte(0x2);
	push_byte(0xf);
	push_byte(0xf);
	push_byte(0x0);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);

L00189:
	push_dword(0x42aa8);
	load(0x2);
	push_word(0x414);
	push_word(0x3c0);
	sub();
	push_byte(0x28);
	push_base_offset(0x154);
	load(0x2);
	add();
	push_byte(0x0);
	sub();
	push_word(0x400);
	push_byte(0x5f);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp3(0x89);
	push_word(0x400);
	push_byte(0x60);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x400);
	push_byte(0x5a);
	add();
	push_word(0x484);
	push_word(0x3c0);
	sub();
	push_byte(0x28);
	push_base_offset(0x154);
	load(0x2);
	add();
	push_byte(0x0);
	sub();
	push_base_offset(0x30);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x30);
	push_byte(0xc);
	add();
	load(0x2);
	grp1(0x1e);
	push_base_offset(0x164);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L002a8);
	jc(0x1);
	push_base_offset(0x148);
	push_byte(0x0);
	push_base_offset(0x164);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	sys1(0xdd);
	push_offset(L002a8);
	jc(0x0);
	push_base_offset(0x164);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	push_byte(0x0);
	lt();
	push_byte(0x0);
	push_base_offset(0x164);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x14c);
	move_arg(0x2);
	push_word(0x400);
	push_byte(0x60);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x148);
	push_dword(0xffffff);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0xffffff);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x3c);
	push_byte(0x2);
	push_byte(0xf);
	push_byte(0xf);
	push_base_offset(0x14c);
	load(0x2);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);

L002a8:
	push_dword(0x42aa8);
	load(0x2);
	push_word(0x484);
	push_word(0x3c0);
	sub();
	push_byte(0x28);
	push_base_offset(0x154);
	load(0x2);
	add();
	push_byte(0x0);
	sub();
	push_word(0x400);
	push_byte(0x60);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp3(0x89);
	push_word(0x400);
	push_byte(0x61);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x400);
	push_byte(0x5a);
	add();
	push_word(0x3d7);
	push_word(0x3c0);
	sub();
	push_byte(0x41);
	push_base_offset(0x154);
	load(0x2);
	add();
	push_byte(0x0);
	sub();
	push_base_offset(0x18);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x18);
	push_byte(0xc);
	add();
	load(0x2);
	grp1(0x1e);
	push_base_offset(0x164);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00393);
	jc(0x1);
	push_base_offset(0x148);
	push_byte(0x0);
	push_base_offset(0x164);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	sys1(0xdd);
	push_offset(L00393);
	jc(0x0);
	push_word(0x400);
	push_byte(0x61);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x148);
	push_dword(0xffffff);
	push_byte(0x0);
	push_byte(0x0);
	push_dword(0xffffff);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0xf);
	push_byte(0x64);
	push_byte(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	push_byte(0x1);
	push_byte(0x1e);
	push_byte(0x2);
	push_byte(0xf);
	push_byte(0xf);
	push_byte(0x0);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);

L00393:
	push_dword(0x42aa8);
	load(0x2);
	push_word(0x3d7);
	push_word(0x3c0);
	sub();
	push_byte(0x41);
	push_base_offset(0x154);
	load(0x2);
	add();
	push_byte(0x0);
	sub();
	push_word(0x400);
	push_byte(0x61);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp3(0x89);
	push_base_offset(0x154);
	push_base_offset(0x154);
	load(0x2);
	push_byte(0x0);
	add();
	move(0x2);
	push_base_offset(0x150);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_byte(0x1);
	lt();
	push_offset(L000c4);
	jc(0x0);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0xf);
	push_word(0x90c);
	load(0x2);
	push_word(0x914);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_byte(0xf);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0xf);
	push_base_offset(0x158);
	push_byte(0x1);
	move(0x2);

L00425:
	push_base_offset(0x158);
	load(0x2);
	load_base();
	push_word(0x164);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00442:
	push_base_offset(0x4);
	load(0x2);
	push_word(0x910);
	load(0x2);
	lt();
	push_offset(L004bd);
	jc(0x1);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x14);
	load(0x2);
	cmd_69();
	push_offset(L004ac);
	jc(0x1);
	push_base_offset(0x10);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	move(0x2);
	push_offset(L004d6);
	jmp();

L004ac:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00442);
	jmp();

L004bd:
	push_base_offset(0x10);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L004d6:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
