	load_base();
	push_word(0x2de8);
	add();
	store_base();
	push_base_offset(0x2de4);
	move_arg(0x2);
	push_base_offset(0x2de8);
	move_arg(0x2);
	push_base_offset(0x2dd0);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2dcc);
	push_byte(0x0);
	move(0x2);
	push_string("sysprg.arc");
	push_string("yesnownd._bp");
	sys1(0x40);
	push_base_offset(0x2cbc);
	move_arg(0x2);
	push_string("sysprg.arc");
	push_string("userdata._bp");
	sys1(0x40);
	push_base_offset(0x2cb8);
	move_arg(0x2);
	push_string("sysprg.arc");
	push_string("overlap._bp");
	sys1(0x40);
	push_base_offset(0x2cb4);
	move_arg(0x2);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x20);
	push_word(0xa0);
	add();
	load(0x1);
	push_byte(0x20);
	push_word(0xa4);
	add();
	load(0x1);
	ternary();
	push_base_offset(0x2cb0);
	move_arg(0x2);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x20);
	push_word(0xa2);
	add();
	load(0x1);
	push_byte(0x20);
	push_word(0xa6);
	add();
	load(0x1);
	ternary();
	push_base_offset(0x2cac);
	move_arg(0x2);
	push_base_offset(0x2cac);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x2cac);
	load(0x2);
	push_byte(0xa);
	lt();
	bool_and();
	push_base_offset(0x2cb0);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x2cac);
	load(0x2);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x2ca8);
	move_arg(0x2);
	push_base_offset(0x2cac);
	load(0x2);
	push_byte(0xa);
	geq();
	push_word(0xc8);
	push_base_offset(0x2cac);
	load(0x2);
	add();
	push_byte(0xa);
	sub();
	push_base_offset(0x2ca8);
	load(0x2);
	ternary();
	push_base_offset(0x2ca8);
	move_arg(0x2);
	push_word(0x1800);
	push_word(0x104);
	add();
	push_word(0x80);
	add();
	push_word(0x204);
	push_byte(0x17);
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x2ca4);
	push_base_offset(0x2cb0);
	load(0x2);
	push_offset(L03053);
	call();
	push_word(0x1800);
	push_word(0x104);
	add();
	push_word(0x80);
	add();
	push_base_offset(0x2ca4);
	push_base_offset(0x2de8);
	load(0x2);
	push_offset(L03106);
	call();
	push_base_offset(0x764);
	push_byte(0x0);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x2c24);
	move(0x2);
	push_base_offset(0x764);
	push_byte(0x1);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x2604);
	move(0x2);
	push_base_offset(0x764);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x2230);
	move(0x2);
	push_base_offset(0x764);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x12e0);
	move(0x2);
	push_base_offset(0x764);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0xb38);
	move(0x2);
	push_base_offset(0x764);
	push_byte(0x5);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x8ec);
	move(0x2);
	push_base_offset(0x764);
	push_byte(0x6);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x828);
	move(0x2);
	push_base_offset(0x5a4);
	push_byte(0x0);
	add();
	push_byte(0x7);
	move(0x2);
	push_base_offset(0x5a4);
	push_byte(0x4);
	add();
	push_base_offset(0x764);
	move(0x2);
	push_base_offset(0x5a4);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5a4);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x5a4);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5a4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5a4);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5a4);
	push_byte(0x1c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x5a4);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x5a4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x57c);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x1);
	push_byte(0x2);
	ternary();
	push_base_offset(0x578);
	move_arg(0x2);
	push_base_offset(0x5a4);
	push_base_offset(0x2de4);
	load(0x2);
	push_base_offset(0x578);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1);
	push_word(0x470);
	load(0x2);
	call();
	push_base_offset(0x5a4);
	push_base_offset(0x574);
	push_base_offset(0x2de8);
	load(0x2);
	push_base_offset(0x2cb0);
	load(0x2);
	push_base_offset(0x2cac);
	load(0x2);
	push_base_offset(0x54c);
	push_base_offset(0x2ca8);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2de4);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L01652);
	call();
	push_base_offset(0x444);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x440);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x0);
	push_byte(0x1);
	ternary();
	push_base_offset(0x43c);
	move_arg(0x2);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x80);
	push_base_offset(0x438);
	move_arg(0x2);
	push_base_offset(0x438);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x870);
	grp1(0x85);
	push_base_offset(0x438);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_word(0x1800);
	push_word(0xf6);
	add();
	push_base_offset(0x43c);
	load(0x2);
	add();
	grp1(0x86);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L002b9);
	jc(0x1);

L002b9:
	push_base_offset(0x438);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1a);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	grp2(0x88);
	push_base_offset(0x438);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x500);
	push_word(0x2d0);
	grp1(0x88);
	push_base_offset(0x438);
	load(0x2);
	push_byte(0x0);
	grp2(0x89);
	push_base_offset(0x438);
	load(0x2);
	push_byte(0x0);
	grp1(0x87);
	push_base_offset(0x438);
	load(0x2);
	push_byte(0x1);
	grp3(0x88);
	push_base_offset(0x548);
	push_base_offset(0x444);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x438);
	load(0x2);
	move(0x2);
	push_base_offset(0x444);
	push_base_offset(0x444);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_word(0x1800);
	push_word(0x100);
	add();
	push_word(0x80);
	add();
	push_word(0x1800);
	push_word(0xf6);
	add();
	push_base_offset(0x43c);
	load(0x2);
	add();
	push_word(0x330);
	push_word(0x84);
	push_word(0x1b4);
	push_word(0x1c3);
	grp1(0x1f);
	push_word(0x1800);
	push_word(0x101);
	add();
	push_word(0x80);
	add();
	push_word(0x1800);
	push_word(0xf6);
	add();
	push_base_offset(0x43c);
	load(0x2);
	add();
	push_word(0x330);
	push_word(0x84);
	push_word(0x1b4);
	push_word(0x1c3);
	grp1(0x1f);
	push_word(0x1800);
	push_word(0x102);
	add();
	push_word(0x80);
	add();
	push_word(0x1800);
	push_word(0x101);
	add();
	push_word(0x80);
	add();
	grp2(0x1f);
	push_base_offset(0x438);
	load(0x2);
	push_word(0x1800);
	push_word(0x103);
	add();
	push_word(0x80);
	add();
	push_base_offset(0x434);
	push_base_offset(0x2de8);
	load(0x2);
	push_base_offset(0x2ca8);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L02bf7);
	call();
	push_base_offset(0x438);
	load(0x2);
	push_base_offset(0x5a4);
	grp1(0xb7);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x1800);
	push_word(0xdc);
	add();
	push_word(0x1800);
	push_word(0xdc);
	add();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x318);
	move_arg(0x2);
	grp1(0x50);
	push_base_offset(0x334);
	move_arg(0x2);
	push_base_offset(0x334);
	load(0x2);
	push_word(0x500);
	push_byte(0x0);
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0xd);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x880);
	grp1(0x56);
	push_base_offset(0x334);
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_word(0x1000);
	push_byte(0x34);
	add();
	push_byte(0xd);
	add();
	grp1(0x38);
	push_base_offset(0x544);
	push_base_offset(0x440);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x334);
	load(0x2);
	move(0x2);
	push_base_offset(0x440);
	push_base_offset(0x440);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x1800);
	push_word(0xd9);
	add();
	push_byte(0x1);
	add();
	push_word(0x1800);
	push_word(0xd9);
	add();
	push_byte(0x2);
	add();
	ternary();
	push_base_offset(0x310);
	move_arg(0x2);
	grp1(0x50);
	push_base_offset(0x314);
	move_arg(0x2);
	push_base_offset(0x314);
	load(0x2);
	push_byte(0xa);
	push_word(0x2b0);
	push_base_offset(0x310);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x880);
	grp1(0x56);
	push_base_offset(0x314);
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x310);
	load(0x2);
	grp1(0x38);
	push_base_offset(0x544);
	push_base_offset(0x440);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x314);
	load(0x2);
	move(0x2);
	push_base_offset(0x440);
	push_base_offset(0x440);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x0);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0xb);
	add();
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0x0);
	add();
	sub();
	ternary();
	push_base_offset(0x2dd8);
	move_arg(0x2);
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0x0);
	push_byte(0x34);
	mul();
	add();
	push_word(0x25c);
	push_byte(0x18);
	push_byte(0x69);
	push_byte(0x33);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0x1);
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0x1);
	push_byte(0x34);
	mul();
	add();
	push_word(0x2c6);
	push_byte(0x18);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0x2);
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0x2);
	push_byte(0x34);
	mul();
	add();
	push_word(0x348);
	push_byte(0x1b);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0x3);
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0x3);
	push_byte(0x34);
	mul();
	add();
	push_word(0x3ca);
	push_byte(0x1b);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0x4);
	push_byte(0x34);
	mul();
	add();
	push_word(0x44c);
	push_byte(0x18);
	push_word(0x97);
	push_byte(0x33);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0x5);
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0x5);
	push_byte(0x34);
	mul();
	add();
	push_word(0x188);
	push_byte(0x18);
	push_byte(0x69);
	push_byte(0x33);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0x6);
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0x6);
	push_byte(0x34);
	mul();
	add();
	push_word(0x1f2);
	push_byte(0x18);
	push_byte(0x69);
	push_byte(0x33);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0x7);
	push_byte(0x34);
	mul();
	add();
	push_word(0x35e);
	push_word(0x293);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0x9);
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0x8);
	push_byte(0x34);
	mul();
	add();
	push_word(0x3e0);
	push_word(0x293);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_word(0x1800);
	push_word(0xde);
	add();
	push_byte(0xa);
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	add();
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0x9);
	push_byte(0x34);
	mul();
	add();
	push_word(0x462);
	push_word(0x293);
	push_word(0x81);
	push_byte(0x33);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xc8);
	push_base_offset(0x310);
	load(0x2);
	push_base_offset(0x310);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x30c);
	push_byte(0xa);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x314);
	push_base_offset(0xc8);
	push_byte(0x1);
	push_byte(0x0);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0x30c);
	push_byte(0x5);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_byte(0x1);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0x30c);
	push_byte(0x6);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x1);
	neq();
	push_byte(0x1);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0x30c);
	push_byte(0xa);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	push_byte(0x1);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0xb8);
	push_word(0x9c0);
	push_byte(0x1);
	push_byte(0x4c);
	mul();
	add();
	move(0x2);
	push_base_offset(0xb8);
	load(0x2);
	push_word(0x1ad);
	push_byte(0x6f);
	push_word(0x8c6);
	push_offset(L03f6c);
	call();
	push_base_offset(0x544);
	push_base_offset(0x440);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x440);
	push_base_offset(0x440);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_byte(0x0);
	push_offset(L00809);
	jc(0x1);
	push_byte(0x20);
	push_byte(0x78);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L00809);
	jc(0x0);
	push_byte(0x32);
	push_byte(0x0);
	add();
	push_word(0x4a0);
	load(0x2);
	add();
	push_offset(L03aae);
	call();

L00809:
	push_base_offset(0xb4);
	push_base_offset(0x544);
	cmd_0c(0x2, 0x1);
	push_base_offset(0xb0);
	push_base_offset(0x440);
	load(0x2);
	cmd_0c(0x2, 0x1);
	push_base_offset(0x548);
	push_base_offset(0xb4);
	push_base_offset(0xb0);
	push_base_offset(0x444);
	load(0x2);
	push_word(0x96);
	push_word(0x47c);
	load(0x2);
	call();
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00852);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("encdusdt._bp");
	push_word(0x100);
	push_word(0x4000);
	push_word(0x4000);
	sys1(0x44);

L00852:
	push_base_offset(0x438);
	load(0x2);
	grp2(0xb8);
	push_base_offset(0xac);
	move_arg(0x2);
	push_word(0x46c);
	push_base_offset(0xac);
	load(0x2);
	move(0x2);
	push_dword(0x42ae4);
	push_base_offset(0x438);
	load(0x2);
	move(0x2);
	push_base_offset(0x84);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x78);
	push_base_offset(0x2ca8);
	load(0x2);
	move(0x2);
	push_base_offset(0x74);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x70);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x68);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x64);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x60);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x30);
	push_byte(0x0);
	move(0x2);
	push_word(0x4d8);
	push_byte(0x1);
	move(0x2);

L008f2:
	push_byte(0x20);
	push_word(0x9c);
	add();
	push_base_offset(0x2cb0);
	load(0x2);
	move(0x1);
	push_base_offset(0x84);
	load(0x2);
	push_offset(L0092d);
	jc(0x1);
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x548);
	push_base_offset(0xb4);
	push_base_offset(0xb0);
	push_base_offset(0x444);
	load(0x2);
	push_word(0x478);
	load(0x2);
	call();
	push_base_offset(0x84);
	push_byte(0x0);
	move(0x2);

L0092d:
	push_base_offset(0x57c);
	load(0x2);
	push_offset(L00942);
	jc(0x1);
	push_base_offset(0x57c);
	push_byte(0x0);
	move(0x2);
	push_offset(L009cb);
	jmp();

L00942:
	push_base_offset(0x5a4);
	push_base_offset(0x2de4);
	load(0x2);
	push_base_offset(0x578);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1);
	push_word(0x470);
	load(0x2);
	call();
	push_base_offset(0x5a4);
	push_base_offset(0x574);
	push_base_offset(0x2de8);
	load(0x2);
	push_base_offset(0x2cb0);
	load(0x2);
	push_base_offset(0x2cac);
	load(0x2);
	push_base_offset(0x54c);
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x5c);
	load(0x2);
	push_base_offset(0x68);
	load(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_base_offset(0x60);
	load(0x2);
	push_base_offset(0x58);
	push_base_offset(0x2de4);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L01652);
	call();
	push_base_offset(0x60);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5c);
	push_byte(0x0);
	move(0x2);

L009cb:
	push_base_offset(0x2ca8);
	load(0x2);
	push_base_offset(0x74);
	load(0x2);
	eq();
	push_offset(L00a0b);
	jc(0x0);
	push_base_offset(0x438);
	load(0x2);
	push_word(0x1800);
	push_word(0x103);
	add();
	push_word(0x80);
	add();
	push_base_offset(0x434);
	push_base_offset(0x2de8);
	load(0x2);
	push_base_offset(0x2ca8);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L02bf7);
	call();
	push_base_offset(0x74);
	push_base_offset(0x2ca8);
	load(0x2);
	move(0x2);

L00a0b:
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00a44);
	jc(0x1);
	push_base_offset(0x438);
	load(0x2);
	push_base_offset(0x5a4);
	grp1(0xb7);
	push_base_offset(0x548);
	push_base_offset(0xb4);
	push_base_offset(0xb0);
	push_base_offset(0x444);
	load(0x2);
	push_word(0x96);
	push_word(0x47c);
	load(0x2);
	call();
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);

L00a44:
	push_base_offset(0xac);
	load(0x2);
	push_base_offset(0x5a4);
	grp2(0xba);
	push_base_offset(0x30);
	load(0x2);
	push_offset(L00a63);
	jc(0x1);
	push_byte(0x1);
	sys2(0x1e);
	push_base_offset(0x30);
	push_byte(0x0);
	move(0x2);

L00a63:
	sys1(0x5f);
	push_word(0x460);
	push_byte(0x0);
	move(0x2);
	push_word(0x4f4);
	load(0x2);
	push_offset(L01444);
	jc(0x0);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2ddc);
	sys1(0x49);
	push_offset(L00b21);
	jc(0x1);
	push_base_offset(0x2ddc);
	load(0x2);
	push_byte(0xc);
	eq();
	push_offset(L00aad);
	jc(0x1);
	push_base_offset(0xc);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x80);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x7c);
	push_byte(0x2);
	move(0x2);
	push_offset(L00cee);
	jmp();

L00aad:
	push_base_offset(0x2ddc);
	load(0x2);
	push_byte(0xb);
	eq();
	push_offset(L00ad3);
	jc(0x1);
	push_base_offset(0xc);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x80);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x7c);
	push_byte(0x0);
	move(0x2);
	push_offset(L00cee);
	jmp();

L00ad3:
	push_base_offset(0x2dd0);
	push_base_offset(0x2ddc);
	load(0x2);
	move(0x2);
	push_base_offset(0x2dd0);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L01444);
	jc(0x0);
	push_base_offset(0x2dd0);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x20);
	push_word(0xae);
	add();
	load(0x1);
	push_base_offset(0x2dcc);
	load(0x2);
	ternary();
	push_base_offset(0x2dcc);
	move_arg(0x2);

L00b09:
	push_base_offset(0x548);
	push_base_offset(0xb4);
	push_base_offset(0xb0);
	push_base_offset(0x444);
	load(0x2);
	push_word(0x478);
	load(0x2);
	call();
	push_offset(L01444);
	jmp();

L00b21:
	push_base_offset(0x30c);
	push_byte(0xb);
	push_byte(0x3);
	push_base_offset(0x2cb4);
	load(0x2);
	call();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L00b35:
	push_base_offset(0xa8);
	push_base_offset(0xac);
	load(0x2);
	grp1(0xbf);
	push_base_offset(0xa8);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000006);
	eq();
	push_offset(L00b80);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x80);
	push_base_offset(0xa8);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x7c);
	push_base_offset(0xa8);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_offset(L00cee);
	jmp();

L00b80:
	push_base_offset(0xa8);
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x10000002);
	eq();
	push_offset(L00cde);
	jc(0x1);
	push_base_offset(0x80);
	push_base_offset(0xa8);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x7c);
	push_base_offset(0xa8);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x10);
	shl();
	push_byte(0x10);
	sar();
	move(0x2);
	push_base_offset(0x80);
	load(0x2);
	push_base_offset(0x70);
	load(0x2);
	eq();
	push_base_offset(0x7c);
	load(0x2);
	push_base_offset(0x6c);
	load(0x2);
	eq();
	bool_and();
	push_offset(L00b35);
	jc(0x0);
	push_base_offset(0x70);
	push_base_offset(0x80);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_base_offset(0x7c);
	load(0x2);
	move(0x2);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x3);
	eq();
	push_base_offset(0x7c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	bool_and();
	push_offset(L00c4e);
	jc(0x1);
	push_base_offset(0x7c);
	load(0x2);
	push_byte(0x0);
	geq();
	push_base_offset(0x7c);
	load(0x2);
	push_byte(0xa);
	lt();
	bool_and();
	push_base_offset(0x2cb0);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x7c);
	load(0x2);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x2ca8);
	move_arg(0x2);
	push_base_offset(0x7c);
	load(0x2);
	push_byte(0xa);
	geq();
	push_word(0xc8);
	push_base_offset(0x7c);
	load(0x2);
	add();
	push_byte(0xa);
	sub();
	push_base_offset(0x2ca8);
	load(0x2);
	ternary();
	push_base_offset(0x2ca8);
	move_arg(0x2);
	push_offset(L00c58);
	jmp();

L00c4e:
	push_base_offset(0x2ca8);
	push_base_offset(0x78);
	load(0x2);
	move(0x2);

L00c58:
	push_base_offset(0x2ca8);
	load(0x2);
	push_base_offset(0x74);
	load(0x2);
	eq();
	push_offset(L00cc0);
	jc(0x0);
	push_base_offset(0x438);
	load(0x2);
	push_word(0x1800);
	push_word(0x103);
	add();
	push_word(0x80);
	add();
	push_base_offset(0x434);
	push_base_offset(0x2de8);
	load(0x2);
	push_base_offset(0x2ca8);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L02bf7);
	call();
	push_base_offset(0x50);
	push_dword(0x10000004);
	push_byte(0x6);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1800);
	push_word(0x103);
	add();
	push_word(0x80);
	add();
	cmd_0c(0x2, 0x5);
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x5);
	push_base_offset(0x50);
	sys1(0xac);
	push_base_offset(0x74);
	push_base_offset(0x2ca8);
	load(0x2);
	move(0x2);

L00cc0:
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L00b35);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x8);
	add();
	push_offset(L03aae);
	call();
	push_offset(L00b35);
	jmp();

L00cde:
	push_base_offset(0xa8);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00b35);
	jc(0x1);

L00cee:
	push_base_offset(0x9c);
	push_base_offset(0xac);
	load(0x2);
	grp1(0xbc);
	push_word(0x4d8);
	push_base_offset(0x9c);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0xc);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_word(0x4d8);
	load(0x2);
	push_offset(L00a63);
	jc(0x0);
	push_word(0x444);
	load(0x2);
	push_base_offset(0x9c);
	push_byte(0x0);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L008f2);
	jc(0x0);
	push_word(0x444);
	load(0x2);
	push_offset(L00a63);
	jc(0x0);
	push_word(0x460);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L00d74);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L00d74);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_byte(0x0);
	push_byte(0x0);
	add();
	push_byte(0x0);
	push_byte(0x3);
	add();
	ternary();
	push_offset(L03aae);
	call();

L00d74:
	push_base_offset(0x68);
	load(0x2);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	bool_and();
	push_offset(L01346);
	jc(0x0);
	push_base_offset(0x64);
	load(0x2);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	bool_and();
	push_offset(L01346);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L01444);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00e12);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00e12);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00e68);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x3);
	eq();
	push_offset(L00ed4);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x4);
	eq();
	push_offset(L011c5);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x5);
	eq();
	push_offset(L01374);
	jc(0x0);
	push_base_offset(0x80);
	load(0x2);
	push_byte(0x6);
	eq();
	push_offset(L013d2);
	jc(0x0);
	push_offset(L008f2);
	jmp();

L00e12:
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x80);
	load(0x2);
	push_base_offset(0x7c);
	load(0x2);
	push_base_offset(0x438);
	load(0x2);
	push_word(0x474);
	load(0x2);
	call();
	push_base_offset(0x2dcc);
	move_arg(0x2);
	push_base_offset(0x2dd0);
	move_arg(0x2);
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_base_offset(0x2dd0);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	eq();
	push_offset(L01444);
	jc(0x0);
	push_base_offset(0x2dd0);
	load(0x2);
	push_dword(0x7fffffff);
	eq();
	push_offset(L008f2);
	jc(0x0);
	push_offset(L00b09);
	jmp();

L00e68:
	push_base_offset(0x84);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x60);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2cb0);
	push_base_offset(0x7c);
	load(0x2);
	move(0x2);
	push_base_offset(0x2cac);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2ca4);
	push_base_offset(0x2cb0);
	load(0x2);
	push_offset(L03053);
	call();
	push_word(0x1800);
	push_word(0x104);
	add();
	push_word(0x80);
	add();
	push_base_offset(0x2ca4);
	push_base_offset(0x2de8);
	load(0x2);
	push_offset(L03106);
	call();
	push_offset(L008f2);
	jmp();

L00ed4:
	push_base_offset(0x7c);
	load(0x2);
	push_byte(0xa);
	lt();
	push_base_offset(0x2cb0);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x7c);
	load(0x2);
	add();
	push_word(0xc8);
	push_base_offset(0x7c);
	load(0x2);
	push_byte(0xa);
	sub();
	add();
	ternary();
	push_base_offset(0x2dd8);
	move_arg(0x2);
	push_base_offset(0x68);
	load(0x2);
	push_offset(L00fb2);
	jc(0x1);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_offset(L00f8b);
	jc(0x1);
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x2dd8);
	load(0x2);
	eq();
	push_offset(L008f2);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x0);
	add();
	push_offset(L03aae);
	call();
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x2dd8);
	load(0x2);
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L0294e);
	call();
	push_base_offset(0x2de0);
	move_arg(0x2);
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_base_offset(0x2de0);
	load(0x2);
	push_offset(L00f8b);
	jc(0x1);
	push_base_offset(0x60);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x78);
	load(0x2);
	move(0x2);

L00f8b:
	push_word(0x96);
	push_offset(L03a0b);
	call();
	push_base_offset(0x2dc8);
	move_arg(0x2);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x2dc8);
	load(0x2);
	push_offset(L04378);
	call();
	push_base_offset(0x68);
	push_byte(0x0);
	move(0x2);
	push_offset(L01191);
	jmp();

L00fb2:
	push_base_offset(0x64);
	load(0x2);
	push_offset(L01069);
	jc(0x1);
	push_base_offset(0x78);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_offset(L01042);
	jc(0x1);
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x2dd8);
	load(0x2);
	eq();
	push_offset(L008f2);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x0);
	add();
	push_offset(L03aae);
	call();
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x2dd8);
	load(0x2);
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L02a35);
	call();
	push_base_offset(0x2de0);
	move_arg(0x2);
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_base_offset(0x2de0);
	load(0x2);
	push_offset(L01042);
	jc(0x1);
	push_base_offset(0x60);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L01042:
	push_word(0x96);
	push_offset(L03a0b);
	call();
	push_base_offset(0x2dc8);
	move_arg(0x2);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x2dc8);
	load(0x2);
	push_offset(L04378);
	call();
	push_base_offset(0x64);
	push_byte(0x0);
	move(0x2);
	push_offset(L01191);
	jmp();

L01069:
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x2dd8);
	load(0x2);
	eq();
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x1);
	eq();
	bool_and();
	push_base_offset(0x574);
	push_base_offset(0x7c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L010e4);
	jc(0x0);
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x2dd8);
	load(0x2);
	eq();
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_base_offset(0x2cb0);
	load(0x2);
	push_byte(0x13);
	eq();
	bool_and();
	push_offset(L010e4);
	jc(0x0);
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x2dd8);
	load(0x2);
	eq();
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x1);
	eq();
	bool_and();
	push_byte(0x20);
	push_word(0xca);
	add();
	push_byte(0x2);
	add();
	load(0x0);
	bool_zero();
	bool_and();
	push_byte(0x0);
	push_byte(0xc);
	add();
	push_byte(0x0);
	push_byte(0x0);
	add();
	ternary();
	push_offset(L03aae);
	call();

L010e4:
	push_base_offset(0x78);
	load(0x2);
	push_base_offset(0x2dd8);
	load(0x2);
	eq();
	push_offset(L01191);
	jc(0x1);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x2cb0);
	load(0x2);
	push_byte(0x13);
	eq();
	bool_and();
	push_offset(L008f2);
	jc(0x0);
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x2de8);
	load(0x2);
	push_base_offset(0x2dd8);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L025c3);
	call();
	push_base_offset(0x2de0);
	move_arg(0x2);
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_base_offset(0x2de0);
	load(0x2);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	bool_and();
	push_offset(L01173);
	jc(0x1);
	push_base_offset(0x60);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x2dd8);
	load(0x2);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L01191);
	jmp();

L01173:
	push_word(0x448);
	load(0x2);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x1);
	eq();
	bool_and();
	push_base_offset(0x2de4);
	load(0x2);
	bool_zero();
	bool_and();
	push_offset(L008f2);
	jc(0x1);
	push_offset(L01444);
	jmp();

L01191:
	push_base_offset(0x2cac);
	push_base_offset(0x7c);
	load(0x2);
	move(0x2);
	push_base_offset(0x2ca8);
	push_base_offset(0x2dd8);
	load(0x2);
	move(0x2);
	push_base_offset(0x78);
	push_base_offset(0x2dd8);
	load(0x2);
	move(0x2);
	push_base_offset(0x74);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5c);
	push_byte(0x1);
	move(0x2);
	push_offset(L008f2);
	jmp();

L011c5:
	push_base_offset(0x7c);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0123a);
	jc(0x1);
	push_word(0x96);
	push_offset(L03a0b);
	call();
	push_base_offset(0x2dc8);
	move_arg(0x2);
	push_base_offset(0x68);
	load(0x2);
	push_offset(L01214);
	jc(0x0);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x0);
	push_word(0x1800);
	push_word(0xfd);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x2dc8);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	push_offset(L04104);
	call();
	push_offset(L01224);
	jmp();

L01214:
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x2dc8);
	load(0x2);
	push_offset(L04378);
	call();

L01224:
	push_base_offset(0x68);
	push_base_offset(0x68);
	load(0x2);
	bool_zero();
	move(0x2);
	push_base_offset(0x64);
	push_byte(0x0);
	move(0x2);
	push_offset(L008f2);
	jmp();

L0123a:
	push_base_offset(0x7c);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L012af);
	jc(0x1);
	push_word(0x96);
	push_offset(L03a0b);
	call();
	push_base_offset(0x2dc8);
	move_arg(0x2);
	push_base_offset(0x64);
	load(0x2);
	push_offset(L01289);
	jc(0x0);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x0);
	push_word(0x1800);
	push_word(0xfd);
	add();
	push_byte(0x1);
	add();
	push_base_offset(0x2dc8);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x1);
	push_offset(L04104);
	call();
	push_offset(L01299);
	jmp();

L01289:
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x2dc8);
	load(0x2);
	push_offset(L04378);
	call();

L01299:
	push_base_offset(0x64);
	push_base_offset(0x64);
	load(0x2);
	bool_zero();
	move(0x2);
	push_base_offset(0x68);
	push_byte(0x0);
	move(0x2);
	push_offset(L008f2);
	jmp();

L012af:
	push_word(0x96);
	push_offset(L03a0b);
	call();
	push_base_offset(0x2dc8);
	move_arg(0x2);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x2dc8);
	load(0x2);
	push_offset(L04378);
	call();
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x0);
	sys1(0xa8);
	push_base_offset(0x2ca8);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L02b15);
	call();
	push_base_offset(0x2de0);
	move_arg(0x2);
	push_base_offset(0xac);
	load(0x2);
	push_byte(0x1);
	sys1(0xa8);
	push_base_offset(0x2de0);
	load(0x2);
	push_offset(L01334);
	jc(0x1);
	push_base_offset(0x74);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x60);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x2ca8);
	load(0x2);
	move(0x2);
	push_base_offset(0x58);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x5c);
	push_byte(0x1);
	move(0x2);

L01334:
	push_base_offset(0x68);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x64);
	push_byte(0x0);
	move(0x2);
	push_offset(L008f2);
	jmp();

L01346:
	push_word(0x96);
	push_offset(L03a0b);
	call();
	push_base_offset(0x2dc8);
	move_arg(0x2);
	push_base_offset(0xb8);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x2dc8);
	load(0x2);
	push_offset(L04378);
	call();
	push_base_offset(0x68);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x64);
	push_byte(0x0);
	move(0x2);
	push_offset(L008f2);
	jmp();

L01374:
	push_word(0x1800);
	push_word(0x104);
	add();
	push_word(0x80);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x438);
	load(0x2);
	push_base_offset(0x5a4);
	grp1(0xb7);
	push_byte(0x0);
	grp1(0x0);
	push_base_offset(0x2cb0);
	load(0x2);
	push_base_offset(0x2ca4);
	push_base_offset(0x2de8);
	load(0x2);
	push_offset(L0382f);
	call();
	push_base_offset(0x30);
	move_arg(0x2);
	push_word(0x1800);
	push_word(0x104);
	add();
	push_word(0x80);
	add();
	push_base_offset(0x2ca4);
	push_base_offset(0x2de8);
	load(0x2);
	push_offset(L03106);
	call();
	push_base_offset(0x438);
	load(0x2);
	push_base_offset(0x5a4);
	grp1(0xb7);
	push_byte(0x0);
	grp1(0x0);
	sys1(0x5f);
	push_offset(L008f2);
	jmp();

L013d2:
	push_word(0x1800);
	push_word(0x103);
	add();
	push_word(0x80);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x438);
	load(0x2);
	push_base_offset(0x5a4);
	grp1(0xb7);
	push_byte(0x0);
	grp1(0x0);
	push_base_offset(0x2ca8);
	load(0x2);
	push_base_offset(0x434);
	push_base_offset(0x2de8);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L03655);
	call();
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x438);
	load(0x2);
	push_word(0x1800);
	push_word(0x103);
	add();
	push_word(0x80);
	add();
	push_base_offset(0x434);
	push_base_offset(0x2de8);
	load(0x2);
	push_base_offset(0x2ca8);
	load(0x2);
	push_base_offset(0x2cb8);
	load(0x2);
	push_offset(L02bf7);
	call();
	push_base_offset(0x438);
	load(0x2);
	push_base_offset(0x5a4);
	grp1(0xb7);
	push_byte(0x0);
	grp1(0x0);
	sys1(0x5f);
	push_offset(L008f2);
	jmp();

L01444:
	push_dword(0x42ae4);
	push_byte(0x0);
	move(0x2);
	push_word(0x460);
	push_byte(0x1);
	move(0x2);
	push_word(0x4d8);
	push_byte(0x0);
	move(0x2);
	push_word(0x46c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xac);
	load(0x2);
	grp1(0xb9);

L01469:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L0147f);
	jc(0x0);
	push_word(0x508);
	load(0x2);
	push_offset(L01469);
	jc(0x0);

L0147f:
	push_dword(0x42ac8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01575);
	jc(0x0);
	push_base_offset(0x2de4);
	load(0x2);
	bool_zero();
	push_word(0x448);
	load(0x2);
	bool_and();
	push_offset(L014df);
	jc(0x0);
	push_word(0x448);
	load(0x2);
	push_word(0x1f4);
	push_word(0x96);
	ternary();
	push_base_offset(0x2dc8);
	move_arg(0x2);
	push_word(0x4f4);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x2dc8);
	load(0x2);
	ternary();
	push_base_offset(0x2dc8);
	move_arg(0x2);
	push_base_offset(0x548);
	push_base_offset(0xb4);
	push_base_offset(0xb0);
	push_base_offset(0x444);
	load(0x2);
	push_base_offset(0x2dc8);
	load(0x2);
	push_word(0x480);
	load(0x2);
	call();
	push_offset(L01575);
	jmp();

L014df:
	grp1(0x60);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x8d1);
	grp1(0x66);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	grp1(0x64);
	push_word(0x4f4);
	load(0x2);
	push_byte(0x0);
	push_word(0x1f4);
	ternary();
	push_offset(L03a0b);
	call();
	push_base_offset(0x2dc8);
	move_arg(0x2);
	push_base_offset(0x2dc8);
	load(0x2);
	push_byte(0x0);
	gt();
	push_byte(0x5);
	push_byte(0x0);
	ternary();
	push_base_offset(0x2ddc);
	move_arg(0x2);
	push_base_offset(0x2ddc);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x100);
	push_base_offset(0x2dc8);
	load(0x2);
	push_word(0xfa);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x20);
	push_base_offset(0x2ddc);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x4c);
	push_word(0x800);
	push_byte(0x3f);
	add();
	grp1(0x12);
	push_word(0x7b8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x61);

L01575:
	push_base_offset(0x438);
	load(0x2);
	grp1(0x81);
	push_base_offset(0x334);
	load(0x2);
	grp1(0x51);
	push_base_offset(0x314);
	load(0x2);
	grp1(0x51);
	push_base_offset(0xb8);
	load(0x2);
	push_offset(L03f39);
	call();
	push_base_offset(0x2dd4);
	push_byte(0x0);
	move(0x2);

L0159a:
	push_word(0x1800);
	push_word(0x100);
	add();
	push_base_offset(0x2dd4);
	load(0x2);
	add();
	grp1(0x12);
	push_base_offset(0x2dd4);
	push_base_offset(0x2dd4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2dd4);
	load(0x2);
	push_byte(0xa);
	push_byte(0x2);
	mul();
	lt();
	push_offset(L0159a);
	jc(0x0);
	push_word(0x1800);
	push_word(0x102);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_word(0x1800);
	push_word(0x100);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_word(0x1800);
	push_word(0x103);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_word(0x1800);
	push_word(0x104);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_word(0x1800);
	push_word(0x109);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_base_offset(0x2de8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0163b);
	jc(0x1);

L01614:
	push_dword(0x9faac);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01629);
	jc(0x0);
	sys1(0x5f);
	push_offset(L01614);
	jmp();

L01629:
	push_dword(0x9faac);
	load(0x2);
	sys1(0x21);
	push_dword(0x9faac);
	push_byte(0x0);
	move(0x2);

L0163b:
	sys1(0x41);
	sys1(0x41);
	sys1(0x41);
	push_base_offset(0x2dd0);
	load(0x2);
	push_base_offset(0x2dcc);
	load(0x2);
	load_base();
	push_word(0x2de8);
	sub();
	store_base();
	ret();

L01652:
	load_base();
	push_word(0x97c);
	add();
	store_base();
	push_base_offset(0x948);
	move_arg(0x2);
	push_base_offset(0x94c);
	move_arg(0x2);
	push_base_offset(0x950);
	move_arg(0x2);
	push_base_offset(0x954);
	move_arg(0x2);
	push_base_offset(0x958);
	move_arg(0x2);
	push_base_offset(0x95c);
	move_arg(0x2);
	push_base_offset(0x960);
	move_arg(0x2);
	push_base_offset(0x964);
	move_arg(0x2);
	push_base_offset(0x968);
	move_arg(0x2);
	push_base_offset(0x96c);
	move_arg(0x2);
	push_base_offset(0x970);
	move_arg(0x2);
	push_base_offset(0x974);
	move_arg(0x2);
	push_base_offset(0x978);
	move_arg(0x2);
	push_base_offset(0x97c);
	move_arg(0x2);
	push_base_offset(0x944);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x944);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x944);
	push_byte(0x8);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x18);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x34);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x38);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x934);
	push_word(0x9c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x934);
	push_word(0xa0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x934);
	push_word(0xa4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x934);
	push_word(0xa8);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x944);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x934);
	push_word(0xa8);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x944);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x934);
	push_word(0xc0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x20);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x24);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x944);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x870);
	push_byte(0x24);
	add();
	push_byte(0x1);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x944);
	push_byte(0xc);
	memcpy();
	push_base_offset(0x870);
	push_byte(0x3c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x974);
	load(0x2);
	push_byte(0x0);
	eq();
	push_byte(0x0);
	push_byte(0x1);
	ternary();
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x964);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x964);
	load(0x2);
	push_byte(0xa);
	div();
	push_base_offset(0x970);
	load(0x2);
	eq();
	bool_and();
	push_base_offset(0x964);
	load(0x2);
	push_byte(0xa);
	mod();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x38);
	push_base_offset(0x964);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x964);
	load(0x2);
	push_byte(0xa);
	div();
	push_byte(0x13);
	eq();
	bool_and();
	move(0x2);
	push_base_offset(0x938);
	push_base_offset(0x97c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x0);
	add();
	push_byte(0x14);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x8);
	add();
	push_base_offset(0x938);
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0xc);
	add();
	push_base_offset(0x970);
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x97c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x870);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x148);
	push_byte(0x28);
	push_byte(0x74);
	push_word(0xc0);
	push_word(0x10c);
	push_word(0x158);
	push_word(0x1a4);
	push_word(0x1f0);
	push_word(0x23c);
	push_word(0x288);
	push_word(0x2d4);
	push_byte(0x28);
	push_byte(0x74);
	push_word(0xc0);
	push_word(0x10c);
	push_word(0x158);
	push_word(0x1a4);
	push_word(0x1f0);
	push_word(0x23c);
	push_word(0x288);
	push_word(0x2d4);
	cmd_0c(0x2, 0x14);
	push_base_offset(0xc8);
	push_word(0x25d);
	push_word(0x25d);
	push_word(0x25d);
	push_word(0x25d);
	push_word(0x25d);
	push_word(0x25d);
	push_word(0x25d);
	push_word(0x25d);
	push_word(0x25d);
	push_word(0x25d);
	push_word(0x283);
	push_word(0x283);
	push_word(0x283);
	push_word(0x283);
	push_word(0x283);
	push_word(0x283);
	push_word(0x283);
	push_word(0x283);
	push_word(0x283);
	push_word(0x283);
	cmd_0c(0x2, 0x14);
	push_base_offset(0x828);
	push_word(0x1800);
	push_byte(0x0);
	add();
	push_byte(0x3c);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	move(0x2);
	push_base_offset(0x824);
	push_byte(0x0);
	move(0x2);

L01909:
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	push_base_offset(0x824);
	load(0x2);
	push_base_offset(0x970);
	load(0x2);
	neq();
	move(0x2);
	push_base_offset(0x824);
	load(0x2);
	push_byte(0x13);
	eq();
	push_offset(L01947);
	jc(0x1);
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x95c);
	load(0x2);
	bool_zero();
	bool_and();
	push_base_offset(0x958);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);

L01947:
	push_base_offset(0x934);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x8);
	add();
	push_base_offset(0x148);
	push_base_offset(0x824);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0xc);
	add();
	push_base_offset(0xc8);
	push_base_offset(0x824);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x828);
	load(0x2);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x30);
	add();
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x938);
	load(0x2);
	push_base_offset(0x824);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x934);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x828);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x824);
	push_base_offset(0x824);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x824);
	load(0x2);
	push_byte(0x14);
	lt();
	push_offset(L01909);
	jc(0x0);
	push_base_offset(0x938);
	push_base_offset(0x97c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x0);
	add();
	push_byte(0xa);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x8);
	add();
	push_base_offset(0x938);
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0xc);
	add();
	push_base_offset(0x3c);
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x97c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x870);
	push_byte(0x40);
	memcpy();
	push_string("ＭＳ ゴシック");
	push_offset(L03e7f);
	call();
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_string("ＭＳ ゴシック");
	push_offset(L03e7f);
	call();
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x974);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x578);
	load(0x2);
	push_word(0x58c);
	load(0x2);
	ternary();
	push_base_offset(0x1c);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x974);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x57c);
	load(0x2);
	push_word(0x590);
	load(0x2);
	ternary();
	push_base_offset(0x1c);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x974);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x580);
	load(0x2);
	push_word(0x594);
	load(0x2);
	ternary();
	push_base_offset(0x1c);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x828);
	push_word(0x1800);
	push_word(0x100);
	add();
	move(0x2);
	push_base_offset(0x824);
	push_byte(0x0);
	move(0x2);

L01b1a:
	push_base_offset(0x954);
	load(0x2);
	push_offset(L01e8c);
	jc(0x1);
	push_base_offset(0x950);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L01b9d);
	jc(0x0);
	push_base_offset(0x950);
	load(0x2);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	lt();
	push_base_offset(0x950);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	lt();
	bool_and();
	push_offset(L01b9d);
	jc(0x0);
	push_base_offset(0x970);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x824);
	load(0x2);
	add();
	push_base_offset(0x950);
	load(0x2);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	eq();
	push_offset(L01b9d);
	jc(0x0);
	push_base_offset(0x970);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x824);
	load(0x2);
	add();
	push_base_offset(0x950);
	load(0x2);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	eq();
	push_offset(L01b9d);
	jc(0x0);
	push_offset(L01e8c);
	jmp();

L01b9d:
	push_base_offset(0x828);
	load(0x2);
	push_word(0x1800);
	push_byte(0x78);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	grp2(0x1f);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x1);
	add();
	push_word(0x1800);
	push_byte(0x78);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	push_byte(0x1);
	add();
	grp2(0x1f);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x2);
	add();
	push_word(0x1800);
	push_byte(0x78);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	push_byte(0x2);
	add();
	grp2(0x1f);
	push_base_offset(0x820);
	push_word(0x1800);
	push_word(0x105);
	add();
	push_word(0x80);
	add();
	push_base_offset(0x970);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x824);
	load(0x2);
	add();
	push_byte(0x3);
	push_base_offset(0x948);
	load(0x2);
	call();
	push_base_offset(0x254);
	move_arg(0x2);
	push_base_offset(0x254);
	load(0x2);
	push_offset(L01c2e);
	jc(0x1);
	push_base_offset(0x820);
	push_byte(0x7);
	push_base_offset(0x948);
	load(0x2);
	call();
	push_base_offset(0x254);
	move_arg(0x2);

L01c2e:
	push_base_offset(0x978);
	load(0x2);
	push_base_offset(0x824);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x254);
	load(0x2);
	move(0x2);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_word(0xf0);
	push_byte(0x10);
	push_byte(0x2);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_byte(0xa);
	push_base_offset(0x970);
	load(0x2);
	mul();
	push_base_offset(0x824);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	push_base_offset(0x24c);
	push_string("No.%03d");
	cmd_6f();
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x3);
	push_word(0x8e);
	push_byte(0xc);
	push_base_offset(0x24c);
	push_base_offset(0x1c);
	push_base_offset(0x30);
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0xa);
	push_byte(0xa);
	push_word(0xc0);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_offset(L034f3);
	call();
	push_base_offset(0x254);
	load(0x2);
	push_offset(L01e2b);
	jc(0x1);
	push_word(0x1800);
	push_word(0x106);
	add();
	push_word(0x80);
	add();
	push_word(0x1800);
	push_word(0x105);
	add();
	push_word(0x80);
	add();
	push_byte(0x7d);
	push_byte(0x10);
	shl();
	push_word(0x1b0);
	div();
	push_byte(0x1);
	add();
	push_byte(0x46);
	push_byte(0x10);
	shl();
	push_word(0xf3);
	div();
	push_byte(0x1);
	add();
	push_byte(0x1);
	grp2(0x1c);
	push_base_offset(0x830);
	push_word(0x1800);
	push_word(0x106);
	add();
	push_word(0x80);
	add();
	move(0x2);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x7);
	push_byte(0x6);
	push_base_offset(0x830);
	load(0x2);
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x7);
	push_byte(0x6);
	push_base_offset(0x830);
	load(0x2);
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x2);
	add();
	push_byte(0x7);
	push_byte(0x6);
	push_base_offset(0x830);
	load(0x2);
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x10);
	push_base_offset(0x820);
	push_byte(0x0);
	add();
	push_byte(0x10);
	memcpy();
	push_base_offset(0x10);
	push_byte(0xc);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0xa);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x8);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x6);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x2);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x0);
	add();
	load(0x1);
	push_base_offset(0x24c);
	push_string("%04d/%02d/%02d　%02d:%02d:%02d");
	cmd_6f();
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x3);
	push_word(0x8e);
	push_byte(0x21);
	push_base_offset(0x24c);
	push_base_offset(0x1c);
	push_base_offset(0x30);
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0xa);
	push_byte(0xa);
	push_word(0xc0);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_offset(L034f3);
	call();
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x3);
	push_word(0x8e);
	push_byte(0x36);
	push_base_offset(0x820);
	push_byte(0x60);
	add();
	push_base_offset(0x1c);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x0);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0xa);
	push_byte(0xa);
	push_word(0xc0);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_offset(L034f3);
	call();
	push_offset(L01e8c);
	jmp();

L01e2b:
	push_base_offset(0x970);
	load(0x2);
	push_byte(0x13);
	neq();
	push_word(0x1800);
	push_word(0x80);
	add();
	push_word(0x1800);
	push_word(0x80);
	add();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x830);
	move_arg(0x2);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x6);
	push_byte(0x5);
	push_base_offset(0x830);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x6);
	push_byte(0x5);
	push_base_offset(0x830);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x2);
	add();
	push_byte(0x6);
	push_byte(0x5);
	push_base_offset(0x830);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);

L01e8c:
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x95c);
	load(0x2);
	push_base_offset(0x958);
	load(0x2);
	bool_or();
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x824);
	load(0x2);
	eq();
	bool_and();
	push_byte(0x0);
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x934);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x8);
	add();
	push_byte(0x1c);
	push_base_offset(0x824);
	load(0x2);
	push_byte(0x5);
	div();
	push_word(0x186);
	mul();
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0xc);
	add();
	push_word(0xa1);
	push_base_offset(0x824);
	load(0x2);
	push_byte(0x5);
	mod();
	push_byte(0x56);
	mul();
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x828);
	load(0x2);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x938);
	load(0x2);
	push_base_offset(0x824);
	load(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x934);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x828);
	push_base_offset(0x828);
	load(0x2);
	push_byte(0x3);
	add();
	move(0x2);
	push_base_offset(0x824);
	push_base_offset(0x824);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x824);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L01b1a);
	jc(0x0);
	push_word(0x1800);
	push_word(0x105);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_word(0x1800);
	push_word(0x106);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_base_offset(0x960);
	load(0x2);
	push_offset(L0204a);
	jc(0x1);
	push_base_offset(0x254);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_offset(L01ff8);
	jc(0x1);
	push_base_offset(0x254);
	push_base_offset(0x978);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_offset(L0203e);
	jmp();

L01ff8:
	push_base_offset(0x964);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_offset(L0203e);
	jc(0x1);
	push_base_offset(0x820);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x964);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x948);
	load(0x2);
	call();
	push_base_offset(0x254);
	move_arg(0x2);
	push_base_offset(0x254);
	load(0x2);
	push_offset(L0203e);
	jc(0x1);
	push_base_offset(0x820);
	push_byte(0x7);
	push_base_offset(0x948);
	load(0x2);
	call();
	push_base_offset(0x254);
	move_arg(0x2);

L0203e:
	push_base_offset(0x968);
	load(0x2);
	push_base_offset(0x254);
	load(0x2);
	move(0x2);

L0204a:
	push_base_offset(0x938);
	push_base_offset(0x97c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x0);
	add();
	push_byte(0x3);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x8);
	add();
	push_base_offset(0x938);
	load(0x2);
	move(0x2);
	push_base_offset(0x95c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x830);
	move_arg(0x2);
	push_base_offset(0x958);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x830);
	load(0x2);
	ternary();
	push_base_offset(0x870);
	push_byte(0xc);
	add();
	move_arg(0x2);
	push_base_offset(0x870);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x97c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x870);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x934);
	push_byte(0x4);
	add();
	push_base_offset(0x970);
	load(0x2);
	push_byte(0x13);
	neq();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	push_base_offset(0x934);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x968);
	load(0x2);
	load(0x2);
	bool_and();
	push_base_offset(0x38);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x8);
	add();
	push_byte(0x28);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0xc);
	add();
	push_byte(0x7a);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x83);
	add();
	push_byte(0x0);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x83);
	add();
	push_byte(0x0);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x83);
	add();
	push_byte(0x0);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x30);
	add();
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x938);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x934);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x934);
	push_byte(0x4);
	add();
	push_base_offset(0x970);
	load(0x2);
	push_byte(0x13);
	neq();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	push_base_offset(0x934);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x968);
	load(0x2);
	load(0x2);
	bool_and();
	push_base_offset(0x38);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x8);
	add();
	push_byte(0x74);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0xc);
	add();
	push_byte(0x7a);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x83);
	add();
	push_byte(0x6);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x83);
	add();
	push_byte(0x6);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x83);
	add();
	push_byte(0x6);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x30);
	add();
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x938);
	load(0x2);
	push_byte(0x1);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x934);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x934);
	push_byte(0x4);
	add();
	push_base_offset(0x970);
	load(0x2);
	push_byte(0x13);
	neq();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	push_base_offset(0x934);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x968);
	load(0x2);
	load(0x2);
	bool_and();
	push_base_offset(0x38);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x8);
	add();
	push_word(0xc0);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0xc);
	add();
	push_byte(0x7a);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x83);
	add();
	push_byte(0xc);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x83);
	add();
	push_byte(0xc);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x83);
	add();
	push_byte(0xc);
	add();
	push_byte(0x3);
	push_base_offset(0x40);
	load(0x2);
	mul();
	add();
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x30);
	add();
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x938);
	load(0x2);
	push_byte(0x2);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x934);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x938);
	push_base_offset(0x97c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x8);
	add();
	push_base_offset(0x938);
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x97c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x870);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	push_base_offset(0x970);
	load(0x2);
	push_byte(0x13);
	neq();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x8);
	add();
	push_word(0xa2);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0xc);
	add();
	push_byte(0x56);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x104);
	add();
	push_word(0x80);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x938);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x934);
	push_word(0xc4);
	memcpy();
	push_base_offset(0x938);
	push_base_offset(0x97c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x6);
	push_byte(0x40);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x8);
	add();
	push_base_offset(0x938);
	load(0x2);
	move(0x2);
	push_base_offset(0x870);
	push_byte(0xc);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x870);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x97c);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x6);
	push_byte(0x40);
	mul();
	add();
	push_base_offset(0x870);
	push_byte(0x40);
	memcpy();
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x964);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	push_offset(L0251c);
	jc(0x1);
	push_base_offset(0x964);
	load(0x2);
	push_byte(0xa);
	div();
	push_byte(0x13);
	eq();
	push_offset(L0251c);
	jc(0x0);
	push_base_offset(0x934);
	push_byte(0x0);
	add();
	push_base_offset(0x968);
	load(0x2);
	load(0x2);
	move(0x2);

L0251c:
	push_base_offset(0x934);
	push_byte(0x4);
	add();
	push_base_offset(0x964);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	neq();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x8);
	add();
	push_word(0x344);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0xc);
	add();
	push_word(0x1ce);
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_word(0x1800);
	push_word(0x103);
	add();
	push_word(0x80);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x20);
	add();
	push_byte(0x3);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x934);
	push_byte(0x30);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x938);
	load(0x2);
	push_byte(0x0);
	push_word(0xc4);
	mul();
	add();
	push_base_offset(0x934);
	push_word(0xc4);
	memcpy();
	load_base();
	push_word(0x97c);
	sub();
	store_base();
	ret();

L025c3:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_offset(L02602);
	push_offset(L02828);
	cmd_0c(0x2, 0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L02602:
	load_base();
	push_word(0x1114);
	add();
	store_base();
	push_base_offset(0x1110);
	move_arg(0x2);
	push_base_offset(0x1114);
	move_arg(0x2);
	push_base_offset(0x1104);
	push_byte(0x0);
	move(0x2);
	push_string("sysprg.arc");
	push_string("yesnownd._bp");
	sys1(0x40);
	push_base_offset(0x1100);
	move_arg(0x2);
	push_word(0xb40);
	load(0x2);
	push_offset(L0264d);
	jc(0x0);
	push_base_offset(0x10fc);
	push_word(0xeba);
	grp1(0x16);
	push_offset(L0264d);
	jc(0x1);
	push_dword(0x45f30);
	push_dword(0x11156c);
	grp2(0x9f);
	push_offset(L0265f);
	jmp();

L0264d:
	push_dword(0x45f30);
	push_dword(0x9fab8);
	push_dword(0x230ac);
	add();
	grp2(0x9f);

L0265f:
	push_base_offset(0x10e4);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x1114);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x1110);
	load(0x2);
	call();
	push_offset(L026ad);
	jc(0x1);
	push_base_offset(0x10e4);
	push_byte(0x7);
	push_base_offset(0x1110);
	load(0x2);
	call();
	push_offset(L026ad);
	jc(0x1);
	push_byte(0x3);
	push_base_offset(0x1100);
	load(0x2);
	call();
	push_base_offset(0x1108);
	move_arg(0x2);
	push_byte(0x32);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0x1108);
	load(0x2);
	push_offset(L0281a);
	jc(0x1);
	push_offset(L026cc);
	jmp();

L026ad:
	push_byte(0x6);
	push_base_offset(0x1100);
	load(0x2);
	call();
	push_base_offset(0x1108);
	move_arg(0x2);
	push_byte(0x32);
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);
	push_base_offset(0x1108);
	load(0x2);
	push_offset(L0281a);
	jc(0x1);

L026cc:
	push_dword(0x9faac);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L026e1);
	jc(0x0);
	sys1(0x5f);
	push_offset(L026cc);
	jmp();

L026e1:
	push_base_offset(0x1114);
	load(0x2);
	push_byte(0x14);
	push_byte(0xa);
	mul();
	lt();
	push_offset(L02715);
	jc(0x1);
	push_byte(0x20);
	push_word(0xa0);
	add();
	push_base_offset(0x1114);
	load(0x2);
	push_byte(0xa);
	div();
	move(0x1);
	push_byte(0x20);
	push_word(0xa2);
	add();
	push_base_offset(0x1114);
	load(0x2);
	push_byte(0xa);
	mod();
	move(0x1);
	push_offset(L02739);
	jmp();

L02715:
	push_byte(0x20);
	push_word(0xa0);
	add();
	push_byte(0x20);
	push_word(0x9c);
	add();
	load(0x1);
	move(0x1);
	push_byte(0x20);
	push_word(0xa2);
	add();
	push_byte(0xa);
	push_base_offset(0x1114);
	load(0x2);
	add();
	push_word(0xc8);
	sub();
	move(0x1);

L02739:
	push_base_offset(0x718);
	push_word(0x400);
	memclr();
	push_base_offset(0x718);
	push_dword(0x45f30);
	cmd_6a();
	push_base_offset(0x718);
	cmd_68();
	push_base_offset(0x110c);
	move_arg(0x2);
	push_base_offset(0x110c);
	load(0x2);
	push_byte(0x50);
	lt();
	push_offset(L027be);
	jc(0x0);
	push_base_offset(0x310);
	push_byte(0x0);
	move(0x2);

L02766:
	push_base_offset(0x718);
	push_base_offset(0x310);
	load(0x2);
	add();
	cmd_6c();
	push_base_offset(0x314);
	move_arg(0x2);
	push_base_offset(0x318);
	move_arg(0x2);
	push_base_offset(0x110c);
	move_arg(0x2);
	push_base_offset(0x318);
	load(0x2);
	push_byte(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x110c);
	move_arg(0x2);
	push_base_offset(0x310);
	push_base_offset(0x310);
	load(0x2);
	push_base_offset(0x110c);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x310);
	load(0x2);
	push_byte(0x50);
	lt();
	push_offset(L02766);
	jc(0x0);
	push_base_offset(0x718);
	push_base_offset(0x310);
	load(0x2);
	add();
	push_base_offset(0x110c);
	load(0x2);
	sub();
	push_byte(0x0);
	move(0x0);

L027be:
	push_base_offset(0x1114);
	load(0x2);
	push_base_offset(0x718);
	push_dword(0x9fab8);
	push_byte(0x60);
	add();
	push_dword(0x9faac);
	load(0x2);
	push_dword(0x9fab0);
	load(0x2);
	push_dword(0x9fab4);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x1110);
	load(0x2);
	call();
	push_offset(L0281a);
	jc(0x1);
	push_base_offset(0x1104);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1114);
	load(0x2);
	push_word(0xce);
	eq();
	push_offset(L0280c);
	jc(0x1);
	push_word(0xbe8);
	push_byte(0x1);
	move(0x2);

L0280c:
	push_base_offset(0x30c);
	push_byte(0x0);
	sys1(0x3d);
	push_base_offset(0x30c);
	sys1(0x39);
	sys1(0x81);

L0281a:
	sys1(0x41);
	push_base_offset(0x1104);
	load(0x2);
	load_base();
	push_word(0x1114);
	sub();
	store_base();
	ret();

L02828:
	load_base();
	push_word(0x5d8);
	add();
	store_base();
	push_base_offset(0x5d4);
	move_arg(0x2);
	push_base_offset(0x5d8);
	move_arg(0x2);
	push_base_offset(0x5d0);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L02942);
	jc(0x0);
	push_base_offset(0x5cc);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x5d8);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x5d4);
	load(0x2);
	call();
	push_offset(L02942);
	jc(0x1);
	push_base_offset(0x5cc);
	push_byte(0x7);
	push_base_offset(0x5d4);
	load(0x2);
	call();
	push_offset(L02942);
	jc(0x1);
	push_word(0x4001);
	push_base_offset(0x5d8);
	load(0x2);
	sys1(0xa1);

L02889:
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L028a4);
	jc(0x0);
	sys1(0x5f);
	push_offset(L02889);
	jmp();

L028a4:
	push_dword(0x42768);
	push_byte(0xa);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L028bf);
	jc(0x1);
	sys1(0x5f);
	push_offset(L028a4);
	jmp();

L028bf:
	push_word(0x448);
	load(0x2);
	push_offset(L02921);
	jc(0x1);
	push_base_offset(0x5d8);
	load(0x2);
	push_byte(0x14);
	push_byte(0xa);
	mul();
	lt();
	push_offset(L028fd);
	jc(0x1);
	push_byte(0x20);
	push_word(0xa4);
	add();
	push_base_offset(0x5d8);
	load(0x2);
	push_byte(0xa);
	div();
	move(0x1);
	push_byte(0x20);
	push_word(0xa6);
	add();
	push_base_offset(0x5d8);
	load(0x2);
	push_byte(0xa);
	mod();
	move(0x1);
	push_offset(L02921);
	jmp();

L028fd:
	push_byte(0x20);
	push_word(0xa4);
	add();
	push_byte(0x20);
	push_word(0x9c);
	add();
	load(0x1);
	move(0x1);
	push_byte(0x20);
	push_word(0xa6);
	add();
	push_byte(0xa);
	push_base_offset(0x5d8);
	load(0x2);
	add();
	push_word(0xc8);
	sub();
	move(0x1);

L02921:
	push_word(0x4f4);
	load(0x2);
	push_offset(L0293b);
	jc(0x0);
	push_word(0x508);
	load(0x2);
	push_offset(L0293b);
	jc(0x1);
	sys1(0x5f);
	push_offset(L02921);
	jmp();

L0293b:
	push_base_offset(0x5d0);
	push_byte(0x1);
	move(0x2);

L02942:
	push_base_offset(0x5d0);
	load(0x2);
	load_base();
	push_word(0x5d8);
	sub();
	store_base();
	ret();

L0294e:
	load_base();
	push_word(0x638);
	add();
	store_base();
	push_base_offset(0x630);
	move_arg(0x2);
	push_base_offset(0x634);
	move_arg(0x2);
	push_base_offset(0x638);
	move_arg(0x2);
	push_base_offset(0x62c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x638);
	load(0x2);
	push_base_offset(0x634);
	load(0x2);
	neq();
	push_offset(L02a29);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("yesnownd._bp");
	sys1(0x40);
	push_base_offset(0x620);
	move_arg(0x2);
	push_byte(0xb);
	push_base_offset(0x620);
	load(0x2);
	call();
	push_base_offset(0x628);
	move_arg(0x2);
	sys1(0x41);
	push_base_offset(0x628);
	load(0x2);
	push_offset(L02a29);
	jc(0x1);
	push_base_offset(0x61c);
	push_base_offset(0x638);
	load(0x2);
	push_byte(0x6);
	push_base_offset(0x630);
	load(0x2);
	call();
	push_base_offset(0x310);
	push_base_offset(0x634);
	load(0x2);
	push_byte(0x6);
	push_base_offset(0x630);
	load(0x2);
	call();
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x35);
	push_base_offset(0x624);
	move_arg(0x2);
	push_base_offset(0x624);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L02a29);
	jc(0x1);
	push_base_offset(0x624);
	load(0x2);
	sys1(0x20);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x30);
	push_base_offset(0x624);
	move_arg(0x2);
	push_base_offset(0x61c);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x624);
	load(0x2);
	sys1(0x32);
	push_base_offset(0x628);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	sys1(0x21);
	push_base_offset(0x628);
	load(0x2);
	push_offset(L02a29);
	jc(0x1);
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x33);
	push_base_offset(0x62c);
	push_byte(0x1);
	move(0x2);

L02a29:
	push_base_offset(0x62c);
	load(0x2);
	load_base();
	push_word(0x638);
	sub();
	store_base();
	ret();

L02a35:
	load_base();
	push_word(0x638);
	add();
	store_base();
	push_base_offset(0x630);
	move_arg(0x2);
	push_base_offset(0x634);
	move_arg(0x2);
	push_base_offset(0x638);
	move_arg(0x2);
	push_base_offset(0x62c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x638);
	load(0x2);
	push_base_offset(0x634);
	load(0x2);
	neq();
	push_offset(L02b09);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("yesnownd._bp");
	sys1(0x40);
	push_base_offset(0x620);
	move_arg(0x2);
	push_byte(0xa);
	push_base_offset(0x620);
	load(0x2);
	call();
	push_base_offset(0x628);
	move_arg(0x2);
	sys1(0x41);
	push_base_offset(0x628);
	load(0x2);
	push_offset(L02b09);
	jc(0x1);
	push_base_offset(0x61c);
	push_base_offset(0x638);
	load(0x2);
	push_byte(0x6);
	push_base_offset(0x630);
	load(0x2);
	call();
	push_base_offset(0x310);
	push_base_offset(0x634);
	load(0x2);
	push_byte(0x6);
	push_base_offset(0x630);
	load(0x2);
	call();
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x35);
	push_base_offset(0x624);
	move_arg(0x2);
	push_base_offset(0x624);
	load(0x2);
	push_byte(0x0);
	gt();
	push_offset(L02b09);
	jc(0x1);
	push_base_offset(0x624);
	load(0x2);
	sys1(0x20);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x30);
	push_base_offset(0x624);
	move_arg(0x2);
	push_base_offset(0x61c);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x624);
	load(0x2);
	sys1(0x32);
	push_base_offset(0x628);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	sys1(0x21);
	push_base_offset(0x628);
	load(0x2);
	push_offset(L02b09);
	jc(0x1);
	push_base_offset(0x62c);
	push_byte(0x1);
	move(0x2);

L02b09:
	push_base_offset(0x62c);
	load(0x2);
	load_base();
	push_word(0x638);
	sub();
	store_base();
	ret();

L02b15:
	load_base();
	push_word(0x320);
	add();
	store_base();
	push_base_offset(0x31c);
	move_arg(0x2);
	push_base_offset(0x320);
	move_arg(0x2);
	push_base_offset(0x318);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x310);
	push_base_offset(0x320);
	load(0x2);
	push_byte(0x6);
	push_base_offset(0x31c);
	load(0x2);
	call();
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x34);
	push_offset(L02b7c);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("yesnownd._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x9);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0x314);
	move_arg(0x2);
	sys1(0x41);
	push_base_offset(0x314);
	load(0x2);
	push_offset(L02b7c);
	jc(0x1);
	push_byte(0x0);
	push_base_offset(0x310);
	sys1(0x33);
	push_base_offset(0x318);
	push_byte(0x1);
	move(0x2);

L02b7c:
	push_base_offset(0x318);
	load(0x2);
	load_base();
	push_word(0x320);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L02bcf);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("gotitle._bp");
	push_word(0x200);
	push_dword(0x8000);
	push_dword(0x8000);
	sys1(0x44);
	push_offset(L03a5b);
	call();

L02bb5:
	push_word(0x4f4);
	load(0x2);
	push_offset(L02bcf);
	jc(0x0);
	push_word(0x508);
	load(0x2);
	push_offset(L02bcf);
	jc(0x1);
	sys1(0x5f);
	push_offset(L02bb5);
	jmp();

L02bcf:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x4000);
	push_byte(0x0);
	sys1(0xa1);
	push_offset(L03a5b);
	call();
	push_byte(0x1);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L02bf7:
	load_base();
	push_byte(0x1c);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_word(0x1800);
	push_word(0x102);
	add();
	push_word(0x80);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L02c99);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_word(0x330);
	push_word(0x84);
	push_word(0x1800);
	push_word(0x102);
	add();
	push_word(0x80);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp3(0x89);
	push_word(0x1800);
	push_word(0x102);
	add();
	push_word(0x80);
	add();
	push_word(0x344);
	push_word(0x330);
	sub();
	push_word(0x1ce);
	push_word(0x84);
	sub();
	push_word(0x1800);
	push_word(0x103);
	add();
	push_word(0x80);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x1c);
	sub();
	store_base();
	ret();

L02c99:
	load_base();
	push_word(0x70c);
	add();
	store_base();
	push_base_offset(0x6f8);
	move_arg(0x2);
	push_base_offset(0x6fc);
	move_arg(0x2);
	push_base_offset(0x700);
	move_arg(0x2);
	push_base_offset(0x704);
	move_arg(0x2);
	push_base_offset(0x708);
	move_arg(0x2);
	push_base_offset(0x70c);
	move_arg(0x2);
	push_base_offset(0x6f4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x70c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1800);
	push_word(0x101);
	add();
	push_word(0x80);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x708);
	load(0x2);
	push_byte(0x1c);
	push_byte(0xe);
	mul();
	push_byte(0xa);
	add();
	push_byte(0x2);
	add();
	push_byte(0x1c);
	push_byte(0x2);
	mul();
	push_byte(0x2);
	add();
	push_byte(0x28);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_base_offset(0x708);
	load(0x2);
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x700);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x584);
	load(0x2);
	push_word(0x598);
	load(0x2);
	ternary();
	push_base_offset(0x5ec);
	move_arg(0x2);
	push_string("ＭＳ ゴシック");
	push_offset(L03e7f);
	call();
	push_base_offset(0x5e0);
	move_arg(0x2);
	push_base_offset(0x5e4);
	move_arg(0x2);
	push_base_offset(0x5e8);
	move_arg(0x2);
	push_base_offset(0x6fc);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x6ec);
	push_string("No.%03d");
	cmd_6f();
	push_base_offset(0x70c);
	load(0x2);
	push_word(0x35a);
	push_word(0x330);
	sub();
	push_word(0x1ac);
	push_word(0x84);
	sub();
	push_base_offset(0x6ec);
	push_base_offset(0x5ec);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x5ec);
	load(0x2);
	push_base_offset(0x5e4);
	load(0x2);
	push_byte(0x14);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x64);
	push_byte(0x2);
	push_byte(0x0);
	push_byte(0xa);
	push_byte(0xa);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	push_base_offset(0x5dc);
	push_word(0x1800);
	push_word(0x105);
	add();
	push_word(0x80);
	add();
	push_base_offset(0x6fc);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x6f8);
	load(0x2);
	call();
	push_offset(L03047);
	jc(0x1);
	push_base_offset(0x5dc);
	push_byte(0x7);
	push_base_offset(0x6f8);
	load(0x2);
	call();
	push_offset(L03047);
	jc(0x1);
	push_word(0x1800);
	push_word(0x106);
	add();
	push_word(0x80);
	add();
	push_word(0x1b4);
	push_word(0x1c3);
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1800);
	push_word(0x106);
	add();
	push_word(0x80);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1800);
	push_word(0x106);
	add();
	push_word(0x80);
	add();
	push_word(0x331);
	push_word(0x330);
	sub();
	push_word(0x86);
	push_word(0x84);
	sub();
	push_word(0x1800);
	push_word(0x105);
	add();
	push_word(0x80);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x10);
	push_base_offset(0x5dc);
	push_byte(0x0);
	add();
	push_byte(0x10);
	memcpy();
	push_base_offset(0x10);
	push_byte(0xc);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0xa);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x8);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x6);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x2);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x0);
	add();
	load(0x1);
	push_base_offset(0x6ec);
	push_string("%04d/%02d/%02d %02d:%02d:%02d");
	cmd_6f();
	push_word(0x1800);
	push_word(0x106);
	add();
	push_word(0x80);
	add();
	push_word(0x410);
	push_word(0x330);
	sub();
	push_byte(0x6);
	sub();
	push_word(0x1ac);
	push_word(0x84);
	sub();
	push_base_offset(0x6ec);
	push_base_offset(0x5ec);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x5ec);
	load(0x2);
	push_base_offset(0x5e4);
	load(0x2);
	push_byte(0x14);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x64);
	push_byte(0x2);
	push_byte(0x0);
	push_byte(0xa);
	push_byte(0xa);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	push_string("ＭＳ ゴシック");
	push_offset(L03e7f);
	call();
	push_base_offset(0x5e0);
	move_arg(0x2);
	push_base_offset(0x5e4);
	move_arg(0x2);
	push_base_offset(0x5e8);
	move_arg(0x2);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_byte(0x1c);
	push_byte(0xe);
	mul();
	push_byte(0xa);
	add();
	push_byte(0x2);
	add();
	push_byte(0x1c);
	push_byte(0x2);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x5dc);
	push_byte(0x60);
	add();
	push_base_offset(0x5ec);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x5ec);
	load(0x2);
	push_base_offset(0x5e4);
	load(0x2);
	push_byte(0x1c);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x64);
	push_byte(0x2);
	push_byte(0x0);
	push_byte(0xa);
	push_byte(0xa);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	push_word(0x1800);
	push_word(0x106);
	add();
	push_word(0x80);
	add();
	push_word(0x344);
	push_word(0x330);
	sub();
	push_word(0x1d2);
	push_word(0x84);
	sub();
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x70c);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_word(0x1800);
	push_word(0x106);
	add();
	push_word(0x80);
	add();
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x5dc);
	push_byte(0x10);
	add();
	push_byte(0x4);
	push_base_offset(0x6ec);
	push_string("%c%s");
	cmd_6f();
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_byte(0x1c);
	push_byte(0xe);
	mul();
	push_byte(0xa);
	add();
	push_byte(0x2);
	add();
	push_byte(0x1c);
	push_byte(0x2);
	mul();
	push_byte(0x2);
	add();
	push_byte(0x2);
	grp1(0x11);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_byte(0x0);
	grp1(0x13);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x5dc);
	push_byte(0x10);
	add();
	push_base_offset(0x5ec);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x5ec);
	load(0x2);
	push_base_offset(0x5e4);
	load(0x2);
	push_byte(0x1c);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x5e0);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x2);
	push_byte(0x0);
	push_byte(0xa);
	push_byte(0xa);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	push_base_offset(0x708);
	load(0x2);
	push_byte(0x0);
	push_byte(0x28);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	push_word(0x80);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x704);
	load(0x2);
	push_base_offset(0x5dc);
	push_byte(0x10);
	add();
	cmd_6a();
	push_word(0x1800);
	push_word(0x105);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_word(0x1800);
	push_word(0x106);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_word(0x1800);
	push_word(0x107);
	add();
	push_word(0x80);
	add();
	grp1(0x12);
	push_base_offset(0x6f4);
	push_byte(0x1);
	move(0x2);

L03047:
	push_base_offset(0x6f4);
	load(0x2);
	load_base();
	push_word(0x70c);
	sub();
	store_base();
	ret();

L03053:
	load_base();
	push_word(0xe0);
	add();
	store_base();
	push_base_offset(0xdc);
	move_arg(0x2);
	push_base_offset(0xe0);
	move_arg(0x2);
	push_base_offset(0xd8);
	push_dword(0xa000);
	push_base_offset(0xdc);
	load(0x2);
	push_word(0x84);
	mul();
	add();
	push_word(0x84);
	sys1(0x83);
	push_base_offset(0xd8);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L030f3);
	jc(0x0);
	push_base_offset(0x50);
	push_byte(0x0);
	push_byte(0x2);
	shl();
	add();
	push_string("ページ１");
	push_string("ページ２");
	push_string("ページ３");
	push_string("ページ４");
	push_string("ページ５");
	push_string("ページ６");
	push_string("ページ７");
	push_string("ページ８");
	push_string("ページ９");
	push_string("ページ１０");
	cmd_0c(0x2, 0xa);
	push_base_offset(0x50);
	push_byte(0xa);
	push_byte(0x2);
	shl();
	add();
	push_string("ページ１１");
	push_string("ページ１２");
	push_string("ページ１３");
	push_string("ページ１４");
	push_string("ページ１５");
	push_string("ページ１６");
	push_string("ページ１７");
	push_string("ページ１８");
	push_string("ページ１９");
	push_string("AutoSave");
	cmd_0c(0x2, 0xa);
	push_base_offset(0xe0);
	load(0x2);
	push_base_offset(0x50);
	push_base_offset(0xdc);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	cmd_6a();
	push_offset(L030ff);
	jmp();

L030f3:
	push_base_offset(0xe0);
	load(0x2);
	push_base_offset(0xd8);
	push_byte(0x4);
	add();
	cmd_6a();

L030ff:
	load_base();
	push_word(0xe0);
	sub();
	store_base();
	ret();

L03106:
	load_base();
	push_byte(0x1c);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x588);
	load(0x2);
	push_word(0x59c);
	load(0x2);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_string("ＭＳ ゴシック");
	push_offset(L03e7f);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_word(0xa8);
	push_word(0xa2);
	sub();
	push_byte(0x5a);
	push_byte(0x56);
	sub();
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x64);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0xa);
	push_byte(0xa);
	push_word(0xc0);
	push_byte(0x0);
	grp3(0x9c);
	load_base();
	push_byte(0x1c);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x1a0);
	add();
	store_base();
	push_base_offset(0x150);
	move_arg(0x2);
	push_base_offset(0x154);
	move_arg(0x2);
	push_base_offset(0x158);
	move_arg(0x2);
	push_base_offset(0x15c);
	move_arg(0x2);
	push_base_offset(0x160);
	move_arg(0x2);
	push_base_offset(0x164);
	move_arg(0x2);
	push_base_offset(0x168);
	move_arg(0x2);
	push_base_offset(0x16c);
	move_arg(0x2);
	push_base_offset(0x170);
	move_arg(0x2);
	push_base_offset(0x174);
	move_arg(0x2);
	push_base_offset(0x178);
	move_arg(0x2);
	push_base_offset(0x17c);
	move_arg(0x2);
	push_base_offset(0x180);
	move_arg(0x2);
	push_base_offset(0x184);
	move_arg(0x2);
	push_base_offset(0x188);
	move_arg(0x2);
	push_base_offset(0x18c);
	move_arg(0x2);
	push_base_offset(0x190);
	move_arg(0x2);
	push_base_offset(0x194);
	move_arg(0x2);
	push_base_offset(0x198);
	move_arg(0x2);
	push_base_offset(0x19c);
	move_arg(0x2);
	push_base_offset(0x1a0);
	move_arg(0x2);
	push_base_offset(0x14c);
	push_word(0x100);
	memclr();
	push_byte(0x4);
	push_word(0x100);
	mul();
	sys1(0x20);
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x38);
	push_base_offset(0x1a0);
	load(0x2);
	grp1(0x16);
	push_base_offset(0x40);
	push_base_offset(0x38);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x2);
	mul();
	push_base_offset(0x17c);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x3c);
	push_base_offset(0x38);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x17c);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x14c);
	push_base_offset(0x194);
	load(0x2);
	grp2(0x9f);
	push_base_offset(0x1c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);

L0327a:
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14c);
	push_base_offset(0x1c);
	load(0x2);
	add();
	load(0x0);
	push_byte(0x0);
	eq();
	push_offset(L033b9);
	jc(0x0);
	push_base_offset(0x14c);
	push_base_offset(0x1c);
	load(0x2);
	add();
	load(0x0);
	push_byte(0xd);
	eq();
	push_base_offset(0x14c);
	push_base_offset(0x1c);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	load(0x0);
	push_byte(0xa);
	eq();
	bool_and();
	push_offset(L032d8);
	jc(0x1);
	push_base_offset(0x18);
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L03373);
	jmp();

L032d8:
	push_base_offset(0x14c);
	push_base_offset(0x1c);
	load(0x2);
	add();
	load(0x0);
	push_byte(0xa);
	eq();
	push_offset(L0330a);
	jc(0x1);
	push_base_offset(0x18);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L03373);
	jmp();

L0330a:
	push_base_offset(0x14c);
	push_base_offset(0x1c);
	load(0x2);
	add();
	cmd_6c();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	add();
	push_base_offset(0x40);
	load(0x2);
	leq();
	push_offset(L0335c);
	jc(0x1);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	add();
	move(0x2);
	push_offset(L03373);
	jmp();

L0335c:
	push_base_offset(0x14);
	push_base_offset(0x18);
	load(0x2);
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L03373:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	lt();
	push_offset(L033b9);
	jc(0x1);
	push_base_offset(0x1c);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1c);
	load(0x2);
	move(0x2);
	push_base_offset(0x44);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L0327a);
	jmp();

L033b9:
	push_base_offset(0x44);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L034dc);
	jc(0x1);
	push_base_offset(0x14c);
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_byte(0x0);
	move(0x0);
	push_base_offset(0x1a0);
	load(0x2);
	push_base_offset(0x19c);
	load(0x2);
	push_base_offset(0x198);
	load(0x2);
	push_base_offset(0x14c);
	push_base_offset(0x190);
	load(0x2);
	push_base_offset(0x18c);
	load(0x2);
	push_base_offset(0x188);
	load(0x2);
	push_base_offset(0x184);
	load(0x2);
	push_base_offset(0x180);
	load(0x2);
	push_base_offset(0x17c);
	load(0x2);
	push_base_offset(0x178);
	load(0x2);
	push_base_offset(0x174);
	load(0x2);
	push_base_offset(0x170);
	load(0x2);
	push_base_offset(0x16c);
	load(0x2);
	push_base_offset(0x168);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x160);
	load(0x2);
	push_base_offset(0x15c);
	load(0x2);
	push_base_offset(0x158);
	load(0x2);
	push_base_offset(0x154);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	grp3(0x9c);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	leq();
	push_offset(L033b9);
	jc(0x1);
	push_base_offset(0x1a0);
	load(0x2);
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x1a0);
	load(0x2);
	push_base_offset(0x19c);
	load(0x2);
	push_base_offset(0x198);
	load(0x2);
	push_base_offset(0x14c);
	push_base_offset(0x190);
	load(0x2);
	push_base_offset(0x18c);
	load(0x2);
	push_base_offset(0x188);
	load(0x2);
	push_base_offset(0x184);
	load(0x2);
	push_base_offset(0x180);
	load(0x2);
	push_base_offset(0x17c);
	load(0x2);
	push_base_offset(0x178);
	load(0x2);
	push_base_offset(0x174);
	load(0x2);
	push_base_offset(0x170);
	load(0x2);
	push_base_offset(0x16c);
	load(0x2);
	push_base_offset(0x168);
	load(0x2);
	push_base_offset(0x164);
	load(0x2);
	push_base_offset(0x160);
	load(0x2);
	push_base_offset(0x15c);
	load(0x2);
	push_base_offset(0x158);
	load(0x2);
	push_base_offset(0x154);
	load(0x2);
	push_base_offset(0x150);
	load(0x2);
	grp3(0x9c);
	push_offset(L034e5);
	jmp();

L034dc:
	push_base_offset(0x1a0);
	load(0x2);
	push_byte(0x0);
	grp1(0x13);

L034e5:
	push_base_offset(0x48);
	load(0x2);
	sys1(0x21);
	load_base();
	push_word(0x1a0);
	sub();
	store_base();
	ret();

L034f3:
	load_base();
	push_byte(0x50);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x3c);
	move_arg(0x2);
	push_base_offset(0x40);
	move_arg(0x2);
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x50);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0355e:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03597);
	jc(0x0);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	sub();
	load(0x2);
	eq();
	push_offset(L03612);
	jc(0x0);

L03597:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	grp1(0x13);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x40);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x3c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x34);
	load(0x2);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	grp3(0x9c);

L03612:
	push_base_offset(0x50);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	push_byte(0x0);
	grp1(0x18);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x4c);
	load(0x2);
	lt();
	push_offset(L0355e);
	jc(0x0);
	load_base();
	push_byte(0x50);
	sub();
	store_base();
	ret();

L03655:
	load_base();
	push_word(0x9f0);
	add();
	store_base();
	push_base_offset(0x9e4);
	move_arg(0x2);
	push_base_offset(0x9e8);
	move_arg(0x2);
	push_base_offset(0x9ec);
	move_arg(0x2);
	push_base_offset(0x9f0);
	move_arg(0x2);
	push_base_offset(0x9bc);
	push_word(0x80);
	memclr();
	push_base_offset(0x9cc);
	push_base_offset(0x9bc);
	sys2(0xc);
	push_base_offset(0x93c);
	push_base_offset(0x9cc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x6);
	geq();
	push_base_offset(0x9cc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x2);
	geq();
	bool_and();
	push_base_offset(0x9cc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x7);
	geq();
	bool_or();
	move(0x2);
	push_base_offset(0x9e8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x584);
	load(0x2);
	push_word(0x598);
	load(0x2);
	ternary();
	push_base_offset(0x938);
	move_arg(0x2);
	push_base_offset(0x938);
	load(0x2);
	push_dword(0xffffff);
	eq();
	push_byte(0x0);
	push_base_offset(0x938);
	load(0x2);
	ternary();
	push_base_offset(0x938);
	move_arg(0x2);
	push_base_offset(0x934);
	push_base_offset(0x9ec);
	load(0x2);
	cmd_6a();
	push_base_offset(0x93c);
	load(0x2);
	push_word(0x344);
	push_byte(0x7);
	sub();
	push_word(0x344);
	ternary();
	push_base_offset(0x9d8);
	move_arg(0x2);
	push_byte(0x2);
	push_byte(0x2);
	neq();
	push_byte(0x0);
	push_byte(0x1);
	ternary();
	push_base_offset(0x9d4);
	move_arg(0x2);
	push_byte(0x2);
	push_byte(0x2);
	neq();
	push_byte(0x0);
	push_byte(0x2);
	ternary();
	push_base_offset(0x9d0);
	move_arg(0x2);
	push_base_offset(0x934);
	push_base_offset(0x9d8);
	load(0x2);
	push_base_offset(0x9d4);
	load(0x2);
	add();
	push_word(0x1ce);
	push_byte(0x28);
	add();
	push_base_offset(0x9d0);
	load(0x2);
	add();
	push_byte(0x1c);
	push_byte(0xe);
	mul();
	push_byte(0xa);
	add();
	push_byte(0x2);
	add();
	push_byte(0x1c);
	push_byte(0x2);
	mul();
	push_byte(0x2);
	add();
	push_byte(0xe);
	push_byte(0x2);
	mul();
	push_byte(0x2);
	mul();
	push_string("ＭＳ ゴシック");
	push_base_offset(0x938);
	load(0x2);
	push_byte(0x1c);
	push_byte(0x64);
	push_offset(L038f3);
	call();
	push_base_offset(0x9e0);
	move_arg(0x2);
	push_base_offset(0x9dc);
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x1);
	and();
	move(0x2);
	push_base_offset(0x934);
	push_base_offset(0x9ec);
	load(0x2);
	cmd_69();
	push_offset(L03823);
	jc(0x0);
	push_base_offset(0x8e4);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_base_offset(0x9f0);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x9e4);
	load(0x2);
	call();
	push_offset(L03823);
	jc(0x1);
	push_base_offset(0x8e4);
	push_byte(0x7);
	push_base_offset(0x9e4);
	load(0x2);
	call();
	push_offset(L03823);
	jc(0x1);
	push_base_offset(0x318);
	push_base_offset(0x9f0);
	load(0x2);
	push_byte(0x6);
	push_base_offset(0x9e4);
	load(0x2);
	call();
	push_byte(0x0);
	push_base_offset(0x318);
	sys2(0x35);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	sys1(0x20);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x318);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	sys2(0x30);
	push_base_offset(0x9e0);
	move_arg(0x2);
	push_base_offset(0x9e0);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0381c);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x934);
	cmd_6a();
	push_base_offset(0x318);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	sys1(0x32);

L0381c:
	push_base_offset(0x8);
	load(0x2);
	sys1(0x21);

L03823:
	push_base_offset(0x9dc);
	load(0x2);
	load_base();
	push_word(0x9f0);
	sub();
	store_base();
	ret();

L0382f:
	load_base();
	push_word(0x11c);
	add();
	store_base();
	push_base_offset(0x114);
	move_arg(0x2);
	push_base_offset(0x118);
	move_arg(0x2);
	push_base_offset(0x11c);
	move_arg(0x2);
	push_base_offset(0x114);
	load(0x2);
	push_byte(0x0);
	eq();
	push_word(0x588);
	load(0x2);
	push_word(0x59c);
	load(0x2);
	ternary();
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x104);
	push_base_offset(0x118);
	load(0x2);
	cmd_6a();
	push_base_offset(0x104);
	push_word(0xa8);
	push_byte(0x5a);
	push_byte(0x10);
	push_byte(0x1f);
	mul();
	push_byte(0x2);
	add();
	push_byte(0x10);
	push_byte(0x1f);
	push_byte(0x2);
	mul();
	push_string("ＭＳ ゴシック");
	push_base_offset(0x108);
	load(0x2);
	push_byte(0x10);
	push_byte(0x64);
	push_offset(L038f3);
	call();
	push_base_offset(0x110);
	move_arg(0x2);
	push_base_offset(0x10c);
	push_base_offset(0x110);
	load(0x2);
	push_byte(0x1);
	and();
	move(0x2);
	push_base_offset(0x104);
	push_base_offset(0x118);
	load(0x2);
	cmd_69();
	push_offset(L038e7);
	jc(0x0);
	push_base_offset(0x84);
	push_word(0x84);
	memclr();
	push_base_offset(0x84);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x84);
	push_byte(0x4);
	add();
	push_base_offset(0x104);
	cmd_6a();
	push_dword(0xa000);
	push_base_offset(0x11c);
	load(0x2);
	push_word(0x84);
	mul();
	add();
	push_base_offset(0x84);
	push_word(0x84);
	sys1(0x82);
	push_base_offset(0x118);
	load(0x2);
	push_base_offset(0x104);
	cmd_6a();

L038e7:
	push_base_offset(0x10c);
	load(0x2);
	load_base();
	push_word(0x11c);
	sub();
	store_base();
	ret();

L038f3:
	load_base();
	push_word(0x140);
	add();
	store_base();
	push_base_offset(0x11c);
	move_arg(0x2);
	push_base_offset(0x120);
	move_arg(0x2);
	push_base_offset(0x124);
	move_arg(0x2);
	push_base_offset(0x128);
	move_arg(0x2);
	push_base_offset(0x12c);
	move_arg(0x2);
	push_base_offset(0x130);
	move_arg(0x2);
	push_base_offset(0x134);
	move_arg(0x2);
	push_base_offset(0x138);
	move_arg(0x2);
	push_base_offset(0x13c);
	move_arg(0x2);
	push_base_offset(0x140);
	move_arg(0x2);
	push_word(0x890);
	sys1(0x18);
	push_base_offset(0x128);
	load(0x2);
	push_offset(L03e7f);
	call();
	push_base_offset(0x10c);
	move_arg(0x2);
	push_base_offset(0x110);
	move_arg(0x2);
	push_base_offset(0x114);
	move_arg(0x2);
	push_base_offset(0x11c);
	load(0x2);
	usr1(0x22);
	push_base_offset(0x124);
	load(0x2);
	usr1(0x25);
	push_base_offset(0x140);
	load(0x2);
	usr1(0x26);
	push_byte(0x1);
	usr1(0x28);
	push_byte(0x0);
	usr1(0x29);
	push_base_offset(0x13c);
	load(0x2);
	push_base_offset(0x138);
	load(0x2);
	push_base_offset(0x134);
	load(0x2);
	push_byte(0x1);
	add();
	push_base_offset(0x130);
	load(0x2);
	push_base_offset(0x110);
	load(0x2);
	push_base_offset(0x120);
	load(0x2);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x1);
	usr1(0x20);

L0398f:
	sys1(0x5f);
	push_base_offset(0x108);
	push_byte(0x0);
	move(0x2);
	usr1(0x23);
	push_offset(L039b6);
	jc(0x1);
	push_word(0x890);
	sys1(0x1a);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x108);
	load(0x2);
	push_byte(0x1);
	and();
	push_offset(L0398f);
	jc(0x1);

L039b6:
	push_byte(0x9);
	sys1(0x11);
	push_offset(L039cf);
	jc(0x1);
	push_base_offset(0x108);
	push_base_offset(0x108);
	load(0x2);
	push_dword(0x40000000);
	or();
	move(0x2);

L039cf:
	push_base_offset(0x100);
	usr1(0x27);
	push_base_offset(0x104);
	move_arg(0x2);
	usr1(0x21);
	push_base_offset(0x104);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L039fa);
	jc(0x1);
	push_base_offset(0x100);
	cmd_68();
	push_offset(L039fa);
	jc(0x1);
	push_base_offset(0x140);
	load(0x2);
	push_base_offset(0x100);
	cmd_6a();

L039fa:
	push_word(0x890);
	sys1(0x19);
	push_base_offset(0x108);
	load(0x2);
	load_base();
	push_word(0x140);
	sub();
	store_base();
	ret();

L03a0b:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L03a2f);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_offset(L03a4b);
	jmp();

L03a2f:
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L03a4b);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);

L03a4b:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L03a5b:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	sys1(0x4);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1f4);
	add();
	move(0x2);

L03a75:
	sys1(0x4);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	geq();
	push_offset(L03a9c);
	jc(0x0);
	push_word(0x450);
	load(0x2);
	push_offset(L03a9c);
	jc(0x0);
	sys1(0x5f);
	push_offset(L03a75);
	jmp();

L03a9c:
	sys1(0x5f);
	push_word(0x450);
	load(0x2);
	push_offset(L03a9c);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L03aae:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x7);
	add();
	eq();
	push_offset(L03e04);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x6);
	add();
	eq();
	push_offset(L03e04);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x16);
	add();
	eq();
	push_offset(L03e04);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L03e04);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x8);
	add();
	eq();
	push_offset(L03c5d);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	add();
	eq();
	push_offset(L03bd0);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x3);
	add();
	eq();
	push_offset(L03c2e);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xc);
	add();
	eq();
	push_offset(L03bff);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0xf);
	add();
	eq();
	push_offset(L03c8c);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x12);
	add();
	eq();
	push_offset(L03cbb);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x17);
	add();
	eq();
	push_offset(L03cea);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1b);
	add();
	eq();
	push_offset(L03d19);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x1e);
	add();
	eq();
	push_offset(L03d48);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x21);
	add();
	eq();
	push_offset(L03d77);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x24);
	add();
	eq();
	push_offset(L03da6);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_byte(0x27);
	add();
	eq();
	push_offset(L03dd5);
	jc(0x0);
	push_offset(L03e74);
	jmp();
	push_offset(L03e04);
	jmp();

L03bd0:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x51c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x51c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x51c);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03bff:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	load(0x2);
	add();
	move(0x2);
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x520);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x520);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03c2e:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x524);
	load(0x2);
	add();
	move(0x2);
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x524);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x524);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03c5d:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x528);
	load(0x2);
	add();
	move(0x2);
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x528);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x528);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03c8c:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x52c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x52c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x52c);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03cbb:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x530);
	load(0x2);
	add();
	move(0x2);
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x530);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x530);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03cea:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x534);
	load(0x2);
	add();
	move(0x2);
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x534);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x534);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03d19:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x538);
	load(0x2);
	add();
	move(0x2);
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x538);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x538);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03d48:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x53c);
	load(0x2);
	add();
	move(0x2);
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x53c);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x53c);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03d77:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x540);
	load(0x2);
	add();
	move(0x2);
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x540);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x540);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03da6:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x544);
	load(0x2);
	add();
	move(0x2);
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x3);
	lt();
	push_word(0x544);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x544);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03dd5:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x548);
	load(0x2);
	add();
	move(0x2);
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x4);
	lt();
	push_word(0x548);
	load(0x2);
	push_byte(0x1);
	add();
	push_byte(0x0);
	ternary();
	push_word(0x548);
	move_arg(0x2);
	push_offset(L03e04);
	jmp();

L03e04:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L03e3f);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	geq();
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_offset(L03e3f);
	jc(0x1);
	push_word(0x49c);
	load(0x2);
	push_byte(0x32);
	snd1(0x26);

L03e3f:
	push_base_offset(0x8);
	load(0x2);
	push_word(0x80);
	push_byte(0x40);
	snd1(0x24);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	geq();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x32);
	push_byte(0xc);
	add();
	lt();
	bool_and();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x49c);
	load(0x2);
	ternary();
	push_word(0x49c);
	move_arg(0x2);

L03e74:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L03e7f:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03e90:
	push_base_offset(0x4);
	load(0x2);
	push_word(0x910);
	load(0x2);
	lt();
	push_offset(L03f0b);
	jc(0x1);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x14);
	load(0x2);
	cmd_69();
	push_offset(L03efa);
	jc(0x1);
	push_base_offset(0x10);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	push_word(0x90c);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x24);
	add();
	load(0x2);
	move(0x2);
	push_offset(L03f24);
	jmp();

L03efa:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L03e90);
	jmp();

L03f0b:
	push_base_offset(0x10);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L03f24:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L03f39:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03f66);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	grp1(0x51);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4c);
	memclr();

L03f66:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L03f6c:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L03f39);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x14);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	grp1(0x50);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp1(0x38);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04055);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x33);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x4);
	load(0x2);
	move(0x2);

L04055:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04094);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x36);

L04094:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L040c9);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp1(0x34);

L040c9:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L040fe);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	grp2(0x31);

L040fe:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L04104:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04372);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L0450f);
	call();
	push_offset(L042ee);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04270);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04270);
	jc(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L041f1);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	div();
	move(0x2);
	push_offset(L0423f);
	jmp();

L041f1:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L0423f);
	jc(0x1);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	sub();
	push_base_offset(0x14);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	div();
	move(0x2);

L0423f:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	grp1(0x57);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	grp1(0x38);
	push_byte(0x0);
	grp1(0x0);
	push_offset(L042ee);
	jmp();

L04270:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x20);
	add();
	move_arg(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1);
	push_word(0x100);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	grp1(0x56);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(0x7fffffff);
	push_byte(0x0);
	push_base_offset(0x18);
	load(0x2);
	grp1(0x38);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x1);
	grp1(0x54);

L042ee:
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x18);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x10);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);

L04372:
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L04378:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04509);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L04509);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0450f);
	call();
	push_offset(L043ea);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x14);
	memclr();
	push_offset(L04509);
	jmp();

L043ea:
	push_base_offset(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L044b2);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L04461);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	sub();
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	div();
	move(0x2);
	push_offset(L044ae);
	jmp();

L04461:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L04477);
	jc(0x1);
	push_offset(L044b2);
	jmp();

L04477:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L044ae);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	add();
	load(0x2);
	div();
	move(0x2);

L044ae:
	push_offset(L044d6);
	jmp();

L044b2:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1c);
	add();
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x20);
	add();
	move_arg(0x2);

L044d6:
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x10);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L04509:
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L0450f:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04585);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L0453e:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	leq();
	push_offset(L04585);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04574);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_offset(L04585);
	jmp();

L04574:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);
	push_offset(L0453e);
	jmp();

L04585:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04604);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L04604);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L045f0);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x24);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_offset(L04604);
	jmp();

L045f0:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L0450f);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L04604:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
