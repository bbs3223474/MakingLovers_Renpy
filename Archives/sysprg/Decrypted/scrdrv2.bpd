	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x43ef8);
	push_offset(L000dd);
	move(0x2);
	push_dword(0x43efc);
	push_offset(L00102);
	move(0x2);
	push_dword(0x43f00);
	push_offset(L00340);
	move(0x2);
	push_dword(0x43f04);
	push_offset(L003d1);
	move(0x2);
	push_dword(0x43f08);
	push_offset(L0041e);
	move(0x2);
	push_dword(0x43f0c);
	push_offset(L0047e);
	move(0x2);
	push_dword(0x43f10);
	push_offset(L004e4);
	move(0x2);
	push_dword(0x43f14);
	push_offset(L0050c);
	move(0x2);
	push_dword(0x43f18);
	push_offset(L00563);
	move(0x2);
	push_dword(0x43f1c);
	push_offset(L0059f);
	move(0x2);
	push_dword(0x43f20);
	push_offset(L00635);
	move(0x2);
	push_dword(0x43f24);
	push_offset(L00667);
	move(0x2);
	push_dword(0x43f28);
	push_offset(L00687);
	move(0x2);
	push_dword(0x43f2c);
	push_offset(L0072b);
	move(0x2);
	push_dword(0x43f30);
	push_offset(L00764);
	move(0x2);
	push_dword(0x43f34);
	push_offset(L008b6);
	move(0x2);
	push_dword(0x43f38);
	push_offset(L0095d);
	move(0x2);
	push_dword(0x43f3c);
	push_offset(L00a09);
	move(0x2);
	push_dword(0x43f40);
	push_offset(L00a76);
	move(0x2);
	push_dword(0x43f44);
	push_offset(L00b85);
	move(0x2);
	push_dword(0x43f48);
	push_offset(L01231);
	move(0x2);
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L000dd:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	push_offset(L00102);
	call();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L00102:
	load_base();
	push_word(0x324);
	add();
	store_base();
	push_base_offset(0x31c);
	move_arg(0x2);
	push_base_offset(0x320);
	move_arg(0x2);
	push_base_offset(0x324);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x31c);
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x31c);
	move_arg(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x31c);
	load(0x2);
	ternary();
	push_base_offset(0x31c);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x320);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00334);
	jc(0x1);
	push_base_offset(0xc);
	push_byte(0x0);
	push_base_offset(0x324);
	load(0x2);
	push_base_offset(0x320);
	load(0x2);
	push_dword(0x43f58);
	load(0x2);
	call();
	push_offset(L00334);
	jc(0x0);
	push_base_offset(0x324);
	load(0x2);
	push_base_offset(0x320);
	load(0x2);
	sys1(0x34);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L00334);
	jc(0x0);
	push_byte(0x0);
	push_offset(L002e9);
	jc(0x1);
	push_byte(0x0);
	push_offset(L002e9);
	jc(0x0);
	push_base_offset(0x324);
	load(0x2);
	push_string("data01xxx.arc");
	cmd_69();
	push_offset(L001ce);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("builddata._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x318);
	push_base_offset(0x320);
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	sys1(0x41);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L00334);
	jc(0x0);
	push_offset(L002e9);
	jmp();

L001ce:
	push_base_offset(0x324);
	load(0x2);
	push_string("data02xxx.arc");
	cmd_69();
	push_offset(L0020e);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("builddata._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x318);
	push_base_offset(0x320);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	sys1(0x41);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L00334);
	jc(0x0);
	push_offset(L002e9);
	jmp();

L0020e:
	push_base_offset(0x324);
	load(0x2);
	push_string("data03xxx.arc");
	cmd_69();
	push_offset(L0024e);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("builddata._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x318);
	push_base_offset(0x320);
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	sys1(0x41);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L00334);
	jc(0x0);
	push_offset(L002e9);
	jmp();

L0024e:
	push_base_offset(0x324);
	load(0x2);
	push_string("data04xxx.arc");
	cmd_69();
	push_offset(L0028e);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("builddata._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x318);
	push_base_offset(0x320);
	load(0x2);
	push_byte(0x5);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	sys1(0x41);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L00334);
	jc(0x0);
	push_offset(L002e9);
	jmp();

L0028e:
	push_base_offset(0x324);
	load(0x2);
	push_string("data05xxx.arc");
	cmd_69();
	push_offset(L002e9);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("builddata._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x318);
	push_base_offset(0x320);
	load(0x2);
	push_byte(0x6);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L002dd);
	jc(0x0);
	push_base_offset(0x318);
	push_base_offset(0x320);
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0xc);
	move_arg(0x2);

L002dd:
	sys1(0x41);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L00334);
	jc(0x0);

L002e9:
	push_base_offset(0x31c);
	load(0x2);
	push_offset(L00326);
	jc(0x1);
	push_base_offset(0x320);
	load(0x2);
	push_base_offset(0x318);
	push_string("指定されたファイル [ %s ] は存在しません\n\n処理を強行する場合は「はい」、中止する場合は「いいえ」を選択してください");
	cmd_6f();
	push_base_offset(0x318);
	push_byte(0x1);
	cmd_78();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0031b);
	jc(0x0);
	push_word(0x7fff);
	push_byte(0x0);
	sys1(0xa1);

L0031b:
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_offset(L00334);
	jmp();

L00326:
	push_base_offset(0x324);
	load(0x2);
	push_base_offset(0x320);
	load(0x2);
	push_offset(L052a9);
	call();

L00334:
	push_base_offset(0xc);
	load(0x2);
	load_base();
	push_word(0x324);
	sub();
	store_base();
	ret();

L00340:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	push_offset(L003c1);
	jc(0x1);
	push_dword(0x9fab8);
	push_word(0xe4);
	add();
	load(0x2);
	push_offset(L00379);
	jc(0x0);
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L003ba);
	jc(0x0);

L00379:
	push_word(0xbbc);
	load(0x2);
	push_offset(L003ba);
	jc(0x0);
	sys1(0x17);
	push_offset(L003ba);
	jc(0x0);
	push_dword(0x9fab8);
	push_word(0xe4);
	add();
	load(0x2);
	push_offset(L003c1);
	jc(0x0);
	push_byte(0x20);
	push_byte(0x18);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_offset(L003c1);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	sar();
	move(0x2);
	push_offset(L003c1);
	jmp();

L003ba:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L003c1:
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	ternary();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L003d1:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00413);
	jc(0x1);

L003f2:
	push_word(0x4ec);
	load(0x2);
	push_offset(L0040c);
	jc(0x0);
	push_word(0x504);
	load(0x2);
	push_offset(L00413);
	jc(0x0);
	sys1(0x5f);
	push_offset(L003f2);
	jmp();

L0040c:
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);

L00413:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L0041e:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00472);
	jc(0x1);
	push_word(0xbbc);
	load(0x2);
	push_offset(L00472);
	jc(0x0);
	push_word(0xbac);
	load(0x2);
	push_offset(L00472);
	jc(0x0);
	push_offset(L003d1);
	call();
	push_offset(L00472);
	jc(0x1);
	push_word(0x7dc);
	push_byte(0x1);
	move(0x2);

L0045c:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L00472);
	jc(0x0);
	push_word(0x7dc);
	load(0x2);
	push_offset(L0045c);
	jc(0x0);

L00472:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L0047e:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_dword(0x42768);
	push_byte(0x1);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L004d8);
	jc(0x1);
	push_word(0x4ec);
	load(0x2);
	push_offset(L004d8);
	jc(0x1);
	push_offset(L003d1);
	call();
	push_offset(L004d8);
	jc(0x1);
	push_base_offset(0x4);
	push_word(0x4f0);
	load(0x2);
	move(0x2);
	push_word(0xb98);
	push_byte(0x1);
	move(0x2);

L004bc:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L004d8);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x4f0);
	load(0x2);
	eq();
	push_offset(L004bc);
	jc(0x0);

L004d8:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L004e4:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L00501);
	jc(0x1);
	push_word(0x7f0);
	sys1(0x19);
	push_offset(L00506);
	jmp();

L00501:
	push_word(0x7f0);
	sys1(0x18);

L00506:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L0050c:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_byte(0x20);
	push_word(0x84);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L00536);
	jc(0x1);
	push_byte(0x20);
	push_byte(0xa);
	add();
	push_byte(0x0);
	move(0x1);
	push_dword(0x43f30);
	load(0x2);
	call();
	push_offset(L0055d);
	jmp();

L00536:
	push_word(0xbac);
	load(0x2);
	push_offset(L0055d);
	jc(0x1);
	push_word(0xbb0);
	push_byte(0x1);
	move(0x2);

L00547:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L0055d);
	jc(0x0);
	push_word(0xbac);
	load(0x2);
	push_offset(L00547);
	jc(0x0);

L0055d:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L00563:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_byte(0x20);
	push_word(0x84);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L00584);
	jc(0x1);
	push_dword(0x43f30);
	load(0x2);
	call();
	push_offset(L00599);
	jmp();

L00584:
	push_word(0xbac);
	load(0x2);
	push_offset(L00599);
	jc(0x1);
	push_word(0xbb4);
	push_byte(0x1);
	move(0x2);
	push_offset(L0050c);
	call();

L00599:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L0059f:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_byte(0x20);
	push_word(0x84);
	add();
	load(0x1);
	push_byte(0x0);
	eq();
	push_offset(L005c0);
	jc(0x1);
	push_dword(0x43f30);
	load(0x2);
	call();
	push_offset(L0062f);
	jmp();

L005c0:
	push_word(0xbb4);
	load(0x2);
	push_offset(L0062f);
	jc(0x1);
	push_byte(0x20);
	push_byte(0x1a);
	add();
	load(0x1);
	push_word(0xb60);
	load(0x2);
	bool_and();
	bool_zero();
	push_offset(L05049);
	call();
	push_byte(0x20);
	push_byte(0x1a);
	add();
	load(0x1);
	push_word(0xb60);
	load(0x2);
	bool_and();
	push_offset(L00612);
	jc(0x0);
	push_word(0xbb8);
	push_byte(0x1);
	move(0x2);

L005f5:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L0062f);
	jc(0x0);
	push_word(0xbac);
	load(0x2);
	push_offset(L005f5);
	jc(0x1);
	push_word(0xbb8);
	push_byte(0x0);
	move(0x2);

L00612:
	push_word(0xbb4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x1a);
	add();
	load(0x1);
	push_word(0xb60);
	load(0x2);
	bool_and();
	push_offset(L0062f);
	jc(0x1);
	push_offset(L0047e);
	call();

L0062f:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L00635:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0xbbc);
	load(0x2);
	push_offset(L00661);
	jc(0x1);
	push_word(0xbc0);
	push_byte(0x1);
	move(0x2);

L0064b:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L00661);
	jc(0x0);
	push_word(0xbbc);
	load(0x2);
	push_offset(L0064b);
	jc(0x0);

L00661:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L00667:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0xbbc);
	load(0x2);
	push_offset(L00681);
	jc(0x1);
	push_word(0xbc4);
	push_byte(0x1);
	move(0x2);
	push_offset(L00635);
	call();

L00681:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L00687:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0xbc4);
	load(0x2);
	push_offset(L00725);
	jc(0x1);
	push_byte(0x20);
	push_byte(0x1c);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_word(0xb60);
	load(0x2);
	bool_and();
	push_byte(0x20);
	push_byte(0xc);
	add();
	load(0x1);
	push_word(0xba8);
	load(0x2);
	bool_or();
	bool_zero();
	bool_or();
	bool_zero();
	push_offset(L0506f);
	call();
	push_byte(0x20);
	push_byte(0x1c);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_word(0xb60);
	load(0x2);
	bool_and();
	push_offset(L00705);
	jc(0x0);
	push_byte(0x20);
	push_byte(0xc);
	add();
	load(0x1);
	push_word(0xba8);
	load(0x2);
	bool_or();
	push_offset(L00705);
	jc(0x1);
	push_word(0xbc8);
	push_byte(0x1);
	move(0x2);

L006e8:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L00725);
	jc(0x0);
	push_word(0xbbc);
	load(0x2);
	push_offset(L006e8);
	jc(0x1);
	push_word(0xbc8);
	push_byte(0x0);
	move(0x2);

L00705:
	push_word(0xbc4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_byte(0x1c);
	add();
	load(0x1);
	push_byte(0x1);
	eq();
	push_word(0xb60);
	load(0x2);
	bool_and();
	push_offset(L00725);
	jc(0x1);
	push_offset(L0047e);
	call();

L00725:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L0072b:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0xbcc);
	load(0x2);
	push_offset(L0075e);
	jc(0x1);
	push_word(0xbd0);
	push_byte(0x1);
	move(0x2);

L00741:
	sys1(0x5f);
	push_word(0x504);
	load(0x2);
	push_offset(L0075e);
	jc(0x0);
	push_word(0xbcc);
	load(0x2);
	push_offset(L00741);
	jc(0x0);
	push_word(0xbd0);
	push_byte(0x0);
	move(0x2);

L0075e:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L00764:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L008b0);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("environ._bp");
	sys1(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_byte(0x20);
	push_byte(0x72);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_byte(0x20);
	push_byte(0x10);
	add();
	load(0x1);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0xf8);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xf8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	ternary();
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_byte(0x20);
	push_byte(0x74);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_byte(0x20);
	push_byte(0x12);
	add();
	load(0x1);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0xb48);
	load(0x2);
	push_byte(0xa);
	push_byte(0x1);
	sub();
	push_base_offset(0x8);
	load(0x2);
	ternary();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x20);
	push_byte(0xa);
	add();
	load(0x1);
	push_word(0xbac);
	load(0x2);
	bool_or();
	push_dword(0x9fab8);
	push_word(0xf4);
	add();
	load(0x2);
	bool_zero();
	bool_and();
	bool_or();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x4);
	load(0x2);
	call();
	push_dword(0x9fab8);
	push_word(0x100);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	bool_zero();
	push_byte(0x20);
	push_byte(0xa);
	add();
	load(0x1);
	push_word(0xbb4);
	load(0x2);
	bool_or();
	push_word(0xbac);
	load(0x2);
	bool_or();
	bool_and();
	push_offset(L05049);
	call();
	sys1(0x41);

L008b0:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L008b6:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00952);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	load(0x0);
	push_byte(0x2e);
	eq();
	push_offset(L00952);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L008fc:
	push_base_offset(0x4);
	load(0x2);
	load(0x0);
	push_byte(0x30);
	geq();
	push_base_offset(0x4);
	load(0x2);
	load(0x0);
	push_byte(0x39);
	leq();
	bool_and();
	push_offset(L0093f);
	jc(0x1);
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x4);
	load(0x2);
	load(0x0);
	push_byte(0x30);
	sub();
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L008fc);
	jmp();

L0093f:
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	push_byte(0x1);
	move(0x2);

L00952:
	push_base_offset(0xc);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L0095d:
	load_base();
	push_word(0x2b8);
	add();
	store_base();
	push_base_offset(0x2b8);
	move_arg(0x2);
	push_base_offset(0x2b4);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x2b8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L009fd);
	jc(0x1);
	push_base_offset(0x2ac);
	push_base_offset(0x2b8);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2ac);
	cmd_6d();
	push_base_offset(0xac);
	push_word(0xab0);
	load(0x2);
	push_base_offset(0x2ac);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2b0);
	move_arg(0x2);
	push_base_offset(0x2b0);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L009b7);
	jc(0x0);
	push_base_offset(0x1ac);
	push_base_offset(0x2b8);
	load(0x2);
	cmd_6a();
	push_offset(L009d6);
	jmp();

L009b7:
	push_base_offset(0xac);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L009fd);
	jc(0x1);
	push_base_offset(0x1ac);
	push_byte(0x1);
	push_base_offset(0xac);
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0xdd);

L009d6:
	push_string("data02xxx.arc");
	push_base_offset(0x1ac);
	push_dword(0x43f54);
	load(0x2);
	call();
	push_offset(L009f6);
	jc(0x1);
	push_base_offset(0x1ac);
	cmd_6d();
	push_base_offset(0x1ac);
	sys1(0x84);
	push_offset(L009fd);
	jmp();

L009f6:
	push_base_offset(0x2b4);
	push_byte(0x0);
	move(0x2);

L009fd:
	push_base_offset(0x2b4);
	load(0x2);
	load_base();
	push_word(0x2b8);
	sub();
	store_base();
	ret();

L00a09:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L00a26:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	geq();
	push_offset(L00a6b);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	push_dword(0x43f38);
	load(0x2);
	call();
	push_offset(L00a64);
	jc(0x1);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L00a26);
	jmp();

L00a64:
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L00a6b:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L00a76:
	load_base();
	push_word(0x300);
	add();
	store_base();
	push_base_offset(0x300);
	move_arg(0x2);
	push_base_offset(0x2fc);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x300);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00b79);
	jc(0x1);
	push_base_offset(0x2f0);
	push_base_offset(0x300);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2f0);
	cmd_6d();
	push_base_offset(0xf0);
	push_word(0xab4);
	load(0x2);
	push_base_offset(0x2f0);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2f8);
	move_arg(0x2);
	push_base_offset(0x2f8);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L00b10);
	jc(0x0);
	push_byte(0x1);
	push_base_offset(0x2f0);
	sys1(0xdc);
	push_base_offset(0xf0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x2f4);
	push_byte(0x1);
	move(0x2);

L00adf:
	push_base_offset(0xf0);
	push_byte(0x4);
	add();
	push_base_offset(0x2f4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f4);
	push_base_offset(0x2f4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f4);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L00adf);
	jc(0x0);

L00b10:
	push_base_offset(0x2f4);
	push_byte(0x0);
	move(0x2);

L00b17:
	push_base_offset(0xf0);
	push_byte(0x4);
	add();
	push_base_offset(0x2f4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L00b54);
	jc(0x1);
	push_base_offset(0x1f0);
	push_byte(0x1);
	push_base_offset(0xf0);
	push_byte(0x4);
	add();
	push_base_offset(0x2f4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	sys1(0xdd);
	push_base_offset(0x1f0);
	push_offset(L0095d);
	call();
	push_offset(L00b72);
	jc(0x1);

L00b54:
	push_base_offset(0x2f4);
	push_base_offset(0x2f4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2f4);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L00b17);
	jc(0x0);
	push_offset(L00b79);
	jmp();

L00b72:
	push_base_offset(0x2fc);
	push_byte(0x0);
	move(0x2);

L00b79:
	push_base_offset(0x2fc);
	load(0x2);
	load_base();
	push_word(0x300);
	sub();
	store_base();
	ret();

L00b85:
	load_base();
	push_byte(0x44);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L0122b);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0xc560);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00bf9);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0xc560);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	eq();
	push_offset(L00bf9);
	jc(0x1);
	push_base_offset(0x40);
	push_dword(0x50000000);
	push_dword(0x9fab8);
	push_dword(0xc560);
	add();
	push_byte(0x20);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_dword(0x42768);
	push_byte(0x4);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x40);
	sys1(0x4a);

L00bf9:
	push_base_offset(0x38);
	push_dword(0x9fab8);
	push_dword(0x1a574);
	add();
	push_byte(0x40);
	push_byte(0x24);
	mul();
	add();
	push_byte(0x24);
	memcpy();
	push_base_offset(0x38);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00c65);
	jc(0x1);
	push_byte(0x40);
	push_byte(0x0);
	push_base_offset(0x38);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x20);
	add();
	load(0x2);
	push_offset(L04843);
	call();

L00c65:
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);

L00c6c:
	push_base_offset(0x38);
	push_dword(0x9fab8);
	push_dword(0x1a574);
	add();
	push_byte(0x4f);
	push_byte(0x24);
	mul();
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x24);
	mul();
	add();
	push_byte(0x24);
	memcpy();
	push_base_offset(0x38);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00cf5);
	jc(0x1);
	push_byte(0x4f);
	push_base_offset(0x44);
	load(0x2);
	add();
	push_dword(0x42abc);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x20);
	add();
	load(0x2);
	push_offset(L04843);
	call();

L00cf5:
	push_base_offset(0x44);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x3);
	lt();
	push_offset(L00c6c);
	jc(0x0);
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);

L00d16:
	push_base_offset(0x38);
	push_dword(0x9fab8);
	push_dword(0x1a574);
	add();
	push_byte(0x0);
	push_byte(0x24);
	mul();
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x24);
	mul();
	add();
	push_byte(0x24);
	memcpy();
	push_base_offset(0x38);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00d9f);
	jc(0x1);
	push_byte(0x0);
	push_base_offset(0x44);
	load(0x2);
	add();
	push_dword(0x42868);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x38);
	push_byte(0x20);
	add();
	load(0x2);
	push_offset(L04843);
	call();

L00d9f:
	push_base_offset(0x44);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x40);
	lt();
	push_offset(L00d16);
	jc(0x0);
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);

L00dc0:
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00e5c);
	jc(0x1);
	push_base_offset(0x14);
	push_dword(0x9fab8);
	push_dword(0x1b0fc);
	add();
	push_byte(0x0);
	push_byte(0xc);
	mul();
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0xc);
	mul();
	add();
	push_byte(0xc);
	memcpy();
	push_base_offset(0x14);
	push_byte(0x0);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x14);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	push_base_offset(0x14);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	push_offset(L00e5c);
	jc(0x1);
	push_byte(0x0);
	push_base_offset(0x44);
	load(0x2);
	add();
	push_dword(0x42868);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x14);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x14);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x14);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	push_offset(L04aac);
	call();

L00e5c:
	push_base_offset(0x44);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x40);
	lt();
	push_offset(L00dc0);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x25e38);
	add();
	load(0x2);
	push_offset(L015ed);
	call();
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);

L00e8e:
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00f79);
	jc(0x1);
	push_byte(0x20);
	push_base_offset(0x44);
	load(0x2);
	add();
	push_byte(0x20);
	push_base_offset(0x44);
	load(0x2);
	add();
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_word(0x2580);
	push_byte(0xc);
	push_base_offset(0x44);
	load(0x2);
	mul();
	add();
	push_word(0x2880);
	push_byte(0xc);
	push_base_offset(0x44);
	load(0x2);
	mul();
	add();
	push_dword(0x489cc);
	push_byte(0x20);
	push_word(0x8b0);
	mul();
	add();
	push_base_offset(0x44);
	load(0x2);
	push_word(0x8b0);
	mul();
	add();
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x54);
	add();
	push_dword(0x9fab8);
	push_dword(0x92cc);
	add();
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x28);
	mul();
	add();
	push_byte(0x20);
	add();
	load(0x2);
	push_offset(L01c47);
	call();

L00f79:
	push_base_offset(0x44);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L00e8e);
	jc(0x0);
	push_byte(0x0);
	push_offset(L01523);
	call();
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);

L00fa0:
	push_dword(0x9fab8);
	push_dword(0x1b4d4);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_word(0x94);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L00fc8);
	jc(0x1);
	push_base_offset(0x44);
	load(0x2);
	push_offset(L01b8e);
	call();

L00fc8:
	push_base_offset(0x44);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L00fa0);
	jc(0x0);
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);

L00fe9:
	push_dword(0x9fab8);
	push_dword(0x1e5d4);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01035);
	jc(0x1);
	push_dword(0x2c864);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_dword(0x9fab8);
	push_dword(0x1e5d4);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x14);
	mul();
	add();
	push_byte(0x14);
	memcpy();
	push_base_offset(0x44);
	load(0x2);
	push_offset(L02d1f);
	call();

L01035:
	push_base_offset(0x44);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x3f);
	lt();
	push_offset(L00fe9);
	jc(0x0);
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);

L01056:
	push_dword(0x9fab8);
	push_dword(0x1ead4);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L010fa);
	jc(0x1);
	push_dword(0x2cd64);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_dword(0x9fab8);
	push_dword(0x1ead4);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x34);
	memcpy();
	push_base_offset(0x44);
	load(0x2);
	push_dword(0x42868);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x44);
	add();
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x68);
	add();
	load(0x2);
	push_byte(0x0);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_offset(L02da3);
	call();

L010fa:
	push_base_offset(0x44);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x3f);
	lt();
	push_offset(L01056);
	jc(0x0);
	push_base_offset(0x44);
	push_byte(0x0);
	move(0x2);

L0111b:
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01211);
	jc(0x1);
	push_dword(0x2b724);
	push_base_offset(0x44);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x44);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_word(0x450);
	memcpy();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x40);
	eq();
	push_offset(L011a5);
	jc(0x1);
	push_byte(0x40);
	push_byte(0x0);
	push_base_offset(0x44);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xc560);
	add();
	push_byte(0x20);
	add();
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L02ea6);
	call();
	push_offset(L01211);
	jmp();

L011a5:
	push_base_offset(0x4);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	sub();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01211);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x42868);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x44);
	add();
	load(0x2);
	push_offset(L02ea6);
	call();

L01211:
	push_base_offset(0x44);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x44);
	load(0x2);
	push_byte(0x4);
	lt();
	push_offset(L0111b);
	jc(0x0);

L0122b:
	load_base();
	push_byte(0x44);
	sub();
	store_base();
	ret();

L01231:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x4e4);
	load(0x2);
	push_offset(L01295);
	jc(0x0);
	push_word(0x900);
	push_byte(0x1);
	move(0x2);
	push_word(0x904);
	push_dword(0x9fab8);
	push_dword(0x25e30);
	add();
	load(0x2);
	move(0x2);
	push_word(0x908);
	push_dword(0x9fab8);
	push_dword(0x25e34);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	push_byte(0x0);
	push_word(0x100);
	ternary();
	push_offset(L0237e);
	call();
	push_word(0x900);
	push_byte(0x0);
	move(0x2);
	push_word(0x904);
	push_byte(0x0);
	move(0x2);
	push_word(0x908);
	push_byte(0x0);
	move(0x2);

L01295:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L0129b:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x3b90);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L012bd:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0131d);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L01328);
	call();
	push_offset(L0131d);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L013b2);
	call();
	push_offset(L0131d);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0131d:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L01328:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L013a7);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L013a7);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L013a7);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x498);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L013a7);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L013a7:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L013b2:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01431);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01431);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L01431);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x49c);
	add();
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01431);
	jc(0x1);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L01431:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0143c:
	load_base();
	push_word(0x120);
	add();
	store_base();
	push_base_offset(0x11c);
	move_arg(0x2);
	push_base_offset(0x120);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0151c);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x11c);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0151c);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x118);
	push_dword(0x40000002);
	push_base_offset(0x120);
	load(0x2);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x4);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x118);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L014cf:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0151c);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L014cf);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000000);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000001);
	eq();
	bool_or();
	push_offset(L0151c);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("ウィンク開始要求時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L0151c:
	load_base();
	push_word(0x120);
	sub();
	store_base();
	ret();

L01523:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L01534:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01556);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L01567);
	jc(0x1);

L01556:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0143c);
	call();

L01567:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1f);
	lt();
	push_word(0xb9c);
	load(0x2);
	bool_zero();
	bool_or();
	bool_and();
	push_offset(L01534);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L01597:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L015e7);
	jc(0x1);
	push_base_offset(0xc);
	push_dword(0x40000003);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0xc);
	sys1(0x4a);

L015e7:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L015ed:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x227a0);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x118);
	add();
	store_base();
	push_base_offset(0x118);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L016cf);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_dword(0x445b4);
	push_base_offset(0x118);
	load(0x2);
	cmd_6a();
	push_dword(0x40000004);
	push_base_offset(0x114);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x445b4);
	push_base_offset(0x114);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0x108);
	load(0x2);
	push_base_offset(0x114);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x114);
	sys1(0x4a);

L01682:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L016cf);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L01682);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000002);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000003);
	eq();
	bool_or();
	push_offset(L016cf);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("音声再生時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L016cf:
	load_base();
	push_word(0x118);
	sub();
	store_base();
	ret();

L016d6:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01707);
	jc(0x1);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(0x40000005);
	sys1(0x48);

L01707:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0171e:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L01740);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L01751);
	jc(0x1);

L01740:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L01597);
	call();

L01751:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L0171e);
	jc(0x0);
	push_offset(L016d6);
	call();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L01776:
	sys1(0x5f);

L01778:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0179a);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L017b0);
	jc(0x1);

L0179a:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_offset(L012bd);
	call();
	push_offset(L01776);
	jc(0x0);

L017b0:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L01778);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L017d0:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01816);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x40000001);
	push_base_offset(0xc);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x8);
	sys1(0x4a);

L01816:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0181c:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0182d:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	eq();
	push_offset(L01885);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L0188e);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01885);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L0188e);
	jc(0x1);

L01885:
	push_base_offset(0x4);
	load(0x2);
	push_offset(L017d0);
	call();

L0188e:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L0182d);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L018af:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L01957);
	jc(0x0);

L018bb:
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	eq();
	push_offset(L01913);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L0193d);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01913);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L0193d);
	jc(0x1);

L01913:
	push_byte(0x0);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L0129b);
	call();
	push_offset(L018af);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x1b4d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x94);
	mul();
	add();
	push_word(0x94);
	memclr();

L0193d:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L018bb);
	jc(0x0);

L01957:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0195d:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L019b1);
	jc(0x1);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0129b);
	call();
	push_offset(L019b1);
	jc(0x1);
	push_base_offset(0x8);
	push_dword(0x40000007);
	push_base_offset(0xc);
	load(0x2);
	cmd_0c(0x2, 0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x8);
	sys1(0x4a);

L019b1:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L019b7:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L019db);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0195d);
	call();
	push_offset(L01a55);
	jmp();

L019db:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L019e2:
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01a23);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L01a3b);
	jc(0x1);

L01a23:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L0195d);
	call();
	push_byte(0x40);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L0195d);
	call();

L01a3b:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L019e2);
	jc(0x0);

L01a55:
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	lt();
	push_offset(L01a80);
	jc(0x0);

L01a62:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L01b10);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0129b);
	call();
	push_offset(L01a62);
	jc(0x0);
	push_offset(L01b10);
	jmp();

L01a80:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L01a87:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L01b10);
	jc(0x0);

L01a93:
	push_base_offset(0x8);
	push_dword(0x9fab8);
	push_dword(0xa960);
	add();
	push_byte(0x20);
	push_byte(0x70);
	mul();
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x70);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01ad4);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	add();
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L01af6);
	jc(0x1);

L01ad4:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L0129b);
	call();
	push_offset(L01a87);
	jc(0x0);
	push_byte(0x40);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L0129b);
	call();
	push_offset(L01a87);
	jc(0x0);

L01af6:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L01a93);
	jc(0x0);

L01b10:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L0181c);
	call();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_offset(L019b7);
	call();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_offset(L016d6);
	call();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L01b45:
	sys1(0x5f);

L01b47:
	push_byte(0x20);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_offset(L013b2);
	call();
	push_offset(L01b45);
	jc(0x0);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L01b47);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L01b8e:
	load_base();
	push_word(0x118);
	add();
	store_base();
	push_base_offset(0x118);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01c40);
	jc(0x1);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x114);
	push_dword(0x40000000);
	push_base_offset(0x118);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x3);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x114);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L01bf3:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01c40);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L01bf3);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000004);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000005);
	eq();
	bool_or();
	push_offset(L01c40);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("スプライトアニメーション開始時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L01c40:
	load_base();
	push_word(0x118);
	sub();
	store_base();
	ret();

L01c47:
	load_base();
	push_word(0x150);
	add();
	store_base();
	push_base_offset(0x130);
	move_arg(0x2);
	push_base_offset(0x134);
	move_arg(0x2);
	push_base_offset(0x138);
	move_arg(0x2);
	push_base_offset(0x13c);
	move_arg(0x2);
	push_base_offset(0x140);
	move_arg(0x2);
	push_base_offset(0x144);
	move_arg(0x2);
	push_base_offset(0x148);
	move_arg(0x2);
	push_base_offset(0x14c);
	move_arg(0x2);
	push_base_offset(0x150);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01d99);
	jc(0x1);
	push_base_offset(0x138);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01d99);
	jc(0x1);
	push_base_offset(0x12c);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x20);
	sub();
	move(0x2);
	push_dword(0x8e1cc);
	push_base_offset(0x12c);
	load(0x2);
	push_word(0x8b0);
	mul();
	add();
	push_base_offset(0x138);
	load(0x2);
	push_word(0x8b0);
	memcpy();
	push_dword(0x9f7cc);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_base_offset(0x134);
	load(0x2);
	push_byte(0x10);
	memcpy();
	push_dword(0x9f9cc);
	push_base_offset(0x12c);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x130);
	load(0x2);
	move(0x2);
	sys1(0x46);
	push_base_offset(0x108);
	move_arg(0x2);
	push_base_offset(0x128);
	push_dword(0x40000006);
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_base_offset(0x148);
	load(0x2);
	push_base_offset(0x144);
	load(0x2);
	push_base_offset(0x140);
	load(0x2);
	push_base_offset(0x13c);
	load(0x2);
	push_base_offset(0x108);
	load(0x2);
	cmd_0c(0x2, 0x8);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x8);
	push_base_offset(0x128);
	sys1(0x4a);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0x5e);

L01d4c:
	sys1(0x5f);
	push_dword(0x42768);
	push_byte(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L01d99);
	jc(0x1);
	push_base_offset(0x104);
	sys1(0x49);
	push_offset(L01d4c);
	jc(0x1);
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000006);
	eq();
	push_base_offset(0x104);
	load(0x2);
	push_dword(0x41000007);
	eq();
	bool_or();
	push_offset(L01d99);
	jc(0x0);
	push_base_offset(0x104);
	load(0x2);
	push_base_offset(0x100);
	push_string("スプライトアニメーション開始時に無効なメッセージ [ $%.8X ] を受信しました");
	cmd_6f();
	push_base_offset(0x100);
	cmd_79();

L01d99:
	load_base();
	push_word(0x150);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L01ea3);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_offset(L019b7);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	neq();
	push_offset(L01e14);
	jc(0x1);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	grp2(0x1f);

L01e14:
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memcpy();
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x514);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memclr();

L01ea3:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x1c);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_offset(L02126);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	neq();
	push_offset(L01f23);
	jc(0x1);
	push_base_offset(0x2c);
	load(0x2);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x10);
	add();
	load(0x2);
	grp2(0x1f);

L01f23:
	push_word(0x3b90);
	push_base_offset(0x30);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x520);
	memcpy();
	push_base_offset(0x10);
	push_word(0x3b90);
	push_base_offset(0x30);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	push_word(0x3b90);
	push_base_offset(0x20);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	move(0x2);
	push_base_offset(0x18);
	push_byte(0x0);
	move(0x2);

L01f6c:
	push_base_offset(0x8);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x60);
	mul();
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	push_byte(0x10);
	mul();
	sys1(0x20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	grp2(0x1f);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x40);
	add();
	load(0x2);
	grp2(0x1f);
	push_base_offset(0x14);
	push_byte(0x0);
	move(0x2);

L01ff8:
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	push_byte(0xc);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x30);
	add();
	load(0x2);
	lt();
	push_offset(L01ff8);
	jc(0x0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x40);
	add();
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x5c);
	add();
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x18);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x14);
	add();
	load(0x2);
	lt();
	push_offset(L01f6c);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x10);
	add();
	push_base_offset(0x2c);
	load(0x2);
	move(0x2);

L02126:
	push_base_offset(0x1c);
	load(0x2);
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L02178);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L02178:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0220b);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x514);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x518);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L0220b:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0225e);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_word(0x50c);
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);

L0225e:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L022cc);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L022cc);
	jc(0x0);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	push_offset(L022d7);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L022cc:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L022d7:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L022f5);
	jc(0x1);
	push_word(0x720);
	sys1(0x18);

L022f5:
	push_word(0x504);
	load(0x2);
	push_offset(L0235a);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L0235a);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L02326);
	jc(0x1);
	sys1(0x17);
	push_offset(L0235a);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L0235a);
	jc(0x0);

L02326:
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0235a);
	jc(0x1);
	push_word(0x3b90);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x520);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L0235a);
	jc(0x0);
	sys1(0x5f);
	push_offset(L022f5);
	jmp();

L0235a:
	push_base_offset(0x4);
	load(0x2);
	push_offset(L02369);
	jc(0x1);
	push_word(0x720);
	sys1(0x19);

L02369:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L0237e:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x900);
	load(0x2);
	push_offset(L02517);
	jc(0x1);
	push_word(0x8f8);
	load(0x2);
	push_offset(L0241d);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);
	push_word(0x4fc);
	load(0x2);
	bool_zero();
	push_word(0x8fc);
	load(0x2);
	bool_and();
	push_offset(L023d5);
	jc(0x1);
	push_dword(0x42ab0);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L023d5:
	push_word(0x9b4);
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0241d);
	jc(0x1);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0241d);
	jc(0x1);
	push_word(0x9c0);
	push_byte(0x0);
	push_byte(0x4c);
	mul();
	add();
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L0241d:
	push_dword(0x42aa8);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);
	push_word(0xb0c);
	load(0x2);
	push_offset(L02496);
	jc(0x0);
	push_word(0xb74);
	load(0x2);
	push_offset(L02496);
	jc(0x0);
	push_dword(0x42a80);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02496);
	jc(0x1);
	push_dword(0x42a80);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);
	push_dword(0x42a84);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02479);
	jc(0x1);
	push_dword(0x42a84);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L02479:
	push_dword(0x42a88);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02496);
	jc(0x1);
	push_dword(0x42a88);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L02496:
	push_word(0x8f8);
	load(0x2);
	push_offset(L02517);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L024c9);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x3f);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L024c9:
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L02517);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02517);
	jc(0x1);
	push_dword(0x42868);
	push_byte(0x20);
	push_byte(0x4);
	mul();
	add();
	push_dword(0x45f14);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L02517:
	push_word(0x904);
	load(0x2);
	push_offset(L02535);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L02535:
	push_word(0x908);
	load(0x2);
	push_offset(L02553);
	jc(0x1);
	push_dword(0x42abc);
	push_byte(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	grp1(0x34);

L02553:
	push_byte(0x0);
	grp1(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x38);
	add();
	store_base();
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_base_offset(0x34);
	move_arg(0x2);
	push_base_offset(0x38);
	move_arg(0x2);
	push_word(0x710);
	sys1(0x18);
	push_base_offset(0x24);
	push_byte(0x1);
	push_word(0x80);
	or();
	push_word(0x100);
	or();
	push_word(0x2000);
	or();
	move(0x2);
	push_base_offset(0x24);
	load(0x2);
	sys1(0x1c);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x1c);
	push_base_offset(0x34);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x18);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	move(0x2);
	push_base_offset(0x14);
	push_base_offset(0x30);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	div();
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	add();
	move(0x2);

L025f9:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L026d9);
	jc(0x0);
	push_base_offset(0x24);
	load(0x2);
	sys1(0x1c);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	neq();
	push_base_offset(0x2c);
	load(0x2);
	bool_and();
	push_offset(L026c3);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	lt();
	push_offset(L025f9);
	jc(0x0);
	push_base_offset(0x28);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	sub();
	push_base_offset(0x18);
	load(0x2);
	div();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	mul();
	add();
	move(0x2);
	push_base_offset(0x10);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	leq();
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	ternary();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x38);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	mul();
	push_base_offset(0x14);
	load(0x2);
	div();
	add();
	push_offset(L0237e);
	call();
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	lt();
	push_offset(L025f9);
	jc(0x0);

L026c3:
	push_base_offset(0x34);
	load(0x2);
	push_offset(L0237e);
	call();
	push_word(0x3e8);
	push_word(0x3e8);
	div();
	push_byte(0x0);
	push_byte(0x0);
	sys1(0x5c);

L026d9:
	push_word(0x710);
	sys1(0x19);
	load_base();
	push_byte(0x38);
	sub();
	store_base();
	ret();

L026e4:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);

L02702:
	push_word(0x504);
	load(0x2);
	push_offset(L0272d);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L0272d);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0272d);
	jc(0x1);
	sys1(0x5f);
	push_offset(L02702);
	jmp();

L0272d:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L02742:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x720);
	sys1(0x18);
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);

L02765:
	push_word(0x504);
	load(0x2);
	push_offset(L027a1);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L027a1);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L027a1);
	jc(0x1);
	sys1(0x17);
	push_offset(L027a1);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L027a1);
	jc(0x0);
	sys1(0x5f);
	push_offset(L02765);
	jmp();

L027a1:
	push_word(0x720);
	sys1(0x19);
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L027bb:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0285f);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	geq();
	push_offset(L02835);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	bool_or();
	push_offset(L02835);
	jc(0x0);
	push_string("循環制御が行われているオブジェクトに対して待機要求が発行されました");
	cmd_79();
	push_offset(L0285f);
	jmp();

L02835:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L02851);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_offset(L026e4);
	call();
	push_base_offset(0x8);
	move_arg(0x2);
	push_offset(L0285f);
	jmp();

L02851:
	push_base_offset(0x10);
	load(0x2);
	push_offset(L02742);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L0285f:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L0286a:
	load_base();
	push_word(0x1f8);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d8);
	move_arg(0x2);
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_base_offset(0x1e0);
	move_arg(0x2);
	push_base_offset(0x1e4);
	move_arg(0x2);
	push_base_offset(0x1e8);
	move_arg(0x2);
	push_base_offset(0x1ec);
	move_arg(0x2);
	push_base_offset(0x1f0);
	move_arg(0x2);
	push_base_offset(0x1f4);
	move_arg(0x2);
	push_base_offset(0x1f8);
	move_arg(0x2);
	push_base_offset(0x1f8);
	load(0x2);
	push_offset(L02f64);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memclr();
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_base_offset(0x1f4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1f0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x1c);
	add();
	push_base_offset(0x1ec);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x20);
	add();
	push_base_offset(0x1e8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x128);
	add();
	push_base_offset(0x1e4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x12c);
	add();
	push_base_offset(0x1e0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x130);
	add();
	push_base_offset(0x1dc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x134);
	add();
	push_base_offset(0x1d8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x138);
	add();
	push_base_offset(0x1d4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x13c);
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0299c);
	jc(0x1);
	push_base_offset(0x1c0);
	push_word(0x150);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x70);
	memcpy();

L0299c:
	push_dword(0x227a4);
	push_base_offset(0x1f8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1cc);
	load(0x2);
	push_offset(L029cc);
	jc(0x1);
	push_base_offset(0x1f8);
	load(0x2);
	push_byte(0x0);
	push_offset(L027bb);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);

L029cc:
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1f8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x24);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x0);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L0286a);
	call();
	load_base();
	push_byte(0x24);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x2c);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L0286a);
	call();
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x1f0);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d8);
	move_arg(0x2);
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_base_offset(0x1e0);
	move_arg(0x2);
	push_base_offset(0x1e4);
	move_arg(0x2);
	push_base_offset(0x1e8);
	move_arg(0x2);
	push_base_offset(0x1ec);
	move_arg(0x2);
	push_base_offset(0x1f0);
	move_arg(0x2);
	push_base_offset(0x1f0);
	load(0x2);
	push_offset(L02f64);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1ec);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x24);
	add();
	push_base_offset(0x1e8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x28);
	add();
	push_base_offset(0x1e4);
	load(0x2);
	push_base_offset(0x1e8);
	load(0x2);
	push_byte(0x10);
	mul();
	memcpy();
	push_base_offset(0x1c0);
	push_word(0x128);
	add();
	push_base_offset(0x1e0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x12c);
	add();
	push_base_offset(0x1dc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x130);
	add();
	push_base_offset(0x1d8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x134);
	add();
	push_base_offset(0x1d4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x138);
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x13c);
	add();
	push_base_offset(0x1cc);
	load(0x2);
	move(0x2);
	push_dword(0x227a4);
	push_base_offset(0x1f0);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c8);
	load(0x2);
	push_offset(L02c03);
	jc(0x1);
	push_base_offset(0x1f0);
	load(0x2);
	push_byte(0x0);
	push_offset(L027bb);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);

L02c03:
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1f0);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x30);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_base_offset(0x30);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x30);
	load(0x2);
	add();
	push_byte(0x3);
	push_base_offset(0x2c);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0286a);
	call();
	load_base();
	push_byte(0x30);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x2c);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_base_offset(0x2c);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x2c);
	load(0x2);
	add();
	push_byte(0x4);
	push_base_offset(0x28);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L0286a);
	call();
	load_base();
	push_byte(0x2c);
	sub();
	store_base();
	ret();

L02d1f:
	load_base();
	push_word(0x1c8);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x1c8);
	load(0x2);
	add();
	push_offset(L0309e);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x5);
	push_byte(0x0);
	add();
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x227a4);
	push_byte(0x0);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1c8);
	sub();
	store_base();
	ret();

L02da3:
	load_base();
	push_word(0x1dc);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d8);
	move_arg(0x2);
	push_base_offset(0x1dc);
	move_arg(0x2);
	push_byte(0x0);
	push_base_offset(0x1dc);
	load(0x2);
	add();
	push_offset(L0309e);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memclr();
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x5);
	push_byte(0x2);
	add();
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1d8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1d4);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x13c);
	add();
	push_base_offset(0x1cc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L02e7d);
	jc(0x1);
	push_base_offset(0x1c0);
	push_word(0x150);
	add();
	push_base_offset(0x1c8);
	load(0x2);
	push_byte(0x70);
	memcpy();

L02e7d:
	push_dword(0x227a4);
	push_byte(0x0);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1dc);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1dc);
	sub();
	store_base();
	ret();

L02ea6:
	load_base();
	push_word(0x1d4);
	add();
	store_base();
	push_base_offset(0x1c8);
	move_arg(0x2);
	push_base_offset(0x1cc);
	move_arg(0x2);
	push_base_offset(0x1d0);
	move_arg(0x2);
	push_base_offset(0x1d4);
	move_arg(0x2);
	push_base_offset(0x1d4);
	load(0x2);
	push_offset(L0309e);
	call();
	push_base_offset(0x1c4);
	move_arg(0x2);
	push_base_offset(0x1c0);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0xc);
	add();
	push_byte(0x5);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1c0);
	push_byte(0x18);
	add();
	push_base_offset(0x1d0);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1cc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1c0);
	push_word(0x140);
	add();
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1c8);
	load(0x2);
	move(0x2);
	push_dword(0x227a4);
	push_base_offset(0x1d4);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	push_base_offset(0x1c0);
	push_word(0x1c0);
	memcpy();
	push_base_offset(0x1c4);
	load(0x2);
	load_base();
	push_word(0x1d4);
	sub();
	store_base();
	ret();

L02f64:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	push_dword(0x227a4);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03026);
	jc(0x1);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x1);
	add();
	eq();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x450);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	push_offset(L027bb);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03026);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03026);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	push_offset(L03026);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	memclr();

L03026:
	push_base_offset(0x10);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L0303d:
	push_base_offset(0x4);
	push_dword(0x227a4);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0307e);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	geq();
	push_offset(L0307e);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x1);
	move(0x2);

L0307e:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x52);
	lt();
	push_offset(L0303d);
	jc(0x0);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L0309e:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x10);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	push_dword(0x227a4);
	push_base_offset(0x14);
	load(0x2);
	push_word(0x1c0);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03160);
	jc(0x1);
	push_base_offset(0x8);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_byte(0x5);
	push_byte(0x1);
	add();
	eq();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x140);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_word(0x450);
	mul();
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	push_offset(L027bb);
	call();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03160);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L03160);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	push_offset(L03160);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	memclr();

L03160:
	push_base_offset(0x10);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L0317c:
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L031dd);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	eq();
	push_offset(L031dd);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x1f7d4);
	add();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x450);
	mul();
	add();
	push_word(0x450);
	memclr();
	push_offset(L031f7);
	jmp();

L031dd:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	lt();
	push_offset(L0317c);
	jc(0x0);

L031f7:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_dword(0x2da64);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L03221:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);

L0323f:
	push_word(0x504);
	load(0x2);
	push_offset(L0326a);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L0326a);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L0326a);
	jc(0x1);
	sys1(0x5f);
	push_offset(L0323f);
	jmp();

L0326a:
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L0327f:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x720);
	sys1(0x18);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);

L032a2:
	push_word(0x504);
	load(0x2);
	push_offset(L032de);
	jc(0x0);
	push_dword(0x4887c);
	load(0x2);
	push_offset(L032de);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L032de);
	jc(0x1);
	sys1(0x17);
	push_offset(L032de);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L032de);
	jc(0x0);
	sys1(0x5f);
	push_offset(L032a2);
	jmp();

L032de:
	push_word(0x720);
	sys1(0x19);
	push_word(0x504);
	load(0x2);
	bool_zero();
	push_dword(0x4887c);
	load(0x2);
	bool_zero();
	bool_and();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03323);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L03221);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_offset(L03331);
	jmp();

L03323:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0327f);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L03331:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L0338a);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L03221);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L0338a:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0xc);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L033ad:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L033f1);
	jc(0x1);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0x8);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L033f1);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);

L033f1:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L033ad);
	jc(0x0);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L03412:
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L03435);
	jc(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L03221);
	call();
	push_base_offset(0xc);
	move_arg(0x2);

L03435:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L03412);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03466:
	push_dword(0x2da64);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L03495);
	jc(0x1);
	push_dword(0x2da64);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x1);
	move(0x2);

L03495:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L03466);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x2da64);
	push_base_offset(0xc);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L03503);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L03221);
	call();
	push_base_offset(0x8);
	move_arg(0x2);

L03503:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0350e:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L0357a);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	load(0x2);
	push_byte(0x40);
	lt();
	push_offset(L03585);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x1a444);
	add();
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x8);
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	push_dword(0x9fab8);
	push_dword(0x1a440);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);

L0357a:
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);
	push_offset(L03590);
	jmp();

L03585:
	push_string("バストショット制御向けプリロード対象ビットマップ配列に空きがありません");
	cmd_79();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L03590:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x368);
	add();
	store_base();
	push_base_offset(0x2e4);
	move_arg(0x2);
	push_base_offset(0x2e8);
	move_arg(0x2);
	push_base_offset(0x2ec);
	move_arg(0x2);
	push_base_offset(0x2f0);
	move_arg(0x2);
	push_base_offset(0x2f4);
	move_arg(0x2);
	push_base_offset(0x2f8);
	move_arg(0x2);
	push_base_offset(0x2fc);
	move_arg(0x2);
	push_base_offset(0x300);
	move_arg(0x2);
	push_base_offset(0x304);
	move_arg(0x2);
	push_base_offset(0x308);
	move_arg(0x2);
	push_base_offset(0x30c);
	move_arg(0x2);
	push_base_offset(0x310);
	move_arg(0x2);
	push_base_offset(0x314);
	move_arg(0x2);
	push_base_offset(0x318);
	move_arg(0x2);
	push_base_offset(0x31c);
	move_arg(0x2);
	push_base_offset(0x320);
	move_arg(0x2);
	push_base_offset(0x324);
	move_arg(0x2);
	push_base_offset(0x328);
	move_arg(0x2);
	push_base_offset(0x32c);
	move_arg(0x2);
	push_base_offset(0x330);
	move_arg(0x2);
	push_base_offset(0x334);
	move_arg(0x2);
	push_base_offset(0x338);
	move_arg(0x2);
	push_base_offset(0x33c);
	move_arg(0x2);
	push_base_offset(0x340);
	move_arg(0x2);
	push_base_offset(0x344);
	move_arg(0x2);
	push_base_offset(0x348);
	move_arg(0x2);
	push_base_offset(0x34c);
	move_arg(0x2);
	push_base_offset(0x350);
	move_arg(0x2);
	push_base_offset(0x354);
	move_arg(0x2);
	push_base_offset(0x358);
	move_arg(0x2);
	push_base_offset(0x35c);
	move_arg(0x2);
	push_base_offset(0x360);
	move_arg(0x2);
	push_base_offset(0x364);
	move_arg(0x2);
	push_base_offset(0x368);
	move_arg(0x2);
	push_byte(0x0);
	push_offset(L04088);
	jc(0x0);
	push_dword(0x9fab8);
	push_dword(0x1a434);
	add();
	load(0x2);
	push_offset(L04088);
	jc(0x0);
	push_base_offset(0x2e0);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2f0);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	geq();
	push_base_offset(0x2f0);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	ternary();
	push_base_offset(0x2f0);
	move_arg(0x2);
	push_base_offset(0x2f8);
	load(0x2);
	push_word(0x80);
	lt();
	push_offset(L0370a);
	jc(0x0);
	push_base_offset(0x2f8);
	load(0x2);
	push_word(0x80);
	push_byte(0x2);
	mul();
	push_byte(0x10);
	sub();
	lt();
	push_offset(L036f4);
	jc(0x0);
	push_base_offset(0x2f8);
	load(0x2);
	push_word(0x80);
	push_byte(0x2);
	mul();
	lt();
	push_offset(L036d4);
	jc(0x0);
	push_base_offset(0x2f8);
	push_word(0x732);
	push_word(0x100);
	sub();
	move(0x2);
	push_base_offset(0x2e0);
	push_byte(0x1);
	move(0x2);
	push_offset(L0370a);
	jmp();

L036d4:
	push_base_offset(0x2f8);
	push_word(0x7b0);
	push_word(0x100);
	sub();
	push_base_offset(0x2f8);
	load(0x2);
	add();
	push_word(0x80);
	push_byte(0x2);
	mul();
	push_byte(0x10);
	sub();
	sub();
	move(0x2);
	push_offset(L0370a);
	jmp();

L036f4:
	push_base_offset(0x2f8);
	push_word(0x500);
	push_word(0x100);
	sub();
	push_base_offset(0x2f8);
	load(0x2);
	add();
	push_word(0x80);
	sub();
	move(0x2);

L0370a:
	push_dword(0x9fab8);
	push_dword(0xd0b4);
	add();
	push_base_offset(0x368);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L03734);
	jc(0x0);
	push_string("バストショット制御コマンド情報配列に空きがありません");
	cmd_79();
	push_offset(L04088);
	jmp();

L03734:
	push_base_offset(0x124);
	push_dword(0x9fab8);
	push_dword(0xd0b4);
	add();
	push_base_offset(0x368);
	load(0x2);
	push_word(0x69c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x120);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L0375c:
	push_base_offset(0x2d8);
	load(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	lt();
	push_offset(L037b8);
	jc(0x1);
	push_base_offset(0x1d4);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_word(0xb0);
	mul();
	add();
	push_word(0xb0);
	memcpy();
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L037a7);
	jc(0x0);
	push_base_offset(0x120);
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	load(0x2);
	move(0x2);

L037a7:
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L0375c);
	jmp();

L037b8:
	push_base_offset(0x1d4);
	push_word(0xb0);
	memclr();
	push_base_offset(0x1d4);
	push_byte(0x0);
	add();
	push_base_offset(0x364);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x4);
	add();
	push_base_offset(0x33c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x8);
	add();
	push_base_offset(0x338);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0xc);
	add();
	push_base_offset(0x334);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x10);
	add();
	push_base_offset(0x330);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x14);
	add();
	push_base_offset(0x32c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x18);
	add();
	push_base_offset(0x328);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x1c);
	add();
	push_base_offset(0x324);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x20);
	add();
	push_base_offset(0x320);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x24);
	add();
	push_base_offset(0x31c);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x28);
	add();
	push_base_offset(0x318);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x2c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x30);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x34);
	add();
	push_base_offset(0x314);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x38);
	add();
	push_base_offset(0x310);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x4c);
	add();
	push_base_offset(0x308);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x50);
	add();
	push_base_offset(0x304);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x54);
	add();
	push_base_offset(0x300);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x58);
	add();
	push_base_offset(0x2fc);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x5c);
	add();
	push_base_offset(0x2f8);
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_byte(0x60);
	add();
	push_base_offset(0x2f4);
	load(0x2);
	move(0x2);
	push_base_offset(0x30c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L038e5);
	jc(0x1);
	push_base_offset(0x1d4);
	push_byte(0x3c);
	add();
	push_base_offset(0x30c);
	load(0x2);
	push_byte(0x10);
	memcpy();

L038e5:
	push_base_offset(0x360);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0393d);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x360);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_byte(0x64);
	add();
	move_arg(0x2);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L0394b);
	jc(0x1);
	push_base_offset(0x2d4);
	load(0x0);
	push_byte(0x24);
	eq();
	push_offset(L0394b);
	jc(0x0);
	push_base_offset(0x1d4);
	push_byte(0x64);
	add();
	load(0x2);
	push_offset(L0350e);
	call();
	push_offset(L04088);
	jc(0x1);
	push_offset(L0394b);
	jmp();

L0393d:
	push_base_offset(0x1d4);
	push_byte(0x64);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L0394b:
	push_base_offset(0x35c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03996);
	jc(0x1);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03996);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x35c);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_byte(0x68);
	add();
	move_arg(0x2);
	push_base_offset(0x1d4);
	push_byte(0x68);
	add();
	load(0x2);
	push_offset(L0350e);
	call();
	push_offset(L04088);
	jc(0x1);
	push_offset(L039a4);
	jmp();

L03996:
	push_base_offset(0x1d4);
	push_byte(0x68);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L039a4:
	push_base_offset(0x1d4);
	push_byte(0x6c);
	add();
	push_base_offset(0x358);
	load(0x2);
	move(0x2);
	push_base_offset(0x344);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L039fc);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x344);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_byte(0x70);
	add();
	move_arg(0x2);
	push_base_offset(0x1d4);
	push_byte(0x70);
	add();
	load(0x2);
	push_offset(L0350e);
	call();
	push_offset(L04088);
	jc(0x1);
	push_base_offset(0x1d4);
	push_byte(0x74);
	add();
	push_base_offset(0x340);
	load(0x2);
	move(0x2);
	push_offset(L03a0a);
	jmp();

L039fc:
	push_base_offset(0x1d4);
	push_byte(0x70);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L03a0a:
	push_base_offset(0x350);
	load(0x2);
	push_byte(0x2);
	geq();
	push_offset(L03a37);
	jc(0x0);
	push_base_offset(0x1d4);
	push_byte(0x7c);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x1d4);
	push_word(0x80);
	add();
	push_base_offset(0x350);
	load(0x2);
	move(0x2);
	push_offset(L03bbe);
	jmp();

L03a37:
	push_base_offset(0x1d4);
	push_byte(0x7c);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x1d4);
	push_word(0x80);
	add();
	push_base_offset(0x350);
	load(0x2);
	move(0x2);
	push_base_offset(0x11c);
	push_base_offset(0x1d4);
	push_byte(0x7c);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x61c);
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_base_offset(0x2dc);
	push_word(0x80);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	sub();
	push_base_offset(0x354);
	load(0x2);
	push_offset(L04c9f);
	call();
	push_offset(L03bb6);
	jc(0x1);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x61c);
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_base_offset(0x2dc);
	push_word(0x80);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	sub();
	push_base_offset(0x348);
	load(0x2);
	push_offset(L04c9f);
	call();
	push_offset(L03bb6);
	jc(0x1);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x34c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03bbe);
	jc(0x1);
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L03b2f:
	push_base_offset(0x124);
	load(0x2);
	push_word(0x61c);
	add();
	push_base_offset(0x11c);
	load(0x2);
	add();
	push_base_offset(0x2dc);
	push_word(0x80);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	sub();
	push_base_offset(0x34c);
	load(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L04c9f);
	call();
	push_offset(L03bb6);
	jc(0x1);
	push_base_offset(0x11c);
	push_base_offset(0x11c);
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_word(0x618);
	add();
	load(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_base_offset(0x350);
	load(0x2);
	lt();
	push_offset(L03b2f);
	jc(0x0);
	push_offset(L03bbe);
	jmp();

L03bb6:
	push_string("バストショット制御向けアニメーション領域に空きがありません");
	cmd_79();
	push_offset(L04088);
	jmp();

L03bbe:
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	push_base_offset(0x2f0);
	load(0x2);
	move(0x2);
	push_base_offset(0x2f0);
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L03c78);
	jc(0x0);
	push_base_offset(0x2f0);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x2f0);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a43c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a43c);
	add();
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	load(0x2);
	push_byte(0x0);
	leq();
	push_offset(L03c55);
	jc(0x1);
	push_base_offset(0x120);
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	load(0x2);
	move(0x2);
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	push_dword(0x9fab8);
	push_dword(0x1a438);
	add();
	load(0x2);
	push_byte(0x1);
	sub();
	move(0x2);

L03c55:
	push_base_offset(0x2dc);
	load(0x2);
	push_word(0x100);
	not();
	push_byte(0x1);
	add();
	neq();
	push_base_offset(0x2dc);
	load(0x2);
	push_base_offset(0x120);
	load(0x2);
	push_byte(0x1);
	sub();
	ternary();
	push_base_offset(0x1d4);
	push_byte(0x78);
	add();
	move_arg(0x2);

L03c78:
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L03c7f:
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L03c7f);
	jc(0x0);
	push_base_offset(0x2ec);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03e0d);
	jc(0x1);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03e0d);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x2ec);
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_word(0x84);
	add();
	move_arg(0x2);
	push_base_offset(0x118);
	push_word(0xab4);
	load(0x2);
	push_base_offset(0x2d4);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03d62);
	jc(0x0);
	push_byte(0x1);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x118);
	push_byte(0x0);
	add();
	move_arg(0x2);
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x118);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x2d8);
	push_byte(0x1);
	move(0x2);

L03d31:
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L03d31);
	jc(0x0);

L03d62:
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L03d69:
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L03def);
	jc(0x1);
	push_base_offset(0x2d4);
	push_byte(0x1);
	push_base_offset(0x118);
	push_byte(0x4);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	sys1(0xdd);
	push_base_offset(0xd4);
	push_word(0xab0);
	load(0x2);
	push_base_offset(0x2d4);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03dda);
	jc(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L03dda);
	jc(0x1);
	push_base_offset(0x2d4);
	push_byte(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0xdd);

L03dda:
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);

L03def:
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L03d69);
	jc(0x0);
	push_offset(L03e1c);
	jmp();

L03e0d:
	push_base_offset(0x1d4);
	push_word(0x84);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L03e1c:
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L03e23:
	push_base_offset(0x2e4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03f13);
	jc(0x1);
	push_base_offset(0x358);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03f13);
	jc(0x1);
	push_base_offset(0x2d8);
	load(0x2);
	push_base_offset(0x2e8);
	load(0x2);
	geq();
	push_offset(L03f13);
	jc(0x0);
	push_base_offset(0x2e4);
	load(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L03f13);
	jc(0x1);
	push_base_offset(0x2d4);
	push_base_offset(0x2e4);
	load(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	cmd_6a();
	push_base_offset(0x2d4);
	cmd_6d();
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x1d4);
	push_word(0x88);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_base_offset(0xd4);
	push_word(0xab0);
	load(0x2);
	push_base_offset(0x2d4);
	push_byte(0x0);
	sys1(0xd4);
	push_base_offset(0x2dc);
	move_arg(0x2);
	push_base_offset(0x2dc);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03eef);
	jc(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x0);
	geq();
	push_offset(L03eef);
	jc(0x1);
	push_base_offset(0x2d4);
	push_byte(0x1);
	push_base_offset(0xd4);
	push_byte(0x4);
	add();
	load(0x2);
	sys1(0xdd);
	push_byte(0x0);
	push_base_offset(0x2d4);
	sys1(0xdc);
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	move_arg(0x2);
	push_offset(L03f2b);
	jmp();

L03eef:
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_base_offset(0x1d4);
	push_word(0x88);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_offset(L03f2b);
	jmp();

L03f13:
	push_base_offset(0x1d4);
	push_word(0x88);
	add();
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L03f2b:
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L03e23);
	jc(0x0);
	push_base_offset(0x2d8);
	push_byte(0x0);
	move(0x2);

L03f4c:
	push_base_offset(0x28);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_offset(L0350e);
	call();
	push_offset(L04088);
	jc(0x1);
	push_base_offset(0x2d8);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2d8);
	load(0x2);
	push_byte(0xa);
	lt();
	push_offset(L03f4c);
	jc(0x0);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L03ff1);
	jc(0x1);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x59c);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x124);
	load(0x2);
	push_word(0x5a0);
	add();
	push_byte(0x0);
	move(0x2);

L03ff1:
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x1c);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_word(0xb0);
	mul();
	add();
	push_base_offset(0x1d4);
	push_word(0xb0);
	memcpy();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x18);
	add();
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x2e0);
	load(0x2);
	push_base_offset(0x364);
	load(0x2);
	push_byte(0x4);
	eq();
	push_base_offset(0x368);
	load(0x2);
	push_dword(0x45f14);
	load(0x2);
	eq();
	bool_and();
	bool_or();
	push_offset(L0405d);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x244c4);
	add();
	push_base_offset(0x368);
	load(0x2);
	move(0x2);
	push_offset(L04088);
	jmp();

L0405d:
	push_base_offset(0x368);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x244c4);
	add();
	load(0x2);
	eq();
	push_offset(L04088);
	jc(0x1);
	push_dword(0x9fab8);
	push_dword(0x244c4);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);

L04088:
	load_base();
	push_word(0x368);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x128);
	add();
	store_base();
	push_base_offset(0x124);
	move_arg(0x2);
	push_base_offset(0x128);
	move_arg(0x2);
	push_base_offset(0x120);
	push_base_offset(0x128);
	load(0x2);
	push_word(0xb0);
	memcpy();
	push_base_offset(0x70);
	push_base_offset(0x124);
	load(0x2);
	push_byte(0x70);
	memcpy();
	push_base_offset(0x120);
	push_byte(0x4);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x20);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x4);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x8);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x24);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0xc);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0xc);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x28);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0xc);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x10);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x10);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x20);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x10);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x14);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x14);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x24);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x14);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x18);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x18);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x28);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x18);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x1c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x1c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x2c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x1c);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x20);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x20);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x30);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x20);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x24);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x24);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x34);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x24);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x28);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x28);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x38);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x28);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x34);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x34);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x44);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x34);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x38);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x38);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x4c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x38);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x4c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x4c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x64);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x4c);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x50);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x50);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x68);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x50);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x5c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x5c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x6c);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x5c);
	add();
	move_arg(0x2);
	push_base_offset(0x120);
	push_byte(0x6c);
	add();
	load(0x2);
	push_dword(-0x7fffffff);
	neq();
	push_base_offset(0x120);
	push_byte(0x6c);
	add();
	load(0x2);
	push_base_offset(0x70);
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x120);
	push_byte(0x6c);
	add();
	move_arg(0x2);
	push_base_offset(0x128);
	load(0x2);
	push_base_offset(0x120);
	push_word(0xb0);
	memcpy();
	load_base();
	push_word(0x128);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x0);
	add();
	store_base();

L0433e:
	push_word(0x504);
	load(0x2);
	push_offset(L0435d);
	jc(0x0);
	push_dword(0x3ade4);
	push_byte(0x4);
	add();
	load(0x2);
	push_offset(L0435d);
	jc(0x1);
	sys1(0x5f);
	push_offset(L0433e);
	jmp();

L0435d:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L04369:
	load_base();
	push_byte(0x0);
	add();
	store_base();

L0436e:
	push_word(0x504);
	load(0x2);
	push_offset(L0439f);
	jc(0x0);
	push_dword(0x3adf4);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L0439f);
	jc(0x1);
	push_dword(0x3adf4);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L0439f);
	jc(0x0);
	sys1(0x5f);
	push_offset(L0436e);
	jmp();

L0439f:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x158);
	add();
	store_base();
	push_base_offset(0x150);
	move_arg(0x2);
	push_base_offset(0x154);
	move_arg(0x2);
	push_base_offset(0x158);
	move_arg(0x2);
	sys1(0x17);
	push_base_offset(0x148);
	move_arg(0x2);
	push_base_offset(0x148);
	load(0x2);
	push_dword(0x9fab8);
	push_word(0xc8);
	add();
	load(0x2);
	bool_and();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	bool_or();
	push_byte(0x20);
	push_byte(0x10);
	add();
	load(0x1);
	push_byte(0xa);
	push_byte(0x1);
	add();
	eq();
	bool_or();
	push_byte(0x0);
	push_base_offset(0x154);
	load(0x2);
	ternary();
	push_base_offset(0x154);
	move_arg(0x2);
	push_dword(0x3adf4);
	push_byte(0x4);
	add();
	push_dword(0x3adf4);
	push_byte(0x0);
	add();
	load(0x2);
	move(0x2);
	push_offset(L04369);
	call();
	push_base_offset(0x44);
	push_dword(0x42abc);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	push_byte(0x0);
	grp2(0x38);
	push_base_offset(0x20);
	push_word(0x400);
	push_byte(0x69);
	add();
	grp1(0x16);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L04454);
	jc(0x1);
	push_word(0x400);
	push_byte(0x6a);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	grp2(0x1f);

L04454:
	push_base_offset(0x158);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L044dd);
	jc(0x1);
	push_string("sysprg.arc");
	push_string("bitmap._bp");
	sys1(0x40);
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0xba8);
	load(0x2);
	push_byte(0x20);
	push_word(0xf8);
	add();
	load(0x2);
	push_byte(0x20);
	push_word(0xf4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x4);
	move_arg(0x2);
	push_word(0x400);
	push_byte(0x69);
	add();
	push_base_offset(0x158);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x20);
	push_byte(0x70);
	add();
	load(0x1);
	push_dword(0x9fab8);
	push_dword(0x2211c);
	add();
	load(0x2);
	push_byte(0x10);
	push_base_offset(0x8);
	load(0x2);
	call();
	push_base_offset(0x148);
	move_arg(0x2);
	sys1(0x41);
	push_byte(0x0);
	push_offset(L044dd);
	jc(0x1);
	push_base_offset(0x148);
	load(0x2);
	push_offset(L044dd);
	jc(0x0);
	push_base_offset(0x158);
	load(0x2);
	push_base_offset(0x144);
	push_string("未定義のキャラクター名 [ %s ] が指定されました");
	cmd_6f();
	push_base_offset(0x144);
	cmd_79();

L044dd:
	push_base_offset(0x158);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04624);
	jc(0x1);
	push_base_offset(0x24);
	load(0x2);
	push_offset(L04588);
	jc(0x0);
	push_dword(0x42aac);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	push_byte(0x1);
	push_word(0x100);
	push_word(0x740);
	grp1(0x56);
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	push_word(0x100);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L046bd);
	jmp();

L04588:
	push_dword(0x42aac);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	push_word(0x400);
	push_byte(0x6a);
	add();
	push_word(0x100);
	push_byte(0x0);
	push_word(0x740);
	push_byte(0x1);
	grp1(0x58);
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	push_word(0x100);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x14);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x20);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x24);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	move(0x2);
	push_offset(L046bd);
	jmp();

L04624:
	push_base_offset(0x24);
	load(0x2);
	push_offset(L0474d);
	jc(0x1);
	push_dword(0x42aac);
	load(0x2);
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_dword(0x9fab8);
	push_dword(0x22114);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0x44);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	push_byte(0x1);
	push_byte(0x0);
	push_word(0x740);
	grp1(0x56);
	push_dword(0x3adf4);
	push_byte(0x10);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x14);
	add();
	push_word(0x100);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x24);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x28);
	add();
	push_word(0x400);
	push_byte(0x69);
	add();
	move(0x2);

L046bd:
	push_dword(0x42aac);
	load(0x2);
	push_byte(0x1);
	grp1(0x30);
	push_dword(0x3adf4);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x14c);
	move_arg(0x2);
	push_base_offset(0x150);
	load(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0x14c);
	load(0x2);
	ternary();
	push_dword(0x3adf4);
	push_byte(0x8);
	add();
	move_arg(0x2);
	push_dword(0x3adf4);
	push_byte(0xc);
	add();
	push_dword(0x42aac);
	load(0x2);
	move(0x2);
	push_dword(0x3adf4);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x14c);
	push_base_offset(0x154);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	move(0x2);
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x1);
	geq();
	push_base_offset(0x14c);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_dword(0x3adf4);
	push_byte(0x1c);
	add();
	move_arg(0x2);

L0474d:
	load_base();
	push_word(0x158);
	sub();
	store_base();
	ret();

L04754:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3ae20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	move(0x2);

L04771:
	push_word(0x504);
	load(0x2);
	push_offset(L04790);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L04790);
	jc(0x1);
	sys1(0x5f);
	push_offset(L04771);
	jmp();

L04790:
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L0479c:
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_word(0x720);
	sys1(0x18);
	push_base_offset(0x4);
	push_dword(0x3ae20);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	move(0x2);

L047be:
	push_word(0x504);
	load(0x2);
	push_offset(L047ee);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L047ee);
	jc(0x1);
	sys1(0x17);
	push_offset(L047ee);
	jc(0x0);
	push_word(0x720);
	sys1(0x1a);
	push_offset(L047ee);
	jc(0x0);
	sys1(0x5f);
	push_offset(L047be);
	jmp();

L047ee:
	push_word(0x720);
	sys1(0x19);
	push_word(0x504);
	load(0x2);
	bool_zero();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_offset(L0482a);
	jc(0x0);
	push_base_offset(0xc);
	load(0x2);
	push_offset(L04754);
	call();
	push_base_offset(0x4);
	move_arg(0x2);
	push_offset(L04838);
	jmp();

L0482a:
	push_base_offset(0xc);
	load(0x2);
	push_offset(L0479c);
	call();
	push_base_offset(0x4);
	move_arg(0x2);

L04838:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L04843:
	load_base();
	push_word(0x94);
	add();
	store_base();
	push_base_offset(0x70);
	move_arg(0x2);
	push_base_offset(0x74);
	move_arg(0x2);
	push_base_offset(0x78);
	move_arg(0x2);
	push_base_offset(0x7c);
	move_arg(0x2);
	push_base_offset(0x80);
	move_arg(0x2);
	push_base_offset(0x84);
	move_arg(0x2);
	push_base_offset(0x88);
	move_arg(0x2);
	push_base_offset(0x8c);
	move_arg(0x2);
	push_base_offset(0x90);
	move_arg(0x2);
	push_base_offset(0x94);
	move_arg(0x2);
	push_base_offset(0x70);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x70);
	load(0x2);
	push_dword(0x7fffffff);
	ternary();
	push_base_offset(0x70);
	move_arg(0x2);
	push_base_offset(0x6c);
	push_byte(0x6c);
	memclr();
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x8c);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x88);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0xc);
	add();
	push_base_offset(0x84);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x10);
	add();
	push_base_offset(0x80);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x14);
	add();
	push_base_offset(0x7c);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x18);
	add();
	push_base_offset(0x78);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x1c);
	add();
	push_base_offset(0x74);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x0);
	add();
	push_byte(0x20);
	add();
	push_base_offset(0x70);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x24);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x28);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x2c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x30);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x34);
	add();
	push_base_offset(0x90);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x38);
	add();
	push_base_offset(0x70);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x40);
	add();
	push_word(0x101);
	push_base_offset(0x8c);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x3c);
	add();
	push_base_offset(0x6c);
	push_byte(0x40);
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x44);
	add();
	push_base_offset(0x88);
	load(0x2);
	push_byte(0x10);
	shl();
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x48);
	add();
	push_base_offset(0x80);
	load(0x2);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x4c);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x4c);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x4c);
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x5c);
	add();
	push_byte(0x0);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x5c);
	add();
	push_byte(0x4);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x6c);
	push_byte(0x5c);
	add();
	push_byte(0x8);
	add();
	push_byte(0x0);
	move(0x2);
	push_dword(0x3ae20);
	push_base_offset(0x94);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	push_base_offset(0x6c);
	push_byte(0x6c);
	memcpy();
	load_base();
	push_word(0x94);
	sub();
	store_base();
	ret();

L04a0f:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3ae20);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x6c);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x24);
	add();
	load(0x2);
	push_offset(L04a6f);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x28);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x2c);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x30);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	move(0x2);

L04a6f:
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L04a81:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_offset(L04a0f);
	call();
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x52);
	lt();
	push_offset(L04a81);
	jc(0x0);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L04aac:
	load_base();
	push_byte(0x58);
	add();
	store_base();
	push_base_offset(0x44);
	move_arg(0x2);
	push_base_offset(0x48);
	move_arg(0x2);
	push_base_offset(0x4c);
	move_arg(0x2);
	push_base_offset(0x50);
	move_arg(0x2);
	push_base_offset(0x54);
	move_arg(0x2);
	push_base_offset(0x58);
	move_arg(0x2);
	push_base_offset(0x40);
	push_base_offset(0x44);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	div();
	div();
	move(0x2);
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x0);
	gt();
	push_base_offset(0x40);
	load(0x2);
	push_byte(0x1);
	ternary();
	push_base_offset(0x40);
	move_arg(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x2c);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x3c);
	move_arg(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x30);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x8);
	add();
	push_byte(0x8);
	add();
	load(0x2);
	ternary();
	push_base_offset(0x38);
	move_arg(0x2);
	push_base_offset(0x34);
	push_byte(0x0);
	add();
	push_byte(0x1);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x4);
	add();
	push_base_offset(0x54);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x8);
	add();
	push_byte(0x0);
	add();
	push_base_offset(0x50);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x8);
	add();
	push_byte(0x4);
	add();
	push_base_offset(0x3c);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x8);
	add();
	push_byte(0x8);
	add();
	push_base_offset(0x38);
	load(0x2);
	move(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_byte(0x14);
	add();
	load(0x2);
	push_byte(0x0);
	ternary();
	push_base_offset(0x34);
	push_byte(0x14);
	add();
	move_arg(0x2);
	push_base_offset(0x34);
	push_byte(0x18);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x1c);
	add();
	push_base_offset(0x40);
	load(0x2);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x20);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x24);
	add();
	push_base_offset(0x4c);
	load(0x2);
	push_base_offset(0x3c);
	load(0x2);
	sub();
	move(0x2);
	push_base_offset(0x34);
	push_byte(0x28);
	add();
	push_base_offset(0x48);
	load(0x2);
	push_base_offset(0x38);
	load(0x2);
	sub();
	move(0x2);
	push_dword(0x3d0b8);
	push_base_offset(0x58);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	push_base_offset(0x34);
	push_byte(0x34);
	memcpy();
	load_base();
	push_byte(0x58);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_dword(0x3d0b8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x34);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04c99);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x60);
	push_byte(0x0);
	push_byte(0x0);
	grp1(0x38);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x34);
	memclr();

L04c99:
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L04c9f:
	load_base();
	push_byte(0x18);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04d05);
	jc(0x0);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L04cd3:
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x7);
	sar();
	move(0x2);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04cd3);
	jc(0x0);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);
	push_offset(L04d8e);
	jmp();

L04d05:
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);

L04d0c:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	geq();
	push_offset(L04da7);
	jc(0x0);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x7f);
	and();
	move(0x0);
	push_base_offset(0xc);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x7);
	sar();
	move(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04d7a);
	jc(0x1);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	add();
	load(0x0);
	push_word(0x80);
	or();
	move(0x0);
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_offset(L04d0c);
	jmp();

L04d7a:
	push_base_offset(0x4);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	push_byte(0x1);
	move(0x2);

L04d8e:
	push_base_offset(0x14);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L04da7);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	move(0x2);

L04da7:
	push_base_offset(0x8);
	load(0x2);
	load_base();
	push_byte(0x18);
	sub();
	store_base();
	ret();

L04db2:
	load_base();
	push_byte(0x20);
	add();
	store_base();
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_dword(0x42768);
	push_byte(0xc);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x0);
	add();
	load(0x2);
	push_offset(L04e11);
	jc(0x1);
	push_base_offset(0x10);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	cmd_0c(0x2, 0x4);
	push_dword(0x42768);
	push_byte(0xc);
	push_byte(0x10);
	mul();
	add();
	push_byte(0x4);
	add();
	load(0x2);
	push_byte(0x4);
	push_base_offset(0x10);
	sys1(0x4a);

L04e11:
	load_base();
	push_byte(0x20);
	sub();
	store_base();
	ret();

L04e17:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L04e32:
	push_base_offset(0x4);
	push_word(0x930);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L04e8f);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x14);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	push_base_offset(0x10);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	push_base_offset(0xc);
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	push_byte(0x1);
	move(0x2);
	push_offset(L04ea9);
	jmp();

L04e8f:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L04e32);
	jc(0x0);

L04ea9:
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();

L04eaf:
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L04ec0:
	push_base_offset(0x4);
	push_word(0x930);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x10);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xc);
	add();
	load(0x2);
	push_offset(L04f0f);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	add();
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_offset(L04db2);
	call();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x10);
	memclr();

L04f0f:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x8);
	lt();
	push_offset(L04ec0);
	jc(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L04f2f:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9b8);
	load(0x2);
	push_offset(L04f6e);
	jc(0x0);
	push_byte(0x0);
	push_byte(0x2);
	push_dword(-0x3);
	push_offset(L04e17);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L04eaf);
	call();
	push_word(0x9b8);
	push_byte(0x1);
	move(0x2);

L04f6e:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L04f74:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9bc);
	load(0x2);
	push_offset(L04fb3);
	jc(0x0);
	push_byte(0x1);
	push_byte(0x3);
	push_dword(-0x3);
	push_offset(L04e17);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L04eaf);
	call();
	push_word(0x9bc);
	push_byte(0x1);
	move(0x2);

L04fb3:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L04fb9:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9b8);
	load(0x2);
	push_offset(L04ffb);
	jc(0x1);
	push_dword(-0x1);
	push_byte(0x2);
	push_dword(-0x3);
	push_offset(L04e17);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L04eaf);
	call();
	push_word(0x9b8);
	push_byte(0x0);
	move(0x2);

L04ffb:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L05001:
	load_base();
	push_byte(0x0);
	add();
	store_base();
	push_word(0x9bc);
	load(0x2);
	push_offset(L05043);
	jc(0x1);
	push_dword(-0x1);
	push_byte(0x3);
	push_dword(-0x3);
	push_offset(L04e17);
	call();
	push_dword(0x9fab8);
	push_word(0xcc);
	add();
	load(0x2);
	bool_zero();
	push_dword(0x9fab8);
	push_word(0xd0);
	add();
	load(0x2);
	bool_or();
	push_offset(L04eaf);
	call();
	push_word(0x9bc);
	push_byte(0x0);
	move(0x2);

L05043:
	load_base();
	push_byte(0x0);
	sub();
	store_base();
	ret();

L05049:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L05065);
	jc(0x1);
	push_offset(L04f2f);
	call();
	push_offset(L05069);
	jmp();

L05065:
	push_offset(L04fb9);
	call();

L05069:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L0506f:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_offset(L0508b);
	jc(0x1);
	push_offset(L04f74);
	call();
	push_offset(L0508f);
	jmp();

L0508b:
	push_offset(L05001);
	call();

L0508f:
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0xc);
	add();
	store_base();
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x8);
	push_byte(0x0);
	move(0x2);

L050a6:
	push_base_offset(0x4);
	push_word(0x92c);
	load(0x2);
	push_byte(0x0);
	add();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L050ee);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L050ee);
	jc(0x1);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x8);
	add();
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	grp2(0x31);

L050ee:
	push_base_offset(0x8);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	add();
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x20);
	lt();
	push_offset(L050a6);
	jc(0x0);
	load_base();
	push_byte(0xc);
	sub();
	store_base();
	ret();

L0510e:
	load_base();
	push_word(0x428);
	add();
	store_base();
	push_base_offset(0x428);
	move_arg(0x2);
	push_string("sysprg.arc");
	push_string("file._bp");
	sys1(0x40);
	push_base_offset(0x424);
	move_arg(0x2);
	push_byte(0x0);
	push_string("ErrorLog.txt");
	push_string("BGI.edb");
	ternary();
	push_base_offset(0x414);
	move_arg(0x2);
	push_base_offset(0x420);
	push_base_offset(0x414);
	load(0x2);
	push_byte(0x2);
	push_byte(0x0);
	push_base_offset(0x424);
	load(0x2);
	call();
	push_base_offset(0x418);
	move_arg(0x2);
	push_base_offset(0x418);
	load(0x2);
	push_byte(0x0);
	eq();
	push_offset(L05171);
	jc(0x0);
	push_base_offset(0x418);
	load(0x2);
	push_base_offset(0x414);
	load(0x2);
	push_base_offset(0x410);
	push_string("[ %s ] を開けません\nエラーコード：%d");
	cmd_6f();
	push_base_offset(0x410);
	cmd_79();
	push_offset(L0525b);
	jmp();

L05171:
	push_base_offset(0x41c);
	push_base_offset(0x420);
	load(0x2);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	push_byte(0x3);
	push_base_offset(0x424);
	load(0x2);
	call();
	push_base_offset(0x418);
	move_arg(0x2);
	push_base_offset(0x418);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x41c);
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	push_offset(L051c0);
	jc(0x0);
	push_base_offset(0x41c);
	load(0x2);
	push_base_offset(0x418);
	load(0x2);
	push_base_offset(0x414);
	load(0x2);
	push_base_offset(0x410);
	push_string("[ %s ] に書き込めません\nエラーコード：%d\nステータス：%d");
	cmd_6f();
	push_base_offset(0x410);
	cmd_79();
	push_offset(L0525b);
	jmp();

L051c0:
	push_base_offset(0x10);
	sys1(0xc);
	push_base_offset(0x428);
	load(0x2);
	push_base_offset(0x10);
	push_byte(0xc);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0xa);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x8);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x6);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x2);
	add();
	load(0x1);
	push_base_offset(0x10);
	push_byte(0x0);
	add();
	load(0x1);
	push_base_offset(0x410);
	push_string("%04d/%02d/%02d %02d:%02d:%02d,%s\r\n");
	cmd_6f();
	push_base_offset(0x410);
	cmd_68();
	push_base_offset(0x418);
	move_arg(0x2);
	push_base_offset(0x41c);
	push_base_offset(0x420);
	load(0x2);
	push_base_offset(0x410);
	push_base_offset(0x418);
	load(0x2);
	push_byte(0x2);
	push_base_offset(0x424);
	load(0x2);
	call();
	push_base_offset(0x418);
	move_arg(0x2);
	push_base_offset(0x418);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x41c);
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	push_offset(L0525b);
	jc(0x0);
	push_base_offset(0x41c);
	load(0x2);
	push_base_offset(0x418);
	load(0x2);
	push_base_offset(0x414);
	load(0x2);
	push_base_offset(0x410);
	push_string("[ %s ] に書き込めません\nエラーコード：%d\nステータス：%d");
	cmd_6f();
	push_base_offset(0x410);
	cmd_79();
	push_offset(L0525b);
	jmp();

L0525b:
	push_base_offset(0x41c);
	push_base_offset(0x420);
	load(0x2);
	push_byte(0x1);
	push_base_offset(0x424);
	load(0x2);
	call();
	push_base_offset(0x418);
	move_arg(0x2);
	push_base_offset(0x418);
	load(0x2);
	push_byte(0x0);
	eq();
	push_base_offset(0x41c);
	load(0x2);
	push_byte(0x0);
	gt();
	bool_and();
	push_offset(L052a0);
	jc(0x0);
	push_base_offset(0x41c);
	load(0x2);
	push_base_offset(0x418);
	load(0x2);
	push_base_offset(0x414);
	load(0x2);
	push_base_offset(0x410);
	push_string("[ %s ] をクローズできません\nエラーコード：%d\nステータス：%d");
	cmd_6f();
	push_base_offset(0x410);
	cmd_79();

L052a0:
	sys1(0x41);
	load_base();
	push_word(0x428);
	sub();
	store_base();
	ret();

L052a9:
	load_base();
	push_word(0x40c);
	add();
	store_base();
	push_base_offset(0x408);
	move_arg(0x2);
	push_base_offset(0x40c);
	move_arg(0x2);
	push_byte(0x0);
	push_offset(L052d6);
	jc(0x0);
	push_byte(0x0);
	push_offset(L052d6);
	jc(0x0);
	push_base_offset(0x408);
	load(0x2);
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L05378);
	jc(0x1);

L052d6:
	push_base_offset(0x40c);
	load(0x2);
	push_string("data01xxx.arc");
	cmd_69();
	push_offset(L052f0);
	jc(0x1);
	push_base_offset(0x4);
	push_string(" (スクリプト) ");
	move(0x2);
	push_offset(L05360);
	jmp();

L052f0:
	push_base_offset(0x40c);
	load(0x2);
	push_string("data02xxx.arc");
	cmd_69();
	push_offset(L0530a);
	jc(0x1);
	push_base_offset(0x4);
	push_string(" (CG) ");
	move(0x2);
	push_offset(L05360);
	jmp();

L0530a:
	push_base_offset(0x40c);
	load(0x2);
	push_string("data03xxx.arc");
	cmd_69();
	push_offset(L05324);
	jc(0x1);
	push_base_offset(0x4);
	push_string(" (効果音) ");
	move(0x2);
	push_offset(L05360);
	jmp();

L05324:
	push_base_offset(0x40c);
	load(0x2);
	push_string("data04xxx.arc");
	cmd_69();
	push_offset(L0533e);
	jc(0x1);
	push_base_offset(0x4);
	push_string(" (音声) ");
	move(0x2);
	push_offset(L05360);
	jmp();

L0533e:
	push_base_offset(0x40c);
	load(0x2);
	push_string("data05xxx.arc");
	cmd_69();
	push_offset(L05358);
	jc(0x1);
	push_base_offset(0x4);
	push_string(" (ストリーム) ");
	move(0x2);
	push_offset(L05360);
	jmp();

L05358:
	push_base_offset(0x4);
	push_string("");
	move(0x2);

L05360:
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x408);
	load(0x2);
	push_base_offset(0x404);
	push_string("指定されたファイル [ %s ]%sは存在しません");
	cmd_6f();
	push_base_offset(0x404);
	push_offset(L0510e);
	call();

L05378:
	load_base();
	push_word(0x40c);
	sub();
	store_base();
	ret();
	load_base();
	push_word(0x404);
	add();
	store_base();
	push_base_offset(0x404);
	move_arg(0x2);
	push_byte(0x0);
	push_offset(L053a7);
	jc(0x0);
	push_byte(0x0);
	push_offset(L053a7);
	jc(0x0);
	push_base_offset(0x404);
	load(0x2);
	load(0x0);
	push_byte(0x0);
	neq();
	push_offset(L053ba);
	jc(0x1);

L053a7:
	push_base_offset(0x404);
	load(0x2);
	push_base_offset(0x400);
	push_string("指定された定義 [ %s ] は存在しません");
	cmd_6f();
	push_base_offset(0x400);
	push_offset(L0510e);
	call();

L053ba:
	load_base();
	push_word(0x404);
	sub();
	store_base();
	ret();
