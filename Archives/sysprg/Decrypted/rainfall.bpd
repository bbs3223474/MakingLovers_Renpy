	load_base();
	push_byte(0x24);
	add();
	store_base();
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x20);
	push_offset(L0002e);
	push_offset(L0012f);
	push_offset(L00184);
	cmd_0c(0x2, 0x3);
	push_base_offset(0x20);
	push_base_offset(0x24);
	load(0x2);
	push_byte(0x2);
	shl();
	add();
	load(0x2);
	call();
	load_base();
	push_byte(0x24);
	sub();
	store_base();
	ret();

L0002e:
	load_base();
	push_byte(0x28);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x18);
	move_arg(0x2);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x20);
	move_arg(0x2);
	push_base_offset(0x24);
	move_arg(0x2);
	push_base_offset(0x28);
	move_arg(0x2);
	push_word(0x500);
	push_word(0x2d0);
	usr2(0x40);
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x2710);
	not();
	push_byte(0x1);
	add();
	push_word(0x2710);
	push_word(0xfa0);
	not();
	push_byte(0x1);
	add();
	push_word(0x2710);
	push_word(0xfa0);
	not();
	push_byte(0x1);
	add();
	push_word(0x3e80);
	usr2(0x46);
	push_base_offset(0x4);
	load(0x2);
	push_word(0xc8);
	push_byte(0x10);
	mul();
	push_byte(0xa);
	div();
	usr2(0x47);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x1c2);
	usr2(0x48);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x28);
	load(0x2);
	usr2(0x49);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x24);
	load(0x2);
	usr2(0x4a);
	push_base_offset(0x4);
	load(0x2);
	push_word(0x3e8);
	push_word(0xfa);
	push_byte(0x4);
	div();
	div();
	usr2(0x4b);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x20);
	load(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x18);
	load(0x2);
	push_offset(L0012f);
	call();
	push_base_offset(0x4);
	load(0x2);
	push_word(0x3e8);
	usr2(0x42);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x20);
	push_base_offset(0x10);
	load(0x2);
	add();
	push_base_offset(0xc);
	load(0x2);
	push_word(0x100);
	push_base_offset(0x8);
	load(0x2);
	add();
	usr2(0x45);
	push_base_offset(0x4);
	load(0x2);
	push_base_offset(0x14);
	load(0x2);
	usr2(0x43);
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x28);
	sub();
	store_base();
	ret();

L0012f:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	usr2(0x4c);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x8);
	load(0x2);
	push_byte(0xa);
	mul();
	push_base_offset(0x4);
	load(0x2);
	push_byte(0xa);
	mul();
	usr2(0x4d);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x258);
	usr2(0x4e);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();

L00184:
	load_base();
	push_byte(0x10);
	add();
	store_base();
	push_base_offset(0x4);
	move_arg(0x2);
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x0);
	push_byte(0x0);
	push_byte(0x0);
	usr2(0x4c);
	push_base_offset(0x10);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_base_offset(0x4);
	load(0x2);
	usr2(0x4d);
	push_base_offset(0x10);
	load(0x2);
	push_word(0x258);
	usr2(0x4e);
	load_base();
	push_byte(0x10);
	sub();
	store_base();
	ret();
