	load_base();
	push_byte(0x1c);
	add();
	store_base();

L00005:
	push_byte(0x2);
	push_base_offset(0x18);
	sys1(0x4b);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_byte(0x0);
	neq();
	push_offset(L00024);
	jc(0x0);
	sys1(0x5f);
	push_offset(L00005);
	jmp();

L00024:
	push_base_offset(0x10);
	push_base_offset(0x18);
	push_byte(0x0);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	push_base_offset(0xc);
	push_base_offset(0x18);
	push_byte(0x1);
	push_byte(0x4);
	mul();
	add();
	load(0x2);
	move(0x2);
	sys1(0x4);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x8);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	add();
	move(0x2);
	push_base_offset(0x4);
	push_dword(0x9fab8);
	push_dword(0x20e74);
	add();
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x54);
	mul();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4c);
	add();
	push_byte(0x1);
	move(0x2);

L00080:
	sys1(0x5f);
	push_word(0x4f4);
	load(0x2);
	push_offset(L000c5);
	jc(0x0);
	push_word(0x504);
	load(0x2);
	push_offset(L000c5);
	jc(0x0);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x50);
	add();
	load(0x2);
	push_offset(L000c5);
	jc(0x0);
	sys1(0x4);
	push_base_offset(0x1c);
	move_arg(0x2);
	push_base_offset(0x1c);
	load(0x2);
	push_base_offset(0x8);
	load(0x2);
	lt();
	push_offset(L00080);
	jc(0x0);
	push_base_offset(0x10);
	load(0x2);
	push_byte(0x32);
	snd1(0x19);

L000c5:
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x50);
	add();
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	push_byte(0x4c);
	add();
	push_byte(0x0);
	move(0x2);
	load_base();
	push_byte(0x1c);
	sub();
	store_base();
	ret();
