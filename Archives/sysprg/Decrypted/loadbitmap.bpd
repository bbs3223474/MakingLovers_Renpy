	load_base();
	push_word(0x114);
	add();
	store_base();
	push_base_offset(0x10c);
	move_arg(0x2);
	push_base_offset(0x110);
	move_arg(0x2);
	push_base_offset(0x114);
	move_arg(0x2);
	push_base_offset(0x114);
	load(0x2);
	push_base_offset(0x10c);
	load(0x2);
	push_offset(L001db);
	call();
	push_offset(L000b6);
	jc(0x0);
	push_offset(L00261);
	call();
	push_offset(L0009c);
	jc(0x1);
	push_base_offset(0x10c);
	load(0x2);
	cmd_68();
	push_base_offset(0x104);
	move_arg(0x2);
	push_base_offset(0x100);
	push_base_offset(0x10c);
	load(0x2);
	push_base_offset(0x104);
	load(0x2);
	push_byte(0x0);
	push_offset(L002c1);
	call();
	push_offset(L0006c);
	jc(0x1);
	push_base_offset(0x114);
	load(0x2);
	push_base_offset(0x110);
	load(0x2);
	push_base_offset(0x100);
	push_byte(0x1);
	push_offset(L000bd);
	call();
	push_offset(L000b6);
	jc(0x0);

L0006c:
	push_base_offset(0x100);
	push_base_offset(0x10c);
	load(0x2);
	push_base_offset(0x104);
	load(0x2);
	push_byte(0x1);
	push_offset(L002c1);
	call();
	push_offset(L0009c);
	jc(0x1);
	push_base_offset(0x114);
	load(0x2);
	push_base_offset(0x110);
	load(0x2);
	push_base_offset(0x100);
	push_byte(0x1);
	push_offset(L000bd);
	call();
	push_offset(L000b6);
	jc(0x0);

L0009c:
	push_base_offset(0x114);
	load(0x2);
	push_base_offset(0x110);
	load(0x2);
	push_base_offset(0x10c);
	load(0x2);
	push_byte(0x0);
	push_offset(L000bd);
	call();
	push_base_offset(0x108);
	move_arg(0x2);

L000b6:
	load_base();
	push_word(0x114);
	sub();
	store_base();
	ret();

L000bd:
	load_base();
	push_word(0x324);
	add();
	store_base();
	push_base_offset(0x318);
	move_arg(0x2);
	push_base_offset(0x31c);
	move_arg(0x2);
	push_base_offset(0x320);
	move_arg(0x2);
	push_base_offset(0x324);
	move_arg(0x2);
	push_base_offset(0x314);
	push_byte(0x0);
	move(0x2);
	push_byte(0x0);
	push_offset(L00149);
	jc(0x1);
	push_byte(0x0);
	push_offset(L00149);
	jc(0x0);
	push_string("sysprg.arc");
	push_string("builddata._bp");
	sys1(0x40);
	push_base_offset(0x310);
	move_arg(0x2);
	push_base_offset(0x30c);
	push_base_offset(0x31c);
	load(0x2);
	push_byte(0x3);
	push_base_offset(0x310);
	load(0x2);
	call();
	push_offset(L0013d);
	jc(0x1);
	push_base_offset(0x324);
	load(0x2);
	push_base_offset(0x30c);
	push_byte(0x1);
	not();
	push_byte(0x1);
	add();
	grp1(0xc4);
	push_offset(L0012e);
	jc(0x0);
	push_base_offset(0x314);
	push_byte(0x1);
	move(0x2);
	push_offset(L0013d);
	jmp();

L0012e:
	push_base_offset(0x31c);
	load(0x2);
	push_byte(0x0);
	push_byte(0xb);
	push_base_offset(0x310);
	load(0x2);
	call();

L0013d:
	sys1(0x41);
	push_base_offset(0x314);
	load(0x2);
	push_offset(L00198);
	jc(0x0);

L00149:
	push_base_offset(0x318);
	load(0x2);
	push_offset(L00164);
	jc(0x1);
	push_base_offset(0x320);
	load(0x2);
	push_base_offset(0x31c);
	load(0x2);
	sys1(0x34);
	push_offset(L00198);
	jc(0x1);

L00164:
	push_byte(0x0);
	push_offset(L00180);
	jc(0x1);
	push_base_offset(0x324);
	load(0x2);
	push_base_offset(0x320);
	load(0x2);
	push_base_offset(0x31c);
	load(0x2);
	grp1(0xc0);
	push_offset(L00191);
	jmp();

L00180:
	push_base_offset(0x324);
	load(0x2);
	push_base_offset(0x320);
	load(0x2);
	push_base_offset(0x31c);
	load(0x2);
	grp1(0x10);

L00191:
	push_base_offset(0x314);
	push_byte(0x1);
	move(0x2);

L00198:
	push_base_offset(0x314);
	load(0x2);
	load_base();
	push_word(0x324);
	sub();
	store_base();
	ret();
	load_base();
	push_byte(0x8);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0x4);
	push_word(0x1c0);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x3);
	sar();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	load(0x0);
	push_byte(0x1);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x7);
	and();
	shl();
	and();
	push_byte(0x0);
	neq();
	load_base();
	push_byte(0x8);
	sub();
	store_base();
	ret();

L001db:
	load_base();
	push_word(0xf54);
	add();
	store_base();
	push_base_offset(0xf50);
	move_arg(0x2);
	push_base_offset(0xf54);
	move_arg(0x2);
	push_base_offset(0xf4c);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0xf44);
	push_base_offset(0xf50);
	load(0x2);
	cmd_6a();
	push_base_offset(0xf44);
	cmd_6d();
	push_base_offset(0x92c);
	push_base_offset(0x924);
	push_base_offset(0x618);
	push_base_offset(0x30c);
	push_base_offset(0xf44);
	sys1(0x2b);
	push_offset(L00255);
	jc(0x1);
	push_base_offset(0x30c);
	push_string(".png");
	cmd_69();
	push_offset(L00255);
	jc(0x1);
	push_base_offset(0xc38);
	push_byte(0x0);
	sys1(0x3d);
	push_base_offset(0xf50);
	load(0x2);
	push_base_offset(0xc38);
	push_base_offset(0xf44);
	push_string("%sImage\\%s");
	cmd_6f();
	push_base_offset(0xf54);
	load(0x2);
	push_base_offset(0xf44);
	push_byte(0x2);
	grp1(0xc4);
	push_base_offset(0xf48);
	move_arg(0x2);
	push_base_offset(0xf4c);
	push_base_offset(0xf48);
	load(0x2);
	push_byte(0x0);
	eq();
	move(0x2);

L00255:
	push_base_offset(0xf4c);
	load(0x2);
	load_base();
	push_word(0xf54);
	sub();
	store_base();
	ret();

L00261:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_byte(0x20);
	push_word(0x12c);
	add();
	load(0x1);
	push_offset(L0028a);
	jc(0x1);
	push_offset(L00295);
	call();
	push_offset(L0028a);
	jc(0x1);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);

L0028a:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L00295:
	load_base();
	push_byte(0x4);
	add();
	store_base();
	push_base_offset(0x4);
	push_word(0x1c0);
	push_byte(0x63);
	push_byte(0x3);
	sar();
	add();
	move(0x2);
	push_base_offset(0x4);
	load(0x2);
	load(0x0);
	push_byte(0x1);
	push_byte(0x63);
	push_byte(0x7);
	and();
	shl();
	and();
	push_byte(0x0);
	neq();
	load_base();
	push_byte(0x4);
	sub();
	store_base();
	ret();

L002c1:
	load_base();
	push_byte(0x14);
	add();
	store_base();
	push_base_offset(0x8);
	move_arg(0x2);
	push_base_offset(0xc);
	move_arg(0x2);
	push_base_offset(0x10);
	move_arg(0x2);
	push_base_offset(0x14);
	move_arg(0x2);
	push_base_offset(0x4);
	push_byte(0x0);
	move(0x2);
	push_base_offset(0x8);
	load(0x2);
	push_byte(0x1);
	eq();
	push_offset(L00321);
	jc(0x1);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0x10);
	load(0x2);
	cmd_6a();
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_byte(0x48);
	move(0x0);
	push_base_offset(0x14);
	load(0x2);
	push_base_offset(0xc);
	load(0x2);
	add();
	push_byte(0x1);
	add();
	push_byte(0x0);
	move(0x0);
	push_base_offset(0x4);
	push_byte(0x1);
	move(0x2);

L00321:
	push_base_offset(0x4);
	load(0x2);
	load_base();
	push_byte(0x14);
	sub();
	store_base();
	ret();
